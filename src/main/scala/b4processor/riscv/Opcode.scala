package b4processor.riscv

import chisel3.util.BitPat

// ツールを使って生成
// https://github.com/riscv/riscv-opcodes

/* Automatically generated by parse-opcodes */
object Instructions {
  // B
  def BEQ = BitPat("b?????????????????000?????1100011")

  def BNE = BitPat("b?????????????????001?????1100011")

  def BLT = BitPat("b?????????????????100?????1100011")

  def BGE = BitPat("b?????????????????101?????1100011")

  def BLTU = BitPat("b?????????????????110?????1100011")

  def BGEU = BitPat("b?????????????????111?????1100011")

  // J
  def JALR = BitPat("b?????????????????000?????1100111")

  def JAL = BitPat("b?????????????????????????1101111")

  // U
  def LUI = BitPat("b?????????????????????????0110111")

  def AUIPC = BitPat("b?????????????????????????0010111")

  // I
  def ADDI = BitPat("b?????????????????000?????0010011")

  def SLLI = BitPat("b000000???????????001?????0010011")

  def SLTI = BitPat("b?????????????????010?????0010011")

  def SLTIU = BitPat("b?????????????????011?????0010011")

  def XORI = BitPat("b?????????????????100?????0010011")

  def SRLI = BitPat("b000000???????????101?????0010011")

  def SRAI = BitPat("b010000???????????101?????0010011")

  def ORI = BitPat("b?????????????????110?????0010011")

  def ANDI = BitPat("b?????????????????111?????0010011")

  // R
  def ADD = BitPat("b0000000??????????000?????0110011")

  def SUB = BitPat("b0100000??????????000?????0110011")

  def SLL = BitPat("b0000000??????????001?????0110011")

  def SLT = BitPat("b0000000??????????010?????0110011")

  def SLTU = BitPat("b0000000??????????011?????0110011")

  def XOR = BitPat("b0000000??????????100?????0110011")

  def SRL = BitPat("b0000000??????????101?????0110011")

  def SRA = BitPat("b0100000??????????101?????0110011")

  def OR = BitPat("b0000000??????????110?????0110011")

  def AND = BitPat("b0000000??????????111?????0110011")

  // I(64bit)
  def ADDIW = BitPat("b?????????????????000?????0011011")

  def SLLIW = BitPat("b0000000??????????001?????0011011")

  def SRLIW = BitPat("b0000000??????????101?????0011011")

  def SRAIW = BitPat("b0100000??????????101?????0011011")

  // R(64bit)
  def ADDW = BitPat("b0000000??????????000?????0111011")

  def SUBW = BitPat("b0100000??????????000?????0111011")

  def SLLW = BitPat("b0000000??????????001?????0111011")

  def SRLW = BitPat("b0000000??????????101?????0111011")

  def SRAW = BitPat("b0100000??????????101?????0111011")

  // I
  def LB = BitPat("b?????????????????000?????0000011")

  def LH = BitPat("b?????????????????001?????0000011")

  def LW = BitPat("b?????????????????010?????0000011")

  // I(64bit)
  def LD = BitPat("b?????????????????011?????0000011")

  def LBU = BitPat("b?????????????????100?????0000011")

  def LHU = BitPat("b?????????????????101?????0000011")

  def LWU = BitPat("b?????????????????110?????0000011")

  // S
  def SB = BitPat("b?????????????????000?????0100011")

  def SH = BitPat("b?????????????????001?????0100011")

  def SW = BitPat("b?????????????????010?????0100011")

  // S(64bit)
  def SD = BitPat("b?????????????????011?????0100011")

  // I
  def FENCE = BitPat("b?????????????????000?????0001111")

  def FENCE_I = BitPat("b?????????????????001?????0001111")

  // M拡張
  def MUL = BitPat("b0000001??????????000?????0110011")

  def MULH = BitPat("b0000001??????????001?????0110011")

  def MULHSU = BitPat("b0000001??????????010?????0110011")

  def MULHU = BitPat("b0000001??????????011?????0110011")

  def DIV = BitPat("b0000001??????????100?????0110011")

  def DIVU = BitPat("b0000001??????????101?????0110011")

  def REM = BitPat("b0000001??????????110?????0110011")

  def REMU = BitPat("b0000001??????????111?????0110011")

  def MULW = BitPat("b0000001??????????000?????0111011")

  def DIVW = BitPat("b0000001??????????100?????0111011")

  def DIVUW = BitPat("b0000001??????????101?????0111011")

  def REMW = BitPat("b0000001??????????110?????0111011")

  def REMUW = BitPat("b0000001??????????111?????0111011")

  def AMOADD_W = BitPat("b00000????????????010?????0101111")

  def AMOXOR_W = BitPat("b00100????????????010?????0101111")

  def AMOOR_W = BitPat("b01000????????????010?????0101111")

  def AMOAND_W = BitPat("b01100????????????010?????0101111")

  def AMOMIN_W = BitPat("b10000????????????010?????0101111")

  def AMOMAX_W = BitPat("b10100????????????010?????0101111")

  def AMOMINU_W = BitPat("b11000????????????010?????0101111")

  def AMOMAXU_W = BitPat("b11100????????????010?????0101111")

  def AMOSWAP_W = BitPat("b00001????????????010?????0101111")

  def LR_W = BitPat("b00010??00000?????010?????0101111")

  def SC_W = BitPat("b00011????????????010?????0101111")

  def AMOADD_D = BitPat("b00000????????????011?????0101111")

  def AMOXOR_D = BitPat("b00100????????????011?????0101111")

  def AMOOR_D = BitPat("b01000????????????011?????0101111")

  def AMOAND_D = BitPat("b01100????????????011?????0101111")

  def AMOMIN_D = BitPat("b10000????????????011?????0101111")

  def AMOMAX_D = BitPat("b10100????????????011?????0101111")

  def AMOMINU_D = BitPat("b11000????????????011?????0101111")

  def AMOMAXU_D = BitPat("b11100????????????011?????0101111")

  def AMOSWAP_D = BitPat("b00001????????????011?????0101111")

  def LR_D = BitPat("b00010??00000?????011?????0101111")

  def SC_D = BitPat("b00011????????????011?????0101111")

  def ECALL = BitPat("b00000000000000000000000001110011")

  def EBREAK = BitPat("b00000000000100000000000001110011")

  def URET = BitPat("b00000000001000000000000001110011")

  def SRET = BitPat("b00010000001000000000000001110011")

  def MRET = BitPat("b00110000001000000000000001110011")

  def DRET = BitPat("b01111011001000000000000001110011")

  def SFENCE_VMA = BitPat("b0001001??????????000000001110011")

  def WFI = BitPat("b00010000010100000000000001110011")

  def CSRRW = BitPat("b?????????????????001?????1110011")

  def CSRRS = BitPat("b?????????????????010?????1110011")

  def CSRRC = BitPat("b?????????????????011?????1110011")

  def CSRRWI = BitPat("b?????????????????101?????1110011")

  def CSRRSI = BitPat("b?????????????????110?????1110011")

  def CSRRCI = BitPat("b?????????????????111?????1110011")

  def FADD_S = BitPat("b0000000??????????????????1010011")

  def FSUB_S = BitPat("b0000100??????????????????1010011")

  def FMUL_S = BitPat("b0001000??????????????????1010011")

  def FDIV_S = BitPat("b0001100??????????????????1010011")

  def FSGNJ_S = BitPat("b0010000??????????000?????1010011")

  def FSGNJN_S = BitPat("b0010000??????????001?????1010011")

  def FSGNJX_S = BitPat("b0010000??????????010?????1010011")

  def FMIN_S = BitPat("b0010100??????????000?????1010011")

  def FMAX_S = BitPat("b0010100??????????001?????1010011")

  def FSQRT_S = BitPat("b010110000000?????????????1010011")

  def FADD_D = BitPat("b0000001??????????????????1010011")

  def FSUB_D = BitPat("b0000101??????????????????1010011")

  def FMUL_D = BitPat("b0001001??????????????????1010011")

  def FDIV_D = BitPat("b0001101??????????????????1010011")

  def FSGNJ_D = BitPat("b0010001??????????000?????1010011")

  def FSGNJN_D = BitPat("b0010001??????????001?????1010011")

  def FSGNJX_D = BitPat("b0010001??????????010?????1010011")

  def FMIN_D = BitPat("b0010101??????????000?????1010011")

  def FMAX_D = BitPat("b0010101??????????001?????1010011")

  def FCVT_S_D = BitPat("b010000000001?????????????1010011")

  def FCVT_D_S = BitPat("b010000100000?????????????1010011")

  def FSQRT_D = BitPat("b010110100000?????????????1010011")

  def FADD_Q = BitPat("b0000011??????????????????1010011")

  def FSUB_Q = BitPat("b0000111??????????????????1010011")

  def FMUL_Q = BitPat("b0001011??????????????????1010011")

  def FDIV_Q = BitPat("b0001111??????????????????1010011")

  def FSGNJ_Q = BitPat("b0010011??????????000?????1010011")

  def FSGNJN_Q = BitPat("b0010011??????????001?????1010011")

  def FSGNJX_Q = BitPat("b0010011??????????010?????1010011")

  def FMIN_Q = BitPat("b0010111??????????000?????1010011")

  def FMAX_Q = BitPat("b0010111??????????001?????1010011")

  def FCVT_S_Q = BitPat("b010000000011?????????????1010011")

  def FCVT_Q_S = BitPat("b010001100000?????????????1010011")

  def FCVT_D_Q = BitPat("b010000100011?????????????1010011")

  def FCVT_Q_D = BitPat("b010001100001?????????????1010011")

  def FSQRT_Q = BitPat("b010111100000?????????????1010011")

  def FLE_S = BitPat("b1010000??????????000?????1010011")

  def FLT_S = BitPat("b1010000??????????001?????1010011")

  def FEQ_S = BitPat("b1010000??????????010?????1010011")

  def FLE_D = BitPat("b1010001??????????000?????1010011")

  def FLT_D = BitPat("b1010001??????????001?????1010011")

  def FEQ_D = BitPat("b1010001??????????010?????1010011")

  def FLE_Q = BitPat("b1010011??????????000?????1010011")

  def FLT_Q = BitPat("b1010011??????????001?????1010011")

  def FEQ_Q = BitPat("b1010011??????????010?????1010011")

  def FCVT_W_S = BitPat("b110000000000?????????????1010011")

  def FCVT_WU_S = BitPat("b110000000001?????????????1010011")

  def FCVT_L_S = BitPat("b110000000010?????????????1010011")

  def FCVT_LU_S = BitPat("b110000000011?????????????1010011")

  def FMV_X_W = BitPat("b111000000000?????000?????1010011")

  def FCLASS_S = BitPat("b111000000000?????001?????1010011")

  def FCVT_W_D = BitPat("b110000100000?????????????1010011")

  def FCVT_WU_D = BitPat("b110000100001?????????????1010011")

  def FCVT_L_D = BitPat("b110000100010?????????????1010011")

  def FCVT_LU_D = BitPat("b110000100011?????????????1010011")

  def FMV_X_D = BitPat("b111000100000?????000?????1010011")

  def FCLASS_D = BitPat("b111000100000?????001?????1010011")

  def FCVT_W_Q = BitPat("b110001100000?????????????1010011")

  def FCVT_WU_Q = BitPat("b110001100001?????????????1010011")

  def FCVT_L_Q = BitPat("b110001100010?????????????1010011")

  def FCVT_LU_Q = BitPat("b110001100011?????????????1010011")

  def FMV_X_Q = BitPat("b111001100000?????000?????1010011")

  def FCLASS_Q = BitPat("b111001100000?????001?????1010011")

  def FCVT_S_W = BitPat("b110100000000?????????????1010011")

  def FCVT_S_WU = BitPat("b110100000001?????????????1010011")

  def FCVT_S_L = BitPat("b110100000010?????????????1010011")

  def FCVT_S_LU = BitPat("b110100000011?????????????1010011")

  def FMV_W_X = BitPat("b111100000000?????000?????1010011")

  def FCVT_D_W = BitPat("b110100100000?????????????1010011")

  def FCVT_D_WU = BitPat("b110100100001?????????????1010011")

  def FCVT_D_L = BitPat("b110100100010?????????????1010011")

  def FCVT_D_LU = BitPat("b110100100011?????????????1010011")

  def FMV_D_X = BitPat("b111100100000?????000?????1010011")

  def FCVT_Q_W = BitPat("b110101100000?????????????1010011")

  def FCVT_Q_WU = BitPat("b110101100001?????????????1010011")

  def FCVT_Q_L = BitPat("b110101100010?????????????1010011")

  def FCVT_Q_LU = BitPat("b110101100011?????????????1010011")

  def FMV_Q_X = BitPat("b111101100000?????000?????1010011")

  def FLW = BitPat("b?????????????????010?????0000111")

  def FLD = BitPat("b?????????????????011?????0000111")

  def FLQ = BitPat("b?????????????????100?????0000111")

  def FSW = BitPat("b?????????????????010?????0100111")

  def FSD = BitPat("b?????????????????011?????0100111")

  def FSQ = BitPat("b?????????????????100?????0100111")

  def FMADD_S = BitPat("b?????00??????????????????1000011")

  def FMSUB_S = BitPat("b?????00??????????????????1000111")

  def FNMSUB_S = BitPat("b?????00??????????????????1001011")

  def FNMADD_S = BitPat("b?????00??????????????????1001111")

  def FMADD_D = BitPat("b?????01??????????????????1000011")

  def FMSUB_D = BitPat("b?????01??????????????????1000111")

  def FNMSUB_D = BitPat("b?????01??????????????????1001011")

  def FNMADD_D = BitPat("b?????01??????????????????1001111")

  def FMADD_Q = BitPat("b?????11??????????????????1000011")

  def FMSUB_Q = BitPat("b?????11??????????????????1000111")

  def FNMSUB_Q = BitPat("b?????11??????????????????1001011")

  def FNMADD_Q = BitPat("b?????11??????????????????1001111")

  def CUSTOM0 = BitPat("b?????????????????000?????0001011")

  def CUSTOM0_RS1 = BitPat("b?????????????????010?????0001011")

  def CUSTOM0_RS1_RS2 = BitPat("b?????????????????011?????0001011")

  def CUSTOM0_RD = BitPat("b?????????????????100?????0001011")

  def CUSTOM0_RD_RS1 = BitPat("b?????????????????110?????0001011")

  def CUSTOM0_RD_RS1_RS2 = BitPat("b?????????????????111?????0001011")

  def CUSTOM1 = BitPat("b?????????????????000?????0101011")

  def CUSTOM1_RS1 = BitPat("b?????????????????010?????0101011")

  def CUSTOM1_RS1_RS2 = BitPat("b?????????????????011?????0101011")

  def CUSTOM1_RD = BitPat("b?????????????????100?????0101011")

  def CUSTOM1_RD_RS1 = BitPat("b?????????????????110?????0101011")

  def CUSTOM1_RD_RS1_RS2 = BitPat("b?????????????????111?????0101011")

  def CUSTOM2 = BitPat("b?????????????????000?????1011011")

  def CUSTOM2_RS1 = BitPat("b?????????????????010?????1011011")

  def CUSTOM2_RS1_RS2 = BitPat("b?????????????????011?????1011011")

  def CUSTOM2_RD = BitPat("b?????????????????100?????1011011")

  def CUSTOM2_RD_RS1 = BitPat("b?????????????????110?????1011011")

  def CUSTOM2_RD_RS1_RS2 = BitPat("b?????????????????111?????1011011")

  def CUSTOM3 = BitPat("b?????????????????000?????1111011")

  def CUSTOM3_RS1 = BitPat("b?????????????????010?????1111011")

  def CUSTOM3_RS1_RS2 = BitPat("b?????????????????011?????1111011")

  def CUSTOM3_RD = BitPat("b?????????????????100?????1111011")

  def CUSTOM3_RD_RS1 = BitPat("b?????????????????110?????1111011")

  def CUSTOM3_RD_RS1_RS2 = BitPat("b?????????????????111?????1111011")

  def SLLI_RV32 = BitPat("b0000000??????????001?????0010011")

  def SRLI_RV32 = BitPat("b0000000??????????101?????0010011")

  def SRAI_RV32 = BitPat("b0100000??????????101?????0010011")

  def FRFLAGS = BitPat("b00000000000100000010?????1110011")

  def FSFLAGS = BitPat("b000000000001?????001?????1110011")

  def FSFLAGSI = BitPat("b000000000001?????101?????1110011")

  def FRRM = BitPat("b00000000001000000010?????1110011")

  def FSRM = BitPat("b000000000010?????001?????1110011")

  def FSRMI = BitPat("b000000000010?????101?????1110011")

  def FSCSR = BitPat("b000000000011?????001?????1110011")

  def FRCSR = BitPat("b00000000001100000010?????1110011")

  def RDCYCLE = BitPat("b11000000000000000010?????1110011")

  def RDTIME = BitPat("b11000000000100000010?????1110011")

  def RDINSTRET = BitPat("b11000000001000000010?????1110011")

  def RDCYCLEH = BitPat("b11001000000000000010?????1110011")

  def RDTIMEH = BitPat("b11001000000100000010?????1110011")

  def RDINSTRETH = BitPat("b11001000001000000010?????1110011")

  def SCALL = BitPat("b00000000000000000000000001110011")

  def SBREAK = BitPat("b00000000000100000000000001110011")

  def FMV_X_S = BitPat("b111000000000?????000?????1010011")

  def FMV_S_X = BitPat("b111100000000?????000?????1010011")
}

object Causes {
  val misaligned_fetch = 0x0
  val fetch_access = 0x1
  val illegal_instruction = 0x2
  val breakpoint = 0x3
  val misaligned_load = 0x4
  val load_access = 0x5
  val misaligned_store = 0x6
  val store_access = 0x7
  val user_ecall = 0x8
  val supervisor_ecall = 0x9
  val hypervisor_ecall = 0xa
  val machine_ecall = 0xb
  val fetch_page_fault = 0xc
  val load_page_fault = 0xd
  val store_page_fault = 0xf
  val all = {
    val res = collection.mutable.ArrayBuffer[Int]()
    res += misaligned_fetch
    res += fetch_access
    res += illegal_instruction
    res += breakpoint
    res += misaligned_load
    res += load_access
    res += misaligned_store
    res += store_access
    res += user_ecall
    res += supervisor_ecall
    res += hypervisor_ecall
    res += machine_ecall
    res += fetch_page_fault
    res += load_page_fault
    res += store_page_fault
    res.toArray
  }
}

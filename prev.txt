
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.19 (git sha1 2156e20)


-- Executing script file `synth.txt' --

1. Executing Verilog-2005 frontend: B4Processor.v
Parsing Verilog input from `B4Processor.v' to AST representation.
Generating RTLIL representation for module `\InstructionMemoryCache'.
Generating RTLIL representation for module `\InstructionMemoryCache_1'.
Generating RTLIL representation for module `\CheckBranch'.
Generating RTLIL representation for module `\Fetch'.
Generating RTLIL representation for module `\Fetch_1'.
Generating RTLIL representation for module `\FetchBuffer'.
Generating RTLIL representation for module `\ReorderBuffer'.
Generating RTLIL representation for module `\ReorderBuffer_1'.
Generating RTLIL representation for module `\RegisterFile'.
Generating RTLIL representation for module `\RegisterFile_1'.
Generating RTLIL representation for module `\LoadStoreQueue'.
Generating RTLIL representation for module `\RRArbiter'.
Generating RTLIL representation for module `\FIFO'.
Generating RTLIL representation for module `\DataMemoryBuffer'.
Generating RTLIL representation for module `\FIFO_1'.
Generating RTLIL representation for module `\RRArbiter_1'.
Generating RTLIL representation for module `\OutputCollector'.
Generating RTLIL representation for module `\FIFO_3'.
Generating RTLIL representation for module `\BranchOutputCollector'.
Generating RTLIL representation for module `\OpcodeFormatChecker'.
Generating RTLIL representation for module `\SourceTagSelector'.
Generating RTLIL representation for module `\ValueSelector1'.
Generating RTLIL representation for module `\ValueSelector2'.
Generating RTLIL representation for module `\Decoder'.
Generating RTLIL representation for module `\SourceTagSelector_2'.
Generating RTLIL representation for module `\Decoder_1'.
Generating RTLIL representation for module `\Decoder_2'.
Generating RTLIL representation for module `\Decoder_3'.
Generating RTLIL representation for module `\ReservationStation'.
Generating RTLIL representation for module `\InstructionChecker'.
Generating RTLIL representation for module `\Executor'.
Generating RTLIL representation for module `\FIFO_4'.
Generating RTLIL representation for module `\RRArbiter_2'.
Generating RTLIL representation for module `\Arbiter'.
Generating RTLIL representation for module `\FIFO_5'.
Generating RTLIL representation for module `\FIFO_6'.
Generating RTLIL representation for module `\ExternalMemoryInterface'.
Generating RTLIL representation for module `\B4Processor'.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \B4Processor
Used module:     \ExternalMemoryInterface
Used module:         \FIFO_6
Used module:         \FIFO_5
Used module:         \Arbiter
Used module:         \RRArbiter_2
Used module:         \FIFO_4
Used module:     \Executor
Used module:         \InstructionChecker
Used module:     \ReservationStation
Used module:     \Decoder_3
Used module:         \ValueSelector2
Used module:         \ValueSelector1
Used module:         \SourceTagSelector_2
Used module:         \OpcodeFormatChecker
Used module:     \Decoder_2
Used module:         \SourceTagSelector
Used module:     \Decoder_1
Used module:     \Decoder
Used module:     \BranchOutputCollector
Used module:         \FIFO_3
Used module:     \OutputCollector
Used module:         \RRArbiter_1
Used module:         \FIFO_1
Used module:     \DataMemoryBuffer
Used module:         \FIFO
Used module:         \RRArbiter
Used module:     \LoadStoreQueue
Used module:     \RegisterFile_1
Used module:     \RegisterFile
Used module:     \ReorderBuffer_1
Used module:     \ReorderBuffer
Used module:     \FetchBuffer
Used module:     \Fetch_1
Used module:         \CheckBranch
Used module:     \Fetch
Used module:     \InstructionMemoryCache_1
Used module:     \InstructionMemoryCache

2.2. Analyzing design hierarchy..
Top module:  \B4Processor
Used module:     \ExternalMemoryInterface
Used module:         \FIFO_6
Used module:         \FIFO_5
Used module:         \Arbiter
Used module:         \RRArbiter_2
Used module:         \FIFO_4
Used module:     \Executor
Used module:         \InstructionChecker
Used module:     \ReservationStation
Used module:     \Decoder_3
Used module:         \ValueSelector2
Used module:         \ValueSelector1
Used module:         \SourceTagSelector_2
Used module:         \OpcodeFormatChecker
Used module:     \Decoder_2
Used module:         \SourceTagSelector
Used module:     \Decoder_1
Used module:     \Decoder
Used module:     \BranchOutputCollector
Used module:         \FIFO_3
Used module:     \OutputCollector
Used module:         \RRArbiter_1
Used module:         \FIFO_1
Used module:     \DataMemoryBuffer
Used module:         \FIFO
Used module:         \RRArbiter
Used module:     \LoadStoreQueue
Used module:     \RegisterFile_1
Used module:     \RegisterFile
Used module:     \ReorderBuffer_1
Used module:     \ReorderBuffer
Used module:     \FetchBuffer
Used module:     \Fetch_1
Used module:         \CheckBranch
Used module:     \Fetch
Used module:     \InstructionMemoryCache_1
Used module:     \InstructionMemoryCache
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 2 switch rules as full_case in process $proc$B4Processor.v:23298$16695 in module ExternalMemoryInterface.
Marked 2 switch rules as full_case in process $proc$B4Processor.v:22814$16511 in module FIFO_6.
Marked 5 switch rules as full_case in process $proc$B4Processor.v:22712$16497 in module FIFO_5.
Marked 5 switch rules as full_case in process $proc$B4Processor.v:22456$16453 in module FIFO_4.
Marked 460 switch rules as full_case in process $proc$B4Processor.v:20123$15986 in module ReservationStation.
Marked 5 switch rules as full_case in process $proc$B4Processor.v:16658$12833 in module FIFO_3.
Marked 5 switch rules as full_case in process $proc$B4Processor.v:16265$12799 in module FIFO_1.
Marked 5 switch rules as full_case in process $proc$B4Processor.v:15799$12687 in module FIFO.
Marked 418 switch rules as full_case in process $proc$B4Processor.v:13747$12421 in module LoadStoreQueue.
Marked 124 switch rules as full_case in process $proc$B4Processor.v:11062$9353 in module RegisterFile_1.
Marked 124 switch rules as full_case in process $proc$B4Processor.v:10238$8821 in module RegisterFile.
Marked 307 switch rules as full_case in process $proc$B4Processor.v:8361$8113 in module ReorderBuffer_1.
Marked 307 switch rules as full_case in process $proc$B4Processor.v:4810$4925 in module ReorderBuffer.
Marked 36 switch rules as full_case in process $proc$B4Processor.v:2521$1896 in module FetchBuffer.
Marked 8 switch rules as full_case in process $proc$B4Processor.v:2301$1761 in module Fetch_1.
Marked 8 switch rules as full_case in process $proc$B4Processor.v:2114$1677 in module Fetch.
Marked 81 switch rules as full_case in process $proc$B4Processor.v:1372$1446 in module InstructionMemoryCache_1.
Marked 81 switch rules as full_case in process $proc$B4Processor.v:380$655 in module InstructionMemoryCache.
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 513 redundant assignments.
Promoted 20 assignments to connections.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~2264 debug messages>

3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\ExternalMemoryInterface.$proc$B4Processor.v:23298$16695'.
     1/1: $0\burstLen[7:0]
Creating decoders for process `\FIFO_6.$proc$B4Processor.v:22814$16511'.
     1/2: $0\tail[2:0]
     2/2: $0\head[2:0]
Creating decoders for process `\FIFO_5.$proc$B4Processor.v:22712$16497'.
     1/6: $0\buffer_rwport_addr_pipe_0[2:0]
     2/6: $1$memwr$\buffer$B4Processor.v:22714$16487_EN[76:0]$16504
     3/6: $1$memwr$\buffer$B4Processor.v:22714$16487_DATA[76:0]$16503
     4/6: $1$memwr$\buffer$B4Processor.v:22714$16487_ADDR[2:0]$16502
     5/6: $0\tail[2:0]
     6/6: $0\head[2:0]
Creating decoders for process `\RRArbiter_2.$proc$B4Processor.v:22571$16476'.
     1/1: $0\lastGrant[0:0]
Creating decoders for process `\FIFO_4.$proc$B4Processor.v:22456$16453'.
     1/6: $0\buffer_rwport_addr_pipe_0[2:0]
     2/6: $1$memwr$\buffer$B4Processor.v:22458$16443_EN[19:0]$16460
     3/6: $1$memwr$\buffer$B4Processor.v:22458$16443_DATA[19:0]$16459
     4/6: $1$memwr$\buffer$B4Processor.v:22458$16443_ADDR[2:0]$16458
     5/6: $0\tail[2:0]
     6/6: $0\head[2:0]
Creating decoders for process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
     1/121: $0\head[2:0]
     2/121: $0\reservation_7_valid[0:0]
     3/121: $0\reservation_7_programCounter[63:0]
     4/121: $0\reservation_7_destinationTag_id[3:0]
     5/121: $0\reservation_7_destinationTag_threadId[0:0]
     6/121: $0\reservation_7_value2[63:0]
     7/121: $0\reservation_7_ready2[0:0]
     8/121: $0\reservation_7_sourceTag2_id[3:0]
     9/121: $0\reservation_7_sourceTag2_threadId[0:0]
    10/121: $0\reservation_7_value1[63:0]
    11/121: $0\reservation_7_ready1[0:0]
    12/121: $0\reservation_7_sourceTag1_id[3:0]
    13/121: $0\reservation_7_sourceTag1_threadId[0:0]
    14/121: $0\reservation_7_immediateOrFunction7[11:0]
    15/121: $0\reservation_7_function3[2:0]
    16/121: $0\reservation_7_opcode[6:0]
    17/121: $0\reservation_6_valid[0:0]
    18/121: $0\reservation_6_programCounter[63:0]
    19/121: $0\reservation_6_destinationTag_id[3:0]
    20/121: $0\reservation_6_destinationTag_threadId[0:0]
    21/121: $0\reservation_6_value2[63:0]
    22/121: $0\reservation_6_ready2[0:0]
    23/121: $0\reservation_6_sourceTag2_id[3:0]
    24/121: $0\reservation_6_sourceTag2_threadId[0:0]
    25/121: $0\reservation_6_value1[63:0]
    26/121: $0\reservation_6_ready1[0:0]
    27/121: $0\reservation_6_sourceTag1_id[3:0]
    28/121: $0\reservation_6_sourceTag1_threadId[0:0]
    29/121: $0\reservation_6_immediateOrFunction7[11:0]
    30/121: $0\reservation_6_function3[2:0]
    31/121: $0\reservation_6_opcode[6:0]
    32/121: $0\reservation_5_valid[0:0]
    33/121: $0\reservation_5_programCounter[63:0]
    34/121: $0\reservation_5_destinationTag_id[3:0]
    35/121: $0\reservation_5_destinationTag_threadId[0:0]
    36/121: $0\reservation_5_value2[63:0]
    37/121: $0\reservation_5_ready2[0:0]
    38/121: $0\reservation_5_sourceTag2_id[3:0]
    39/121: $0\reservation_5_sourceTag2_threadId[0:0]
    40/121: $0\reservation_5_value1[63:0]
    41/121: $0\reservation_5_ready1[0:0]
    42/121: $0\reservation_5_sourceTag1_id[3:0]
    43/121: $0\reservation_5_sourceTag1_threadId[0:0]
    44/121: $0\reservation_5_immediateOrFunction7[11:0]
    45/121: $0\reservation_5_function3[2:0]
    46/121: $0\reservation_5_opcode[6:0]
    47/121: $0\reservation_4_valid[0:0]
    48/121: $0\reservation_4_programCounter[63:0]
    49/121: $0\reservation_4_destinationTag_id[3:0]
    50/121: $0\reservation_4_destinationTag_threadId[0:0]
    51/121: $0\reservation_4_value2[63:0]
    52/121: $0\reservation_4_ready2[0:0]
    53/121: $0\reservation_4_sourceTag2_id[3:0]
    54/121: $0\reservation_4_sourceTag2_threadId[0:0]
    55/121: $0\reservation_4_value1[63:0]
    56/121: $0\reservation_4_ready1[0:0]
    57/121: $0\reservation_4_sourceTag1_id[3:0]
    58/121: $0\reservation_4_sourceTag1_threadId[0:0]
    59/121: $0\reservation_4_immediateOrFunction7[11:0]
    60/121: $0\reservation_4_function3[2:0]
    61/121: $0\reservation_4_opcode[6:0]
    62/121: $0\reservation_3_valid[0:0]
    63/121: $0\reservation_3_programCounter[63:0]
    64/121: $0\reservation_3_destinationTag_id[3:0]
    65/121: $0\reservation_3_destinationTag_threadId[0:0]
    66/121: $0\reservation_3_value2[63:0]
    67/121: $0\reservation_3_ready2[0:0]
    68/121: $0\reservation_3_sourceTag2_id[3:0]
    69/121: $0\reservation_3_sourceTag2_threadId[0:0]
    70/121: $0\reservation_3_value1[63:0]
    71/121: $0\reservation_3_ready1[0:0]
    72/121: $0\reservation_3_sourceTag1_id[3:0]
    73/121: $0\reservation_3_sourceTag1_threadId[0:0]
    74/121: $0\reservation_3_immediateOrFunction7[11:0]
    75/121: $0\reservation_3_function3[2:0]
    76/121: $0\reservation_3_opcode[6:0]
    77/121: $0\reservation_2_valid[0:0]
    78/121: $0\reservation_2_programCounter[63:0]
    79/121: $0\reservation_2_destinationTag_id[3:0]
    80/121: $0\reservation_2_destinationTag_threadId[0:0]
    81/121: $0\reservation_2_value2[63:0]
    82/121: $0\reservation_2_ready2[0:0]
    83/121: $0\reservation_2_sourceTag2_id[3:0]
    84/121: $0\reservation_2_sourceTag2_threadId[0:0]
    85/121: $0\reservation_2_value1[63:0]
    86/121: $0\reservation_2_ready1[0:0]
    87/121: $0\reservation_2_sourceTag1_id[3:0]
    88/121: $0\reservation_2_sourceTag1_threadId[0:0]
    89/121: $0\reservation_2_immediateOrFunction7[11:0]
    90/121: $0\reservation_2_function3[2:0]
    91/121: $0\reservation_2_opcode[6:0]
    92/121: $0\reservation_1_valid[0:0]
    93/121: $0\reservation_1_programCounter[63:0]
    94/121: $0\reservation_1_destinationTag_id[3:0]
    95/121: $0\reservation_1_destinationTag_threadId[0:0]
    96/121: $0\reservation_1_value2[63:0]
    97/121: $0\reservation_1_ready2[0:0]
    98/121: $0\reservation_1_sourceTag2_id[3:0]
    99/121: $0\reservation_1_sourceTag2_threadId[0:0]
   100/121: $0\reservation_1_value1[63:0]
   101/121: $0\reservation_1_ready1[0:0]
   102/121: $0\reservation_1_sourceTag1_id[3:0]
   103/121: $0\reservation_1_sourceTag1_threadId[0:0]
   104/121: $0\reservation_1_immediateOrFunction7[11:0]
   105/121: $0\reservation_1_function3[2:0]
   106/121: $0\reservation_1_opcode[6:0]
   107/121: $0\reservation_0_valid[0:0]
   108/121: $0\reservation_0_programCounter[63:0]
   109/121: $0\reservation_0_destinationTag_id[3:0]
   110/121: $0\reservation_0_destinationTag_threadId[0:0]
   111/121: $0\reservation_0_value2[63:0]
   112/121: $0\reservation_0_ready2[0:0]
   113/121: $0\reservation_0_sourceTag2_id[3:0]
   114/121: $0\reservation_0_sourceTag2_threadId[0:0]
   115/121: $0\reservation_0_value1[63:0]
   116/121: $0\reservation_0_ready1[0:0]
   117/121: $0\reservation_0_sourceTag1_id[3:0]
   118/121: $0\reservation_0_sourceTag1_threadId[0:0]
   119/121: $0\reservation_0_immediateOrFunction7[11:0]
   120/121: $0\reservation_0_function3[2:0]
   121/121: $0\reservation_0_opcode[6:0]
Creating decoders for process `\FIFO_3.$proc$B4Processor.v:16658$12833'.
     1/6: $0\buffer_rwport_addr_pipe_0[1:0]
     2/6: $1$memwr$\buffer$B4Processor.v:16660$12823_EN[64:0]$12840
     3/6: $1$memwr$\buffer$B4Processor.v:16660$12823_DATA[64:0]$12839
     4/6: $1$memwr$\buffer$B4Processor.v:16660$12823_ADDR[1:0]$12838
     5/6: $0\tail[1:0]
     6/6: $0\head[1:0]
Creating decoders for process `\RRArbiter_1.$proc$B4Processor.v:16386$12822'.
     1/1: $0\lastGrant[0:0]
Creating decoders for process `\FIFO_1.$proc$B4Processor.v:16265$12799'.
     1/6: $0\buffer_rwport_addr_pipe_0[1:0]
     2/6: $1$memwr$\buffer$B4Processor.v:16267$12788_EN[70:0]$12806
     3/6: $1$memwr$\buffer$B4Processor.v:16267$12788_DATA[70:0]$12805
     4/6: $1$memwr$\buffer$B4Processor.v:16267$12788_ADDR[1:0]$12804
     5/6: $0\tail[1:0]
     6/6: $0\head[1:0]
Creating decoders for process `\FIFO.$proc$B4Processor.v:15799$12687'.
     1/6: $0\buffer_rwport_addr_pipe_0[2:0]
     2/6: $1$memwr$\buffer$B4Processor.v:15801$12676_EN[136:0]$12694
     3/6: $1$memwr$\buffer$B4Processor.v:15801$12676_DATA[136:0]$12693
     4/6: $1$memwr$\buffer$B4Processor.v:15801$12676_ADDR[2:0]$12692
     5/6: $0\tail[2:0]
     6/6: $0\head[2:0]
Creating decoders for process `\RRArbiter.$proc$B4Processor.v:15678$12675'.
     1/1: $0\lastGrant[0:0]
Creating decoders for process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
     1/106: $0\buffer_7_storeDataValid[0:0]
     2/106: $0\buffer_7_storeData[63:0]
     3/106: $0\buffer_7_storeDataTag_id[3:0]
     4/106: $0\buffer_7_storeDataTag_threadId[0:0]
     5/106: $0\buffer_7_addressValid[0:0]
     6/106: $0\buffer_7_address[63:0]
     7/106: $0\buffer_7_addressAndLoadResultTag_id[3:0]
     8/106: $0\buffer_7_addressAndLoadResultTag_threadId[0:0]
     9/106: $0\buffer_7_info_accessWidth[1:0]
    10/106: $0\buffer_7_info_signed[0:0]
    11/106: $0\buffer_7_info_accessType[0:0]
    12/106: $0\buffer_7_readyReorderSign[0:0]
    13/106: $0\buffer_7_valid[0:0]
    14/106: $0\buffer_6_storeDataValid[0:0]
    15/106: $0\buffer_6_storeData[63:0]
    16/106: $0\buffer_6_storeDataTag_id[3:0]
    17/106: $0\buffer_6_storeDataTag_threadId[0:0]
    18/106: $0\buffer_6_addressValid[0:0]
    19/106: $0\buffer_6_address[63:0]
    20/106: $0\buffer_6_addressAndLoadResultTag_id[3:0]
    21/106: $0\buffer_6_addressAndLoadResultTag_threadId[0:0]
    22/106: $0\buffer_6_info_accessWidth[1:0]
    23/106: $0\buffer_6_info_signed[0:0]
    24/106: $0\buffer_6_info_accessType[0:0]
    25/106: $0\buffer_6_readyReorderSign[0:0]
    26/106: $0\buffer_6_valid[0:0]
    27/106: $0\buffer_5_storeDataValid[0:0]
    28/106: $0\buffer_5_storeData[63:0]
    29/106: $0\buffer_5_storeDataTag_id[3:0]
    30/106: $0\buffer_5_storeDataTag_threadId[0:0]
    31/106: $0\buffer_5_addressValid[0:0]
    32/106: $0\buffer_5_address[63:0]
    33/106: $0\buffer_5_addressAndLoadResultTag_id[3:0]
    34/106: $0\buffer_5_addressAndLoadResultTag_threadId[0:0]
    35/106: $0\buffer_5_info_accessWidth[1:0]
    36/106: $0\buffer_5_info_signed[0:0]
    37/106: $0\buffer_5_info_accessType[0:0]
    38/106: $0\buffer_5_readyReorderSign[0:0]
    39/106: $0\buffer_5_valid[0:0]
    40/106: $0\buffer_4_storeDataValid[0:0]
    41/106: $0\buffer_4_storeData[63:0]
    42/106: $0\buffer_4_storeDataTag_id[3:0]
    43/106: $0\buffer_4_storeDataTag_threadId[0:0]
    44/106: $0\buffer_4_addressValid[0:0]
    45/106: $0\buffer_4_address[63:0]
    46/106: $0\buffer_4_addressAndLoadResultTag_id[3:0]
    47/106: $0\buffer_4_addressAndLoadResultTag_threadId[0:0]
    48/106: $0\buffer_4_info_accessWidth[1:0]
    49/106: $0\buffer_4_info_signed[0:0]
    50/106: $0\buffer_4_info_accessType[0:0]
    51/106: $0\buffer_4_readyReorderSign[0:0]
    52/106: $0\buffer_4_valid[0:0]
    53/106: $0\buffer_3_storeDataValid[0:0]
    54/106: $0\buffer_3_storeData[63:0]
    55/106: $0\buffer_3_storeDataTag_id[3:0]
    56/106: $0\buffer_3_storeDataTag_threadId[0:0]
    57/106: $0\buffer_3_addressValid[0:0]
    58/106: $0\buffer_3_address[63:0]
    59/106: $0\buffer_3_addressAndLoadResultTag_id[3:0]
    60/106: $0\buffer_3_addressAndLoadResultTag_threadId[0:0]
    61/106: $0\buffer_3_info_accessWidth[1:0]
    62/106: $0\buffer_3_info_signed[0:0]
    63/106: $0\buffer_3_info_accessType[0:0]
    64/106: $0\buffer_3_readyReorderSign[0:0]
    65/106: $0\buffer_3_valid[0:0]
    66/106: $0\buffer_2_storeDataValid[0:0]
    67/106: $0\buffer_2_storeData[63:0]
    68/106: $0\buffer_2_storeDataTag_id[3:0]
    69/106: $0\buffer_2_storeDataTag_threadId[0:0]
    70/106: $0\buffer_2_addressValid[0:0]
    71/106: $0\buffer_2_address[63:0]
    72/106: $0\buffer_2_addressAndLoadResultTag_id[3:0]
    73/106: $0\buffer_2_addressAndLoadResultTag_threadId[0:0]
    74/106: $0\buffer_2_info_accessWidth[1:0]
    75/106: $0\buffer_2_info_signed[0:0]
    76/106: $0\buffer_2_info_accessType[0:0]
    77/106: $0\buffer_2_readyReorderSign[0:0]
    78/106: $0\buffer_2_valid[0:0]
    79/106: $0\buffer_1_storeDataValid[0:0]
    80/106: $0\buffer_1_storeData[63:0]
    81/106: $0\buffer_1_storeDataTag_id[3:0]
    82/106: $0\buffer_1_storeDataTag_threadId[0:0]
    83/106: $0\buffer_1_addressValid[0:0]
    84/106: $0\buffer_1_address[63:0]
    85/106: $0\buffer_1_addressAndLoadResultTag_id[3:0]
    86/106: $0\buffer_1_addressAndLoadResultTag_threadId[0:0]
    87/106: $0\buffer_1_info_accessWidth[1:0]
    88/106: $0\buffer_1_info_signed[0:0]
    89/106: $0\buffer_1_info_accessType[0:0]
    90/106: $0\buffer_1_readyReorderSign[0:0]
    91/106: $0\buffer_1_valid[0:0]
    92/106: $0\buffer_0_storeDataValid[0:0]
    93/106: $0\buffer_0_storeData[63:0]
    94/106: $0\buffer_0_storeDataTag_id[3:0]
    95/106: $0\buffer_0_storeDataTag_threadId[0:0]
    96/106: $0\buffer_0_addressValid[0:0]
    97/106: $0\buffer_0_address[63:0]
    98/106: $0\buffer_0_addressAndLoadResultTag_id[3:0]
    99/106: $0\buffer_0_addressAndLoadResultTag_threadId[0:0]
   100/106: $0\buffer_0_info_accessWidth[1:0]
   101/106: $0\buffer_0_info_signed[0:0]
   102/106: $0\buffer_0_info_accessType[0:0]
   103/106: $0\buffer_0_readyReorderSign[0:0]
   104/106: $0\buffer_0_valid[0:0]
   105/106: $0\head[2:0]
   106/106: $0\nextTail[2:0]
Creating decoders for process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
     1/31: $0\registers_30[63:0]
     2/31: $0\registers_29[63:0]
     3/31: $0\registers_28[63:0]
     4/31: $0\registers_27[63:0]
     5/31: $0\registers_26[63:0]
     6/31: $0\registers_25[63:0]
     7/31: $0\registers_24[63:0]
     8/31: $0\registers_23[63:0]
     9/31: $0\registers_22[63:0]
    10/31: $0\registers_21[63:0]
    11/31: $0\registers_20[63:0]
    12/31: $0\registers_19[63:0]
    13/31: $0\registers_18[63:0]
    14/31: $0\registers_17[63:0]
    15/31: $0\registers_16[63:0]
    16/31: $0\registers_15[63:0]
    17/31: $0\registers_14[63:0]
    18/31: $0\registers_13[63:0]
    19/31: $0\registers_12[63:0]
    20/31: $0\registers_11[63:0]
    21/31: $0\registers_10[63:0]
    22/31: $0\registers_9[63:0]
    23/31: $0\registers_8[63:0]
    24/31: $0\registers_7[63:0]
    25/31: $0\registers_6[63:0]
    26/31: $0\registers_5[63:0]
    27/31: $0\registers_4[63:0]
    28/31: $0\registers_3[63:0]
    29/31: $0\registers_2[63:0]
    30/31: $0\registers_1[63:0]
    31/31: $0\registers_0[63:0]
Creating decoders for process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
     1/31: $0\registers_30[63:0]
     2/31: $0\registers_29[63:0]
     3/31: $0\registers_28[63:0]
     4/31: $0\registers_27[63:0]
     5/31: $0\registers_26[63:0]
     6/31: $0\registers_25[63:0]
     7/31: $0\registers_24[63:0]
     8/31: $0\registers_23[63:0]
     9/31: $0\registers_22[63:0]
    10/31: $0\registers_21[63:0]
    11/31: $0\registers_20[63:0]
    12/31: $0\registers_19[63:0]
    13/31: $0\registers_18[63:0]
    14/31: $0\registers_17[63:0]
    15/31: $0\registers_16[63:0]
    16/31: $0\registers_15[63:0]
    17/31: $0\registers_14[63:0]
    18/31: $0\registers_13[63:0]
    19/31: $0\registers_12[63:0]
    20/31: $0\registers_11[63:0]
    21/31: $0\registers_10[63:0]
    22/31: $0\registers_9[63:0]
    23/31: $0\registers_8[63:0]
    24/31: $0\registers_7[63:0]
    25/31: $0\registers_6[63:0]
    26/31: $0\registers_5[63:0]
    27/31: $0\registers_4[63:0]
    28/31: $0\registers_3[63:0]
    29/31: $0\registers_2[63:0]
    30/31: $0\registers_1[63:0]
    31/31: $0\registers_0[63:0]
Creating decoders for process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
     1/130: $0\registerTagMap_31_valid[0:0]
     2/130: $0\registerTagMap_30_valid[0:0]
     3/130: $0\registerTagMap_29_valid[0:0]
     4/130: $0\registerTagMap_28_valid[0:0]
     5/130: $0\registerTagMap_27_valid[0:0]
     6/130: $0\registerTagMap_26_valid[0:0]
     7/130: $0\registerTagMap_25_valid[0:0]
     8/130: $0\registerTagMap_24_valid[0:0]
     9/130: $0\registerTagMap_23_valid[0:0]
    10/130: $0\registerTagMap_22_valid[0:0]
    11/130: $0\registerTagMap_21_valid[0:0]
    12/130: $0\registerTagMap_20_valid[0:0]
    13/130: $0\registerTagMap_19_valid[0:0]
    14/130: $0\registerTagMap_18_valid[0:0]
    15/130: $0\registerTagMap_17_valid[0:0]
    16/130: $0\registerTagMap_16_valid[0:0]
    17/130: $0\registerTagMap_15_valid[0:0]
    18/130: $0\registerTagMap_14_valid[0:0]
    19/130: $0\registerTagMap_13_valid[0:0]
    20/130: $0\registerTagMap_12_valid[0:0]
    21/130: $0\registerTagMap_11_valid[0:0]
    22/130: $0\registerTagMap_10_valid[0:0]
    23/130: $0\registerTagMap_9_valid[0:0]
    24/130: $0\registerTagMap_8_valid[0:0]
    25/130: $0\registerTagMap_7_valid[0:0]
    26/130: $0\registerTagMap_6_valid[0:0]
    27/130: $0\registerTagMap_5_valid[0:0]
    28/130: $0\registerTagMap_4_valid[0:0]
    29/130: $0\registerTagMap_3_valid[0:0]
    30/130: $0\registerTagMap_2_valid[0:0]
    31/130: $0\registerTagMap_1_valid[0:0]
    32/130: $0\registerTagMap_0_valid[0:0]
    33/130: $0\buffer_15_storeSign[0:0]
    34/130: $0\buffer_15_value[63:0]
    35/130: $0\buffer_15_valueReady[0:0]
    36/130: $0\buffer_15_destinationRegister[4:0]
    37/130: $0\buffer_14_storeSign[0:0]
    38/130: $0\buffer_14_value[63:0]
    39/130: $0\buffer_14_valueReady[0:0]
    40/130: $0\buffer_14_destinationRegister[4:0]
    41/130: $0\buffer_13_storeSign[0:0]
    42/130: $0\buffer_13_value[63:0]
    43/130: $0\buffer_13_valueReady[0:0]
    44/130: $0\buffer_13_destinationRegister[4:0]
    45/130: $0\buffer_12_storeSign[0:0]
    46/130: $0\buffer_12_value[63:0]
    47/130: $0\buffer_12_valueReady[0:0]
    48/130: $0\buffer_12_destinationRegister[4:0]
    49/130: $0\buffer_11_storeSign[0:0]
    50/130: $0\buffer_11_value[63:0]
    51/130: $0\buffer_11_valueReady[0:0]
    52/130: $0\buffer_11_destinationRegister[4:0]
    53/130: $0\buffer_10_storeSign[0:0]
    54/130: $0\buffer_10_value[63:0]
    55/130: $0\buffer_10_valueReady[0:0]
    56/130: $0\buffer_10_destinationRegister[4:0]
    57/130: $0\buffer_9_storeSign[0:0]
    58/130: $0\buffer_9_value[63:0]
    59/130: $0\buffer_9_valueReady[0:0]
    60/130: $0\buffer_9_destinationRegister[4:0]
    61/130: $0\buffer_8_storeSign[0:0]
    62/130: $0\buffer_8_value[63:0]
    63/130: $0\buffer_8_valueReady[0:0]
    64/130: $0\buffer_8_destinationRegister[4:0]
    65/130: $0\buffer_7_storeSign[0:0]
    66/130: $0\buffer_7_value[63:0]
    67/130: $0\buffer_7_valueReady[0:0]
    68/130: $0\buffer_7_destinationRegister[4:0]
    69/130: $0\buffer_6_storeSign[0:0]
    70/130: $0\buffer_6_value[63:0]
    71/130: $0\buffer_6_valueReady[0:0]
    72/130: $0\buffer_6_destinationRegister[4:0]
    73/130: $0\buffer_5_storeSign[0:0]
    74/130: $0\buffer_5_value[63:0]
    75/130: $0\buffer_5_valueReady[0:0]
    76/130: $0\buffer_5_destinationRegister[4:0]
    77/130: $0\buffer_4_storeSign[0:0]
    78/130: $0\buffer_4_value[63:0]
    79/130: $0\buffer_4_valueReady[0:0]
    80/130: $0\buffer_4_destinationRegister[4:0]
    81/130: $0\buffer_3_storeSign[0:0]
    82/130: $0\buffer_3_value[63:0]
    83/130: $0\buffer_3_valueReady[0:0]
    84/130: $0\buffer_3_destinationRegister[4:0]
    85/130: $0\buffer_2_storeSign[0:0]
    86/130: $0\buffer_2_value[63:0]
    87/130: $0\buffer_2_valueReady[0:0]
    88/130: $0\buffer_2_destinationRegister[4:0]
    89/130: $0\buffer_1_storeSign[0:0]
    90/130: $0\buffer_1_value[63:0]
    91/130: $0\buffer_1_valueReady[0:0]
    92/130: $0\buffer_1_destinationRegister[4:0]
    93/130: $0\buffer_0_storeSign[0:0]
    94/130: $0\buffer_0_value[63:0]
    95/130: $0\buffer_0_valueReady[0:0]
    96/130: $0\buffer_0_destinationRegister[4:0]
    97/130: $0\tail[3:0]
    98/130: $0\registerTagMap_31_tagId[3:0]
    99/130: $0\registerTagMap_30_tagId[3:0]
   100/130: $0\registerTagMap_29_tagId[3:0]
   101/130: $0\registerTagMap_28_tagId[3:0]
   102/130: $0\registerTagMap_27_tagId[3:0]
   103/130: $0\registerTagMap_26_tagId[3:0]
   104/130: $0\registerTagMap_25_tagId[3:0]
   105/130: $0\registerTagMap_24_tagId[3:0]
   106/130: $0\registerTagMap_23_tagId[3:0]
   107/130: $0\registerTagMap_22_tagId[3:0]
   108/130: $0\registerTagMap_21_tagId[3:0]
   109/130: $0\registerTagMap_20_tagId[3:0]
   110/130: $0\registerTagMap_19_tagId[3:0]
   111/130: $0\registerTagMap_18_tagId[3:0]
   112/130: $0\registerTagMap_17_tagId[3:0]
   113/130: $0\registerTagMap_16_tagId[3:0]
   114/130: $0\registerTagMap_15_tagId[3:0]
   115/130: $0\registerTagMap_14_tagId[3:0]
   116/130: $0\registerTagMap_13_tagId[3:0]
   117/130: $0\registerTagMap_12_tagId[3:0]
   118/130: $0\registerTagMap_11_tagId[3:0]
   119/130: $0\registerTagMap_10_tagId[3:0]
   120/130: $0\registerTagMap_9_tagId[3:0]
   121/130: $0\registerTagMap_8_tagId[3:0]
   122/130: $0\registerTagMap_7_tagId[3:0]
   123/130: $0\registerTagMap_6_tagId[3:0]
   124/130: $0\registerTagMap_5_tagId[3:0]
   125/130: $0\registerTagMap_4_tagId[3:0]
   126/130: $0\registerTagMap_3_tagId[3:0]
   127/130: $0\registerTagMap_2_tagId[3:0]
   128/130: $0\registerTagMap_1_tagId[3:0]
   129/130: $0\registerTagMap_0_tagId[3:0]
   130/130: $0\head[3:0]
Creating decoders for process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
     1/130: $0\registerTagMap_31_valid[0:0]
     2/130: $0\registerTagMap_30_valid[0:0]
     3/130: $0\registerTagMap_29_valid[0:0]
     4/130: $0\registerTagMap_28_valid[0:0]
     5/130: $0\registerTagMap_27_valid[0:0]
     6/130: $0\registerTagMap_26_valid[0:0]
     7/130: $0\registerTagMap_25_valid[0:0]
     8/130: $0\registerTagMap_24_valid[0:0]
     9/130: $0\registerTagMap_23_valid[0:0]
    10/130: $0\registerTagMap_22_valid[0:0]
    11/130: $0\registerTagMap_21_valid[0:0]
    12/130: $0\registerTagMap_20_valid[0:0]
    13/130: $0\registerTagMap_19_valid[0:0]
    14/130: $0\registerTagMap_18_valid[0:0]
    15/130: $0\registerTagMap_17_valid[0:0]
    16/130: $0\registerTagMap_16_valid[0:0]
    17/130: $0\registerTagMap_15_valid[0:0]
    18/130: $0\registerTagMap_14_valid[0:0]
    19/130: $0\registerTagMap_13_valid[0:0]
    20/130: $0\registerTagMap_12_valid[0:0]
    21/130: $0\registerTagMap_11_valid[0:0]
    22/130: $0\registerTagMap_10_valid[0:0]
    23/130: $0\registerTagMap_9_valid[0:0]
    24/130: $0\registerTagMap_8_valid[0:0]
    25/130: $0\registerTagMap_7_valid[0:0]
    26/130: $0\registerTagMap_6_valid[0:0]
    27/130: $0\registerTagMap_5_valid[0:0]
    28/130: $0\registerTagMap_4_valid[0:0]
    29/130: $0\registerTagMap_3_valid[0:0]
    30/130: $0\registerTagMap_2_valid[0:0]
    31/130: $0\registerTagMap_1_valid[0:0]
    32/130: $0\registerTagMap_0_valid[0:0]
    33/130: $0\buffer_15_storeSign[0:0]
    34/130: $0\buffer_15_value[63:0]
    35/130: $0\buffer_15_valueReady[0:0]
    36/130: $0\buffer_15_destinationRegister[4:0]
    37/130: $0\buffer_14_storeSign[0:0]
    38/130: $0\buffer_14_value[63:0]
    39/130: $0\buffer_14_valueReady[0:0]
    40/130: $0\buffer_14_destinationRegister[4:0]
    41/130: $0\buffer_13_storeSign[0:0]
    42/130: $0\buffer_13_value[63:0]
    43/130: $0\buffer_13_valueReady[0:0]
    44/130: $0\buffer_13_destinationRegister[4:0]
    45/130: $0\buffer_12_storeSign[0:0]
    46/130: $0\buffer_12_value[63:0]
    47/130: $0\buffer_12_valueReady[0:0]
    48/130: $0\buffer_12_destinationRegister[4:0]
    49/130: $0\buffer_11_storeSign[0:0]
    50/130: $0\buffer_11_value[63:0]
    51/130: $0\buffer_11_valueReady[0:0]
    52/130: $0\buffer_11_destinationRegister[4:0]
    53/130: $0\buffer_10_storeSign[0:0]
    54/130: $0\buffer_10_value[63:0]
    55/130: $0\buffer_10_valueReady[0:0]
    56/130: $0\buffer_10_destinationRegister[4:0]
    57/130: $0\buffer_9_storeSign[0:0]
    58/130: $0\buffer_9_value[63:0]
    59/130: $0\buffer_9_valueReady[0:0]
    60/130: $0\buffer_9_destinationRegister[4:0]
    61/130: $0\buffer_8_storeSign[0:0]
    62/130: $0\buffer_8_value[63:0]
    63/130: $0\buffer_8_valueReady[0:0]
    64/130: $0\buffer_8_destinationRegister[4:0]
    65/130: $0\buffer_7_storeSign[0:0]
    66/130: $0\buffer_7_value[63:0]
    67/130: $0\buffer_7_valueReady[0:0]
    68/130: $0\buffer_7_destinationRegister[4:0]
    69/130: $0\buffer_6_storeSign[0:0]
    70/130: $0\buffer_6_value[63:0]
    71/130: $0\buffer_6_valueReady[0:0]
    72/130: $0\buffer_6_destinationRegister[4:0]
    73/130: $0\buffer_5_storeSign[0:0]
    74/130: $0\buffer_5_value[63:0]
    75/130: $0\buffer_5_valueReady[0:0]
    76/130: $0\buffer_5_destinationRegister[4:0]
    77/130: $0\buffer_4_storeSign[0:0]
    78/130: $0\buffer_4_value[63:0]
    79/130: $0\buffer_4_valueReady[0:0]
    80/130: $0\buffer_4_destinationRegister[4:0]
    81/130: $0\buffer_3_storeSign[0:0]
    82/130: $0\buffer_3_value[63:0]
    83/130: $0\buffer_3_valueReady[0:0]
    84/130: $0\buffer_3_destinationRegister[4:0]
    85/130: $0\buffer_2_storeSign[0:0]
    86/130: $0\buffer_2_value[63:0]
    87/130: $0\buffer_2_valueReady[0:0]
    88/130: $0\buffer_2_destinationRegister[4:0]
    89/130: $0\buffer_1_storeSign[0:0]
    90/130: $0\buffer_1_value[63:0]
    91/130: $0\buffer_1_valueReady[0:0]
    92/130: $0\buffer_1_destinationRegister[4:0]
    93/130: $0\buffer_0_storeSign[0:0]
    94/130: $0\buffer_0_value[63:0]
    95/130: $0\buffer_0_valueReady[0:0]
    96/130: $0\buffer_0_destinationRegister[4:0]
    97/130: $0\tail[3:0]
    98/130: $0\registerTagMap_31_tagId[3:0]
    99/130: $0\registerTagMap_30_tagId[3:0]
   100/130: $0\registerTagMap_29_tagId[3:0]
   101/130: $0\registerTagMap_28_tagId[3:0]
   102/130: $0\registerTagMap_27_tagId[3:0]
   103/130: $0\registerTagMap_26_tagId[3:0]
   104/130: $0\registerTagMap_25_tagId[3:0]
   105/130: $0\registerTagMap_24_tagId[3:0]
   106/130: $0\registerTagMap_23_tagId[3:0]
   107/130: $0\registerTagMap_22_tagId[3:0]
   108/130: $0\registerTagMap_21_tagId[3:0]
   109/130: $0\registerTagMap_20_tagId[3:0]
   110/130: $0\registerTagMap_19_tagId[3:0]
   111/130: $0\registerTagMap_18_tagId[3:0]
   112/130: $0\registerTagMap_17_tagId[3:0]
   113/130: $0\registerTagMap_16_tagId[3:0]
   114/130: $0\registerTagMap_15_tagId[3:0]
   115/130: $0\registerTagMap_14_tagId[3:0]
   116/130: $0\registerTagMap_13_tagId[3:0]
   117/130: $0\registerTagMap_12_tagId[3:0]
   118/130: $0\registerTagMap_11_tagId[3:0]
   119/130: $0\registerTagMap_10_tagId[3:0]
   120/130: $0\registerTagMap_9_tagId[3:0]
   121/130: $0\registerTagMap_8_tagId[3:0]
   122/130: $0\registerTagMap_7_tagId[3:0]
   123/130: $0\registerTagMap_6_tagId[3:0]
   124/130: $0\registerTagMap_5_tagId[3:0]
   125/130: $0\registerTagMap_4_tagId[3:0]
   126/130: $0\registerTagMap_3_tagId[3:0]
   127/130: $0\registerTagMap_2_tagId[3:0]
   128/130: $0\registerTagMap_1_tagId[3:0]
   129/130: $0\registerTagMap_0_tagId[3:0]
   130/130: $0\head[3:0]
Creating decoders for process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
     1/18: $0\buffer_7_programCounter[63:0]
     2/18: $0\buffer_7_instruction[31:0]
     3/18: $0\buffer_6_programCounter[63:0]
     4/18: $0\buffer_6_instruction[31:0]
     5/18: $0\buffer_5_programCounter[63:0]
     6/18: $0\buffer_5_instruction[31:0]
     7/18: $0\buffer_4_programCounter[63:0]
     8/18: $0\buffer_4_instruction[31:0]
     9/18: $0\buffer_3_programCounter[63:0]
    10/18: $0\buffer_3_instruction[31:0]
    11/18: $0\buffer_2_programCounter[63:0]
    12/18: $0\buffer_2_instruction[31:0]
    13/18: $0\buffer_1_programCounter[63:0]
    14/18: $0\buffer_1_instruction[31:0]
    15/18: $0\buffer_0_programCounter[63:0]
    16/18: $0\buffer_0_instruction[31:0]
    17/18: $0\tail[2:0]
    18/18: $0\head[2:0]
Creating decoders for process `\Fetch_1.$proc$B4Processor.v:2301$1761'.
     1/2: $0\waiting[2:0]
     2/2: $0\pc[63:0]
Creating decoders for process `\Fetch.$proc$B4Processor.v:2114$1677'.
     1/2: $0\waiting[2:0]
     2/2: $0\pc[63:0]
Creating decoders for process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
     1/45: $0\requestDone[0:0]
     2/45: $0\readIndex[0:0]
     3/45: $0\state[0:0]
     4/45: $0\head[1:0]
     5/45: $0\transaction_address[63:0]
     6/45: $0\buf_3_data_7[15:0]
     7/45: $0\buf_3_data_6[15:0]
     8/45: $0\buf_3_data_5[15:0]
     9/45: $0\buf_3_data_4[15:0]
    10/45: $0\buf_3_data_3[15:0]
    11/45: $0\buf_3_data_2[15:0]
    12/45: $0\buf_3_data_1[15:0]
    13/45: $0\buf_3_data_0[15:0]
    14/45: $0\buf_3_upper[59:0]
    15/45: $0\buf_3_valid[0:0]
    16/45: $0\buf_2_data_7[15:0]
    17/45: $0\buf_2_data_6[15:0]
    18/45: $0\buf_2_data_5[15:0]
    19/45: $0\buf_2_data_4[15:0]
    20/45: $0\buf_2_data_3[15:0]
    21/45: $0\buf_2_data_2[15:0]
    22/45: $0\buf_2_data_1[15:0]
    23/45: $0\buf_2_data_0[15:0]
    24/45: $0\buf_2_upper[59:0]
    25/45: $0\buf_2_valid[0:0]
    26/45: $0\buf_1_data_7[15:0]
    27/45: $0\buf_1_data_6[15:0]
    28/45: $0\buf_1_data_5[15:0]
    29/45: $0\buf_1_data_4[15:0]
    30/45: $0\buf_1_data_3[15:0]
    31/45: $0\buf_1_data_2[15:0]
    32/45: $0\buf_1_data_1[15:0]
    33/45: $0\buf_1_data_0[15:0]
    34/45: $0\buf_1_upper[59:0]
    35/45: $0\buf_1_valid[0:0]
    36/45: $0\buf_0_data_7[15:0]
    37/45: $0\buf_0_data_6[15:0]
    38/45: $0\buf_0_data_5[15:0]
    39/45: $0\buf_0_data_4[15:0]
    40/45: $0\buf_0_data_3[15:0]
    41/45: $0\buf_0_data_2[15:0]
    42/45: $0\buf_0_data_1[15:0]
    43/45: $0\buf_0_data_0[15:0]
    44/45: $0\buf_0_upper[59:0]
    45/45: $0\buf_0_valid[0:0]
Creating decoders for process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
     1/45: $0\requestDone[0:0]
     2/45: $0\readIndex[0:0]
     3/45: $0\state[0:0]
     4/45: $0\head[1:0]
     5/45: $0\transaction_address[63:0]
     6/45: $0\buf_3_data_7[15:0]
     7/45: $0\buf_3_data_6[15:0]
     8/45: $0\buf_3_data_5[15:0]
     9/45: $0\buf_3_data_4[15:0]
    10/45: $0\buf_3_data_3[15:0]
    11/45: $0\buf_3_data_2[15:0]
    12/45: $0\buf_3_data_1[15:0]
    13/45: $0\buf_3_data_0[15:0]
    14/45: $0\buf_3_upper[59:0]
    15/45: $0\buf_3_valid[0:0]
    16/45: $0\buf_2_data_7[15:0]
    17/45: $0\buf_2_data_6[15:0]
    18/45: $0\buf_2_data_5[15:0]
    19/45: $0\buf_2_data_4[15:0]
    20/45: $0\buf_2_data_3[15:0]
    21/45: $0\buf_2_data_2[15:0]
    22/45: $0\buf_2_data_1[15:0]
    23/45: $0\buf_2_data_0[15:0]
    24/45: $0\buf_2_upper[59:0]
    25/45: $0\buf_2_valid[0:0]
    26/45: $0\buf_1_data_7[15:0]
    27/45: $0\buf_1_data_6[15:0]
    28/45: $0\buf_1_data_5[15:0]
    29/45: $0\buf_1_data_4[15:0]
    30/45: $0\buf_1_data_3[15:0]
    31/45: $0\buf_1_data_2[15:0]
    32/45: $0\buf_1_data_1[15:0]
    33/45: $0\buf_1_data_0[15:0]
    34/45: $0\buf_1_upper[59:0]
    35/45: $0\buf_1_valid[0:0]
    36/45: $0\buf_0_data_7[15:0]
    37/45: $0\buf_0_data_6[15:0]
    38/45: $0\buf_0_data_5[15:0]
    39/45: $0\buf_0_data_4[15:0]
    40/45: $0\buf_0_data_3[15:0]
    41/45: $0\buf_0_data_2[15:0]
    42/45: $0\buf_0_data_1[15:0]
    43/45: $0\buf_0_data_0[15:0]
    44/45: $0\buf_0_upper[59:0]
    45/45: $0\buf_0_valid[0:0]

3.8. Executing PROC_DLATCH pass (convert process syncs to latches).

3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\ExternalMemoryInterface.\burstLen' using process `\ExternalMemoryInterface.$proc$B4Processor.v:23298$16695'.
  created $dff cell `$procdff$23229' with positive edge clock.
Creating register for signal `\FIFO_6.\head' using process `\FIFO_6.$proc$B4Processor.v:22814$16511'.
  created $dff cell `$procdff$23230' with positive edge clock.
Creating register for signal `\FIFO_6.\tail' using process `\FIFO_6.$proc$B4Processor.v:22814$16511'.
  created $dff cell `$procdff$23231' with positive edge clock.
Creating register for signal `\FIFO_5.\head' using process `\FIFO_5.$proc$B4Processor.v:22712$16497'.
  created $dff cell `$procdff$23232' with positive edge clock.
Creating register for signal `\FIFO_5.\tail' using process `\FIFO_5.$proc$B4Processor.v:22712$16497'.
  created $dff cell `$procdff$23233' with positive edge clock.
Creating register for signal `\FIFO_5.\buffer_rwport_en_pipe_0' using process `\FIFO_5.$proc$B4Processor.v:22712$16497'.
  created $dff cell `$procdff$23234' with positive edge clock.
Creating register for signal `\FIFO_5.\buffer_rwport_addr_pipe_0' using process `\FIFO_5.$proc$B4Processor.v:22712$16497'.
  created $dff cell `$procdff$23235' with positive edge clock.
Creating register for signal `\FIFO_5.$memwr$\buffer$B4Processor.v:22714$16487_ADDR' using process `\FIFO_5.$proc$B4Processor.v:22712$16497'.
  created $dff cell `$procdff$23236' with positive edge clock.
Creating register for signal `\FIFO_5.$memwr$\buffer$B4Processor.v:22714$16487_DATA' using process `\FIFO_5.$proc$B4Processor.v:22712$16497'.
  created $dff cell `$procdff$23237' with positive edge clock.
Creating register for signal `\FIFO_5.$memwr$\buffer$B4Processor.v:22714$16487_EN' using process `\FIFO_5.$proc$B4Processor.v:22712$16497'.
  created $dff cell `$procdff$23238' with positive edge clock.
Creating register for signal `\RRArbiter_2.\lastGrant' using process `\RRArbiter_2.$proc$B4Processor.v:22571$16476'.
  created $dff cell `$procdff$23239' with positive edge clock.
Creating register for signal `\FIFO_4.\head' using process `\FIFO_4.$proc$B4Processor.v:22456$16453'.
  created $dff cell `$procdff$23240' with positive edge clock.
Creating register for signal `\FIFO_4.\tail' using process `\FIFO_4.$proc$B4Processor.v:22456$16453'.
  created $dff cell `$procdff$23241' with positive edge clock.
Creating register for signal `\FIFO_4.\buffer_rwport_en_pipe_0' using process `\FIFO_4.$proc$B4Processor.v:22456$16453'.
  created $dff cell `$procdff$23242' with positive edge clock.
Creating register for signal `\FIFO_4.\buffer_rwport_addr_pipe_0' using process `\FIFO_4.$proc$B4Processor.v:22456$16453'.
  created $dff cell `$procdff$23243' with positive edge clock.
Creating register for signal `\FIFO_4.$memwr$\buffer$B4Processor.v:22458$16443_ADDR' using process `\FIFO_4.$proc$B4Processor.v:22456$16453'.
  created $dff cell `$procdff$23244' with positive edge clock.
Creating register for signal `\FIFO_4.$memwr$\buffer$B4Processor.v:22458$16443_DATA' using process `\FIFO_4.$proc$B4Processor.v:22456$16453'.
  created $dff cell `$procdff$23245' with positive edge clock.
Creating register for signal `\FIFO_4.$memwr$\buffer$B4Processor.v:22458$16443_EN' using process `\FIFO_4.$proc$B4Processor.v:22456$16453'.
  created $dff cell `$procdff$23246' with positive edge clock.
Creating register for signal `\ReservationStation.\head' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23247' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_0_opcode' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23248' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_0_function3' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23249' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_0_immediateOrFunction7' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23250' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_0_sourceTag1_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23251' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_0_sourceTag1_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23252' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_0_ready1' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23253' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_0_value1' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23254' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_0_sourceTag2_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23255' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_0_sourceTag2_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23256' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_0_ready2' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23257' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_0_value2' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23258' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_0_destinationTag_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23259' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_0_destinationTag_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23260' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_0_programCounter' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23261' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_0_valid' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23262' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_1_opcode' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23263' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_1_function3' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23264' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_1_immediateOrFunction7' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23265' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_1_sourceTag1_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23266' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_1_sourceTag1_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23267' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_1_ready1' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23268' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_1_value1' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23269' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_1_sourceTag2_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23270' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_1_sourceTag2_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23271' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_1_ready2' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23272' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_1_value2' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23273' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_1_destinationTag_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23274' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_1_destinationTag_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23275' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_1_programCounter' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23276' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_1_valid' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23277' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_2_opcode' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23278' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_2_function3' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23279' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_2_immediateOrFunction7' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23280' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_2_sourceTag1_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23281' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_2_sourceTag1_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23282' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_2_ready1' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23283' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_2_value1' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23284' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_2_sourceTag2_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23285' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_2_sourceTag2_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23286' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_2_ready2' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23287' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_2_value2' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23288' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_2_destinationTag_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23289' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_2_destinationTag_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23290' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_2_programCounter' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23291' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_2_valid' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23292' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_3_opcode' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23293' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_3_function3' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23294' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_3_immediateOrFunction7' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23295' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_3_sourceTag1_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23296' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_3_sourceTag1_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23297' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_3_ready1' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23298' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_3_value1' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23299' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_3_sourceTag2_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23300' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_3_sourceTag2_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23301' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_3_ready2' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23302' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_3_value2' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23303' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_3_destinationTag_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23304' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_3_destinationTag_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23305' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_3_programCounter' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23306' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_3_valid' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23307' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_4_opcode' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23308' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_4_function3' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23309' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_4_immediateOrFunction7' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23310' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_4_sourceTag1_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23311' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_4_sourceTag1_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23312' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_4_ready1' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23313' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_4_value1' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23314' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_4_sourceTag2_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23315' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_4_sourceTag2_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23316' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_4_ready2' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23317' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_4_value2' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23318' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_4_destinationTag_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23319' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_4_destinationTag_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23320' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_4_programCounter' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23321' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_4_valid' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23322' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_5_opcode' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23323' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_5_function3' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23324' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_5_immediateOrFunction7' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23325' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_5_sourceTag1_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23326' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_5_sourceTag1_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23327' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_5_ready1' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23328' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_5_value1' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23329' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_5_sourceTag2_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23330' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_5_sourceTag2_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23331' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_5_ready2' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23332' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_5_value2' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23333' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_5_destinationTag_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23334' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_5_destinationTag_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23335' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_5_programCounter' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23336' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_5_valid' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23337' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_6_opcode' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23338' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_6_function3' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23339' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_6_immediateOrFunction7' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23340' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_6_sourceTag1_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23341' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_6_sourceTag1_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23342' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_6_ready1' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23343' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_6_value1' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23344' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_6_sourceTag2_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23345' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_6_sourceTag2_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23346' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_6_ready2' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23347' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_6_value2' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23348' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_6_destinationTag_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23349' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_6_destinationTag_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23350' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_6_programCounter' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23351' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_6_valid' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23352' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_7_opcode' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23353' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_7_function3' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23354' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_7_immediateOrFunction7' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23355' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_7_sourceTag1_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23356' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_7_sourceTag1_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23357' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_7_ready1' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23358' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_7_value1' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23359' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_7_sourceTag2_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23360' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_7_sourceTag2_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23361' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_7_ready2' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23362' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_7_value2' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23363' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_7_destinationTag_threadId' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23364' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_7_destinationTag_id' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23365' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_7_programCounter' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23366' with positive edge clock.
Creating register for signal `\ReservationStation.\reservation_7_valid' using process `\ReservationStation.$proc$B4Processor.v:20123$15986'.
  created $dff cell `$procdff$23367' with positive edge clock.
Creating register for signal `\FIFO_3.\head' using process `\FIFO_3.$proc$B4Processor.v:16658$12833'.
  created $dff cell `$procdff$23368' with positive edge clock.
Creating register for signal `\FIFO_3.\tail' using process `\FIFO_3.$proc$B4Processor.v:16658$12833'.
  created $dff cell `$procdff$23369' with positive edge clock.
Creating register for signal `\FIFO_3.\buffer_rwport_en_pipe_0' using process `\FIFO_3.$proc$B4Processor.v:16658$12833'.
  created $dff cell `$procdff$23370' with positive edge clock.
Creating register for signal `\FIFO_3.\buffer_rwport_addr_pipe_0' using process `\FIFO_3.$proc$B4Processor.v:16658$12833'.
  created $dff cell `$procdff$23371' with positive edge clock.
Creating register for signal `\FIFO_3.$memwr$\buffer$B4Processor.v:16660$12823_ADDR' using process `\FIFO_3.$proc$B4Processor.v:16658$12833'.
  created $dff cell `$procdff$23372' with positive edge clock.
Creating register for signal `\FIFO_3.$memwr$\buffer$B4Processor.v:16660$12823_DATA' using process `\FIFO_3.$proc$B4Processor.v:16658$12833'.
  created $dff cell `$procdff$23373' with positive edge clock.
Creating register for signal `\FIFO_3.$memwr$\buffer$B4Processor.v:16660$12823_EN' using process `\FIFO_3.$proc$B4Processor.v:16658$12833'.
  created $dff cell `$procdff$23374' with positive edge clock.
Creating register for signal `\RRArbiter_1.\lastGrant' using process `\RRArbiter_1.$proc$B4Processor.v:16386$12822'.
  created $dff cell `$procdff$23375' with positive edge clock.
Creating register for signal `\FIFO_1.\head' using process `\FIFO_1.$proc$B4Processor.v:16265$12799'.
  created $dff cell `$procdff$23376' with positive edge clock.
Creating register for signal `\FIFO_1.\tail' using process `\FIFO_1.$proc$B4Processor.v:16265$12799'.
  created $dff cell `$procdff$23377' with positive edge clock.
Creating register for signal `\FIFO_1.\buffer_rwport_en_pipe_0' using process `\FIFO_1.$proc$B4Processor.v:16265$12799'.
  created $dff cell `$procdff$23378' with positive edge clock.
Creating register for signal `\FIFO_1.\buffer_rwport_addr_pipe_0' using process `\FIFO_1.$proc$B4Processor.v:16265$12799'.
  created $dff cell `$procdff$23379' with positive edge clock.
Creating register for signal `\FIFO_1.$memwr$\buffer$B4Processor.v:16267$12788_ADDR' using process `\FIFO_1.$proc$B4Processor.v:16265$12799'.
  created $dff cell `$procdff$23380' with positive edge clock.
Creating register for signal `\FIFO_1.$memwr$\buffer$B4Processor.v:16267$12788_DATA' using process `\FIFO_1.$proc$B4Processor.v:16265$12799'.
  created $dff cell `$procdff$23381' with positive edge clock.
Creating register for signal `\FIFO_1.$memwr$\buffer$B4Processor.v:16267$12788_EN' using process `\FIFO_1.$proc$B4Processor.v:16265$12799'.
  created $dff cell `$procdff$23382' with positive edge clock.
Creating register for signal `\FIFO.\head' using process `\FIFO.$proc$B4Processor.v:15799$12687'.
  created $dff cell `$procdff$23383' with positive edge clock.
Creating register for signal `\FIFO.\tail' using process `\FIFO.$proc$B4Processor.v:15799$12687'.
  created $dff cell `$procdff$23384' with positive edge clock.
Creating register for signal `\FIFO.\buffer_rwport_en_pipe_0' using process `\FIFO.$proc$B4Processor.v:15799$12687'.
  created $dff cell `$procdff$23385' with positive edge clock.
Creating register for signal `\FIFO.\buffer_rwport_addr_pipe_0' using process `\FIFO.$proc$B4Processor.v:15799$12687'.
  created $dff cell `$procdff$23386' with positive edge clock.
Creating register for signal `\FIFO.$memwr$\buffer$B4Processor.v:15801$12676_ADDR' using process `\FIFO.$proc$B4Processor.v:15799$12687'.
  created $dff cell `$procdff$23387' with positive edge clock.
Creating register for signal `\FIFO.$memwr$\buffer$B4Processor.v:15801$12676_DATA' using process `\FIFO.$proc$B4Processor.v:15799$12687'.
  created $dff cell `$procdff$23388' with positive edge clock.
Creating register for signal `\FIFO.$memwr$\buffer$B4Processor.v:15801$12676_EN' using process `\FIFO.$proc$B4Processor.v:15799$12687'.
  created $dff cell `$procdff$23389' with positive edge clock.
Creating register for signal `\RRArbiter.\lastGrant' using process `\RRArbiter.$proc$B4Processor.v:15678$12675'.
  created $dff cell `$procdff$23390' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\head' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23391' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\nextTail' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23392' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_0_valid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23393' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_0_readyReorderSign' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23394' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_0_info_accessType' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23395' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_0_info_signed' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23396' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_0_info_accessWidth' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23397' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_0_addressAndLoadResultTag_threadId' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23398' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_0_addressAndLoadResultTag_id' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23399' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_0_address' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23400' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_0_addressValid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23401' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_0_storeDataTag_threadId' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23402' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_0_storeDataTag_id' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23403' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_0_storeData' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23404' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_0_storeDataValid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23405' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_1_valid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23406' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_1_readyReorderSign' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23407' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_1_info_accessType' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23408' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_1_info_signed' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23409' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_1_info_accessWidth' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23410' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_1_addressAndLoadResultTag_threadId' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23411' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_1_addressAndLoadResultTag_id' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23412' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_1_address' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23413' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_1_addressValid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23414' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_1_storeDataTag_threadId' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23415' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_1_storeDataTag_id' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23416' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_1_storeData' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23417' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_1_storeDataValid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23418' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_2_valid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23419' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_2_readyReorderSign' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23420' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_2_info_accessType' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23421' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_2_info_signed' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23422' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_2_info_accessWidth' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23423' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_2_addressAndLoadResultTag_threadId' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23424' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_2_addressAndLoadResultTag_id' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23425' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_2_address' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23426' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_2_addressValid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23427' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_2_storeDataTag_threadId' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23428' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_2_storeDataTag_id' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23429' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_2_storeData' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23430' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_2_storeDataValid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23431' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_3_valid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23432' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_3_readyReorderSign' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23433' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_3_info_accessType' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23434' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_3_info_signed' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23435' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_3_info_accessWidth' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23436' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_3_addressAndLoadResultTag_threadId' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23437' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_3_addressAndLoadResultTag_id' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23438' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_3_address' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23439' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_3_addressValid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23440' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_3_storeDataTag_threadId' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23441' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_3_storeDataTag_id' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23442' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_3_storeData' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23443' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_3_storeDataValid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23444' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_4_valid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23445' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_4_readyReorderSign' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23446' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_4_info_accessType' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23447' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_4_info_signed' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23448' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_4_info_accessWidth' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23449' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_4_addressAndLoadResultTag_threadId' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23450' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_4_addressAndLoadResultTag_id' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23451' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_4_address' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23452' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_4_addressValid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23453' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_4_storeDataTag_threadId' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23454' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_4_storeDataTag_id' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23455' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_4_storeData' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23456' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_4_storeDataValid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23457' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_5_valid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23458' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_5_readyReorderSign' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23459' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_5_info_accessType' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23460' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_5_info_signed' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23461' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_5_info_accessWidth' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23462' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_5_addressAndLoadResultTag_threadId' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23463' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_5_addressAndLoadResultTag_id' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23464' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_5_address' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23465' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_5_addressValid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23466' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_5_storeDataTag_threadId' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23467' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_5_storeDataTag_id' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23468' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_5_storeData' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23469' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_5_storeDataValid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23470' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_6_valid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23471' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_6_readyReorderSign' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23472' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_6_info_accessType' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23473' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_6_info_signed' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23474' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_6_info_accessWidth' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23475' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_6_addressAndLoadResultTag_threadId' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23476' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_6_addressAndLoadResultTag_id' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23477' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_6_address' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23478' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_6_addressValid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23479' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_6_storeDataTag_threadId' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23480' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_6_storeDataTag_id' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23481' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_6_storeData' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23482' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_6_storeDataValid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23483' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_7_valid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23484' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_7_readyReorderSign' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23485' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_7_info_accessType' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23486' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_7_info_signed' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23487' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_7_info_accessWidth' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23488' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_7_addressAndLoadResultTag_threadId' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23489' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_7_addressAndLoadResultTag_id' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23490' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_7_address' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23491' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_7_addressValid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23492' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_7_storeDataTag_threadId' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23493' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_7_storeDataTag_id' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23494' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_7_storeData' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23495' with positive edge clock.
Creating register for signal `\LoadStoreQueue.\buffer_7_storeDataValid' using process `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
  created $dff cell `$procdff$23496' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_0' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23497' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_1' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23498' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_2' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23499' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_3' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23500' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_4' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23501' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_5' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23502' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_6' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23503' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_7' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23504' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_8' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23505' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_9' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23506' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_10' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23507' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_11' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23508' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_12' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23509' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_13' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23510' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_14' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23511' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_15' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23512' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_16' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23513' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_17' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23514' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_18' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23515' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_19' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23516' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_20' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23517' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_21' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23518' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_22' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23519' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_23' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23520' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_24' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23521' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_25' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23522' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_26' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23523' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_27' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23524' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_28' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23525' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_29' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23526' with positive edge clock.
Creating register for signal `\RegisterFile_1.\registers_30' using process `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
  created $dff cell `$procdff$23527' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_0' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23528' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_1' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23529' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_2' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23530' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_3' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23531' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_4' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23532' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_5' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23533' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_6' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23534' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_7' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23535' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_8' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23536' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_9' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23537' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_10' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23538' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_11' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23539' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_12' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23540' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_13' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23541' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_14' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23542' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_15' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23543' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_16' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23544' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_17' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23545' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_18' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23546' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_19' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23547' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_20' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23548' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_21' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23549' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_22' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23550' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_23' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23551' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_24' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23552' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_25' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23553' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_26' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23554' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_27' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23555' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_28' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23556' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_29' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23557' with positive edge clock.
Creating register for signal `\RegisterFile.\registers_30' using process `\RegisterFile.$proc$B4Processor.v:10238$8821'.
  created $dff cell `$procdff$23558' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\head' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23559' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\tail' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23560' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_0_destinationRegister' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23561' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_0_valueReady' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23562' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_0_value' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23563' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_0_storeSign' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23564' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_1_destinationRegister' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23565' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_1_valueReady' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23566' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_1_value' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23567' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_1_storeSign' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23568' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_2_destinationRegister' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23569' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_2_valueReady' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23570' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_2_value' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23571' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_2_storeSign' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23572' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_3_destinationRegister' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23573' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_3_valueReady' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23574' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_3_value' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23575' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_3_storeSign' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23576' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_4_destinationRegister' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23577' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_4_valueReady' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23578' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_4_value' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23579' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_4_storeSign' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23580' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_5_destinationRegister' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23581' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_5_valueReady' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23582' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_5_value' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23583' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_5_storeSign' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23584' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_6_destinationRegister' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23585' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_6_valueReady' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23586' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_6_value' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23587' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_6_storeSign' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23588' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_7_destinationRegister' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23589' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_7_valueReady' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23590' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_7_value' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23591' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_7_storeSign' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23592' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_8_destinationRegister' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23593' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_8_valueReady' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23594' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_8_value' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23595' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_8_storeSign' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23596' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_9_destinationRegister' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23597' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_9_valueReady' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23598' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_9_value' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23599' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_9_storeSign' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23600' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_10_destinationRegister' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23601' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_10_valueReady' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23602' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_10_value' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23603' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_10_storeSign' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23604' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_11_destinationRegister' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23605' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_11_valueReady' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23606' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_11_value' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23607' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_11_storeSign' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23608' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_12_destinationRegister' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23609' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_12_valueReady' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23610' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_12_value' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23611' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_12_storeSign' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23612' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_13_destinationRegister' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23613' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_13_valueReady' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23614' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_13_value' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23615' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_13_storeSign' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23616' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_14_destinationRegister' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23617' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_14_valueReady' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23618' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_14_value' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23619' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_14_storeSign' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23620' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_15_destinationRegister' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23621' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_15_valueReady' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23622' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_15_value' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23623' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\buffer_15_storeSign' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23624' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_0_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23625' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_0_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23626' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_1_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23627' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_1_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23628' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_2_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23629' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_2_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23630' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_3_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23631' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_3_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23632' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_4_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23633' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_4_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23634' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_5_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23635' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_5_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23636' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_6_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23637' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_6_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23638' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_7_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23639' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_7_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23640' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_8_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23641' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_8_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23642' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_9_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23643' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_9_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23644' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_10_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23645' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_10_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23646' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_11_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23647' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_11_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23648' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_12_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23649' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_12_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23650' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_13_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23651' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_13_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23652' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_14_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23653' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_14_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23654' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_15_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23655' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_15_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23656' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_16_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23657' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_16_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23658' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_17_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23659' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_17_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23660' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_18_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23661' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_18_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23662' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_19_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23663' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_19_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23664' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_20_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23665' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_20_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23666' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_21_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23667' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_21_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23668' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_22_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23669' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_22_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23670' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_23_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23671' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_23_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23672' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_24_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23673' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_24_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23674' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_25_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23675' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_25_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23676' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_26_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23677' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_26_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23678' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_27_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23679' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_27_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23680' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_28_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23681' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_28_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23682' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_29_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23683' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_29_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23684' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_30_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23685' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_30_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23686' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_31_valid' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23687' with positive edge clock.
Creating register for signal `\ReorderBuffer_1.\registerTagMap_31_tagId' using process `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
  created $dff cell `$procdff$23688' with positive edge clock.
Creating register for signal `\ReorderBuffer.\head' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23689' with positive edge clock.
Creating register for signal `\ReorderBuffer.\tail' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23690' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_0_destinationRegister' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23691' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_0_valueReady' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23692' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_0_value' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23693' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_0_storeSign' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23694' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_1_destinationRegister' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23695' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_1_valueReady' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23696' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_1_value' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23697' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_1_storeSign' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23698' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_2_destinationRegister' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23699' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_2_valueReady' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23700' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_2_value' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23701' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_2_storeSign' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23702' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_3_destinationRegister' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23703' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_3_valueReady' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23704' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_3_value' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23705' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_3_storeSign' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23706' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_4_destinationRegister' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23707' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_4_valueReady' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23708' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_4_value' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23709' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_4_storeSign' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23710' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_5_destinationRegister' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23711' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_5_valueReady' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23712' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_5_value' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23713' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_5_storeSign' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23714' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_6_destinationRegister' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23715' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_6_valueReady' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23716' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_6_value' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23717' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_6_storeSign' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23718' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_7_destinationRegister' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23719' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_7_valueReady' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23720' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_7_value' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23721' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_7_storeSign' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23722' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_8_destinationRegister' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23723' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_8_valueReady' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23724' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_8_value' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23725' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_8_storeSign' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23726' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_9_destinationRegister' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23727' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_9_valueReady' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23728' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_9_value' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23729' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_9_storeSign' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23730' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_10_destinationRegister' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23731' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_10_valueReady' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23732' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_10_value' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23733' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_10_storeSign' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23734' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_11_destinationRegister' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23735' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_11_valueReady' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23736' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_11_value' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23737' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_11_storeSign' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23738' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_12_destinationRegister' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23739' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_12_valueReady' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23740' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_12_value' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23741' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_12_storeSign' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23742' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_13_destinationRegister' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23743' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_13_valueReady' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23744' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_13_value' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23745' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_13_storeSign' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23746' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_14_destinationRegister' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23747' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_14_valueReady' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23748' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_14_value' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23749' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_14_storeSign' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23750' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_15_destinationRegister' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23751' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_15_valueReady' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23752' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_15_value' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23753' with positive edge clock.
Creating register for signal `\ReorderBuffer.\buffer_15_storeSign' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23754' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_0_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23755' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_0_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23756' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_1_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23757' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_1_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23758' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_2_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23759' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_2_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23760' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_3_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23761' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_3_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23762' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_4_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23763' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_4_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23764' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_5_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23765' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_5_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23766' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_6_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23767' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_6_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23768' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_7_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23769' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_7_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23770' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_8_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23771' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_8_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23772' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_9_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23773' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_9_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23774' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_10_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23775' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_10_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23776' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_11_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23777' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_11_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23778' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_12_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23779' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_12_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23780' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_13_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23781' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_13_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23782' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_14_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23783' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_14_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23784' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_15_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23785' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_15_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23786' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_16_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23787' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_16_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23788' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_17_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23789' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_17_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23790' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_18_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23791' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_18_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23792' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_19_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23793' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_19_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23794' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_20_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23795' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_20_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23796' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_21_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23797' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_21_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23798' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_22_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23799' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_22_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23800' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_23_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23801' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_23_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23802' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_24_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23803' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_24_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23804' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_25_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23805' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_25_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23806' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_26_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23807' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_26_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23808' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_27_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23809' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_27_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23810' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_28_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23811' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_28_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23812' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_29_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23813' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_29_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23814' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_30_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23815' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_30_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23816' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_31_valid' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23817' with positive edge clock.
Creating register for signal `\ReorderBuffer.\registerTagMap_31_tagId' using process `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
  created $dff cell `$procdff$23818' with positive edge clock.
Creating register for signal `\FetchBuffer.\head' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23819' with positive edge clock.
Creating register for signal `\FetchBuffer.\buffer_0_instruction' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23820' with positive edge clock.
Creating register for signal `\FetchBuffer.\buffer_0_programCounter' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23821' with positive edge clock.
Creating register for signal `\FetchBuffer.\buffer_1_instruction' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23822' with positive edge clock.
Creating register for signal `\FetchBuffer.\buffer_1_programCounter' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23823' with positive edge clock.
Creating register for signal `\FetchBuffer.\buffer_2_instruction' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23824' with positive edge clock.
Creating register for signal `\FetchBuffer.\buffer_2_programCounter' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23825' with positive edge clock.
Creating register for signal `\FetchBuffer.\buffer_3_instruction' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23826' with positive edge clock.
Creating register for signal `\FetchBuffer.\buffer_3_programCounter' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23827' with positive edge clock.
Creating register for signal `\FetchBuffer.\buffer_4_instruction' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23828' with positive edge clock.
Creating register for signal `\FetchBuffer.\buffer_4_programCounter' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23829' with positive edge clock.
Creating register for signal `\FetchBuffer.\buffer_5_instruction' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23830' with positive edge clock.
Creating register for signal `\FetchBuffer.\buffer_5_programCounter' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23831' with positive edge clock.
Creating register for signal `\FetchBuffer.\buffer_6_instruction' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23832' with positive edge clock.
Creating register for signal `\FetchBuffer.\buffer_6_programCounter' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23833' with positive edge clock.
Creating register for signal `\FetchBuffer.\buffer_7_instruction' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23834' with positive edge clock.
Creating register for signal `\FetchBuffer.\buffer_7_programCounter' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23835' with positive edge clock.
Creating register for signal `\FetchBuffer.\tail' using process `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
  created $dff cell `$procdff$23836' with positive edge clock.
Creating register for signal `\Fetch_1.\pc' using process `\Fetch_1.$proc$B4Processor.v:2301$1761'.
  created $dff cell `$procdff$23837' with positive edge clock.
Creating register for signal `\Fetch_1.\waiting' using process `\Fetch_1.$proc$B4Processor.v:2301$1761'.
  created $dff cell `$procdff$23838' with positive edge clock.
Creating register for signal `\Fetch.\pc' using process `\Fetch.$proc$B4Processor.v:2114$1677'.
  created $dff cell `$procdff$23839' with positive edge clock.
Creating register for signal `\Fetch.\waiting' using process `\Fetch.$proc$B4Processor.v:2114$1677'.
  created $dff cell `$procdff$23840' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_0_valid' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23841' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_0_upper' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23842' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_0_data_0' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23843' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_0_data_1' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23844' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_0_data_2' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23845' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_0_data_3' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23846' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_0_data_4' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23847' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_0_data_5' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23848' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_0_data_6' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23849' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_0_data_7' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23850' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_1_valid' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23851' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_1_upper' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23852' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_1_data_0' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23853' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_1_data_1' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23854' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_1_data_2' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23855' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_1_data_3' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23856' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_1_data_4' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23857' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_1_data_5' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23858' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_1_data_6' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23859' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_1_data_7' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23860' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_2_valid' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23861' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_2_upper' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23862' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_2_data_0' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23863' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_2_data_1' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23864' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_2_data_2' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23865' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_2_data_3' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23866' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_2_data_4' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23867' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_2_data_5' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23868' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_2_data_6' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23869' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_2_data_7' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23870' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_3_valid' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23871' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_3_upper' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23872' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_3_data_0' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23873' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_3_data_1' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23874' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_3_data_2' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23875' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_3_data_3' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23876' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_3_data_4' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23877' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_3_data_5' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23878' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_3_data_6' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23879' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\buf_3_data_7' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23880' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\state' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23881' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\readIndex' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23882' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\transaction_address' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23883' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\requestDone' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23884' with positive edge clock.
Creating register for signal `\InstructionMemoryCache_1.\head' using process `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
  created $dff cell `$procdff$23885' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_0_valid' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23886' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_0_upper' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23887' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_0_data_0' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23888' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_0_data_1' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23889' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_0_data_2' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23890' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_0_data_3' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23891' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_0_data_4' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23892' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_0_data_5' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23893' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_0_data_6' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23894' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_0_data_7' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23895' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_1_valid' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23896' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_1_upper' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23897' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_1_data_0' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23898' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_1_data_1' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23899' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_1_data_2' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23900' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_1_data_3' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23901' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_1_data_4' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23902' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_1_data_5' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23903' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_1_data_6' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23904' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_1_data_7' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23905' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_2_valid' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23906' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_2_upper' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23907' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_2_data_0' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23908' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_2_data_1' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23909' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_2_data_2' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23910' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_2_data_3' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23911' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_2_data_4' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23912' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_2_data_5' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23913' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_2_data_6' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23914' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_2_data_7' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23915' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_3_valid' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23916' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_3_upper' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23917' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_3_data_0' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23918' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_3_data_1' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23919' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_3_data_2' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23920' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_3_data_3' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23921' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_3_data_4' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23922' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_3_data_5' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23923' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_3_data_6' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23924' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\buf_3_data_7' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23925' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\state' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23926' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\readIndex' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23927' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\transaction_address' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23928' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\requestDone' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23929' with positive edge clock.
Creating register for signal `\InstructionMemoryCache.\head' using process `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
  created $dff cell `$procdff$23930' with positive edge clock.

3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 4 empty switches in `\ExternalMemoryInterface.$proc$B4Processor.v:23298$16695'.
Removing empty process `ExternalMemoryInterface.$proc$B4Processor.v:23298$16695'.
Found and cleaned up 6 empty switches in `\FIFO_6.$proc$B4Processor.v:22814$16511'.
Removing empty process `FIFO_6.$proc$B4Processor.v:22814$16511'.
Found and cleaned up 9 empty switches in `\FIFO_5.$proc$B4Processor.v:22712$16497'.
Removing empty process `FIFO_5.$proc$B4Processor.v:22712$16497'.
Found and cleaned up 1 empty switch in `\RRArbiter_2.$proc$B4Processor.v:22571$16476'.
Removing empty process `RRArbiter_2.$proc$B4Processor.v:22571$16476'.
Found and cleaned up 9 empty switches in `\FIFO_4.$proc$B4Processor.v:22456$16453'.
Removing empty process `FIFO_4.$proc$B4Processor.v:22456$16453'.
Found and cleaned up 460 empty switches in `\ReservationStation.$proc$B4Processor.v:20123$15986'.
Removing empty process `ReservationStation.$proc$B4Processor.v:20123$15986'.
Found and cleaned up 8 empty switches in `\FIFO_3.$proc$B4Processor.v:16658$12833'.
Removing empty process `FIFO_3.$proc$B4Processor.v:16658$12833'.
Found and cleaned up 1 empty switch in `\RRArbiter_1.$proc$B4Processor.v:16386$12822'.
Removing empty process `RRArbiter_1.$proc$B4Processor.v:16386$12822'.
Found and cleaned up 9 empty switches in `\FIFO_1.$proc$B4Processor.v:16265$12799'.
Removing empty process `FIFO_1.$proc$B4Processor.v:16265$12799'.
Found and cleaned up 9 empty switches in `\FIFO.$proc$B4Processor.v:15799$12687'.
Removing empty process `FIFO.$proc$B4Processor.v:15799$12687'.
Found and cleaned up 1 empty switch in `\RRArbiter.$proc$B4Processor.v:15678$12675'.
Removing empty process `RRArbiter.$proc$B4Processor.v:15678$12675'.
Found and cleaned up 419 empty switches in `\LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
Removing empty process `LoadStoreQueue.$proc$B4Processor.v:13747$12421'.
Found and cleaned up 124 empty switches in `\RegisterFile_1.$proc$B4Processor.v:11062$9353'.
Removing empty process `RegisterFile_1.$proc$B4Processor.v:11062$9353'.
Found and cleaned up 124 empty switches in `\RegisterFile.$proc$B4Processor.v:10238$8821'.
Removing empty process `RegisterFile.$proc$B4Processor.v:10238$8821'.
Found and cleaned up 340 empty switches in `\ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
Removing empty process `ReorderBuffer_1.$proc$B4Processor.v:8361$8113'.
Found and cleaned up 340 empty switches in `\ReorderBuffer.$proc$B4Processor.v:4810$4925'.
Removing empty process `ReorderBuffer.$proc$B4Processor.v:4810$4925'.
Found and cleaned up 38 empty switches in `\FetchBuffer.$proc$B4Processor.v:2521$1896'.
Removing empty process `FetchBuffer.$proc$B4Processor.v:2521$1896'.
Found and cleaned up 8 empty switches in `\Fetch_1.$proc$B4Processor.v:2301$1761'.
Removing empty process `Fetch_1.$proc$B4Processor.v:2301$1761'.
Found and cleaned up 8 empty switches in `\Fetch.$proc$B4Processor.v:2114$1677'.
Removing empty process `Fetch.$proc$B4Processor.v:2114$1677'.
Found and cleaned up 173 empty switches in `\InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
Removing empty process `InstructionMemoryCache_1.$proc$B4Processor.v:1372$1446'.
Found and cleaned up 173 empty switches in `\InstructionMemoryCache.$proc$B4Processor.v:380$655'.
Removing empty process `InstructionMemoryCache.$proc$B4Processor.v:380$655'.
Cleaned up 2264 empty switches.

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module B4Processor.
Optimizing module ExternalMemoryInterface.
<suppressed ~20 debug messages>
Optimizing module FIFO_6.
<suppressed ~2 debug messages>
Optimizing module FIFO_5.
<suppressed ~3 debug messages>
Optimizing module Arbiter.
<suppressed ~1 debug messages>
Optimizing module RRArbiter_2.
Optimizing module FIFO_4.
<suppressed ~3 debug messages>
Optimizing module Executor.
<suppressed ~3 debug messages>
Optimizing module InstructionChecker.
<suppressed ~2 debug messages>
Optimizing module ReservationStation.
<suppressed ~555 debug messages>
Optimizing module Decoder_3.
<suppressed ~3 debug messages>
Optimizing module Decoder_2.
<suppressed ~6 debug messages>
Optimizing module Decoder_1.
<suppressed ~3 debug messages>
Optimizing module SourceTagSelector_2.
<suppressed ~2 debug messages>
Optimizing module Decoder.
<suppressed ~6 debug messages>
Optimizing module ValueSelector2.
<suppressed ~1 debug messages>
Optimizing module ValueSelector1.
<suppressed ~1 debug messages>
Optimizing module SourceTagSelector.
Optimizing module OpcodeFormatChecker.
Optimizing module BranchOutputCollector.
Optimizing module FIFO_3.
<suppressed ~4 debug messages>
Optimizing module OutputCollector.
Optimizing module RRArbiter_1.
Optimizing module FIFO_1.
<suppressed ~3 debug messages>
Optimizing module DataMemoryBuffer.
<suppressed ~8 debug messages>
Optimizing module FIFO.
<suppressed ~3 debug messages>
Optimizing module RRArbiter.
Optimizing module LoadStoreQueue.
<suppressed ~81 debug messages>
Optimizing module RegisterFile_1.
<suppressed ~4 debug messages>
Optimizing module RegisterFile.
<suppressed ~4 debug messages>
Optimizing module ReorderBuffer_1.
<suppressed ~55 debug messages>
Optimizing module ReorderBuffer.
<suppressed ~55 debug messages>
Optimizing module FetchBuffer.
<suppressed ~4 debug messages>
Optimizing module Fetch_1.
<suppressed ~10 debug messages>
Optimizing module Fetch.
<suppressed ~10 debug messages>
Optimizing module CheckBranch.
Optimizing module InstructionMemoryCache_1.
<suppressed ~30 debug messages>
Optimizing module InstructionMemoryCache.
<suppressed ~30 debug messages>

4. Executing OPT pass (performing simple optimizations).

4.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module B4Processor.
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO_6.
Optimizing module FIFO_5.
Optimizing module Arbiter.
Optimizing module RRArbiter_2.
Optimizing module FIFO_4.
Optimizing module Executor.
Optimizing module InstructionChecker.
Optimizing module ReservationStation.
Optimizing module Decoder_3.
Optimizing module Decoder_2.
Optimizing module Decoder_1.
Optimizing module SourceTagSelector_2.
Optimizing module Decoder.
Optimizing module ValueSelector2.
Optimizing module ValueSelector1.
Optimizing module SourceTagSelector.
Optimizing module OpcodeFormatChecker.
Optimizing module BranchOutputCollector.
Optimizing module FIFO_3.
Optimizing module OutputCollector.
Optimizing module RRArbiter_1.
Optimizing module FIFO_1.
Optimizing module DataMemoryBuffer.
Optimizing module FIFO.
Optimizing module RRArbiter.
Optimizing module LoadStoreQueue.
Optimizing module RegisterFile_1.
Optimizing module RegisterFile.
Optimizing module ReorderBuffer_1.
Optimizing module ReorderBuffer.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module Fetch.
Optimizing module CheckBranch.
Optimizing module InstructionMemoryCache_1.
Optimizing module InstructionMemoryCache.

4.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\ExternalMemoryInterface'.
<suppressed ~135 debug messages>
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\FIFO_5'.
<suppressed ~6 debug messages>
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\FIFO_4'.
<suppressed ~6 debug messages>
Finding identical cells in module `\Executor'.
<suppressed ~9 debug messages>
Finding identical cells in module `\InstructionChecker'.
<suppressed ~30 debug messages>
Finding identical cells in module `\ReservationStation'.
<suppressed ~4026 debug messages>
Finding identical cells in module `\Decoder_3'.
<suppressed ~15 debug messages>
Finding identical cells in module `\Decoder_2'.
<suppressed ~33 debug messages>
Finding identical cells in module `\Decoder_1'.
<suppressed ~15 debug messages>
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\Decoder'.
<suppressed ~33 debug messages>
Finding identical cells in module `\ValueSelector2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\FIFO_3'.
<suppressed ~9 debug messages>
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\FIFO_1'.
<suppressed ~9 debug messages>
Finding identical cells in module `\DataMemoryBuffer'.
<suppressed ~21 debug messages>
Finding identical cells in module `\FIFO'.
<suppressed ~9 debug messages>
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\LoadStoreQueue'.
<suppressed ~3654 debug messages>
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\ReorderBuffer_1'.
<suppressed ~2925 debug messages>
Finding identical cells in module `\ReorderBuffer'.
<suppressed ~2925 debug messages>
Finding identical cells in module `\FetchBuffer'.
<suppressed ~102 debug messages>
Finding identical cells in module `\Fetch_1'.
<suppressed ~51 debug messages>
Finding identical cells in module `\Fetch'.
<suppressed ~54 debug messages>
Finding identical cells in module `\CheckBranch'.
<suppressed ~12 debug messages>
Finding identical cells in module `\InstructionMemoryCache_1'.
<suppressed ~858 debug messages>
Finding identical cells in module `\InstructionMemoryCache'.
<suppressed ~858 debug messages>
Removed a total of 5265 cells.

4.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \B4Processor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \ExternalMemoryInterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_6..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Arbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Executor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $ternary$B4Processor.v:22351$16424.
Running muxtree optimizer on module \InstructionChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReservationStation..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port B of cell $procmux$17306: \io_decoder_3_entry_valid -> 1'1
      Replacing known input bits on port B of cell $procmux$17135: \io_decoder_3_entry_valid -> 1'1
      Replacing known input bits on port B of cell $procmux$16964: \io_decoder_3_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:19333$14702: \io_decoder_1_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:19332$14700: \io_decoder_1_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:19331$14698: \io_decoder_1_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:19330$14696: \io_decoder_1_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:19329$14694: \io_decoder_1_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:19328$14692: \io_decoder_1_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:19327$14690: \io_decoder_1_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:19326$14688: \io_decoder_1_entry_valid -> 1'1
      Replacing known input bits on port B of cell $procmux$16793: \io_decoder_3_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:18962$14084: \io_decoder_0_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:18961$14082: \io_decoder_0_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:18960$14080: \io_decoder_0_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:18959$14078: \io_decoder_0_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:18958$14076: \io_decoder_0_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:18957$14074: \io_decoder_0_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:18956$14072: \io_decoder_0_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:18955$14070: \io_decoder_0_entry_valid -> 1'1
      Replacing known input bits on port B of cell $procmux$17990: \io_decoder_3_entry_valid -> 1'1
      Replacing known input bits on port B of cell $procmux$17819: \io_decoder_3_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:19704$15320: \io_decoder_2_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:19703$15318: \io_decoder_2_entry_valid -> 1'1
      Replacing known input bits on port B of cell $procmux$17648: \io_decoder_3_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:19702$15316: \io_decoder_2_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:19701$15314: \io_decoder_2_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:19700$15312: \io_decoder_2_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:19699$15310: \io_decoder_2_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:19698$15308: \io_decoder_2_entry_valid -> 1'1
      Replacing known input bits on port B of cell $ternary$B4Processor.v:19697$15306: \io_decoder_2_entry_valid -> 1'1
      Replacing known input bits on port B of cell $procmux$17477: \io_decoder_3_entry_valid -> 1'1
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $ternary$B4Processor.v:17207$12991.
Running muxtree optimizer on module \Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OpcodeFormatChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \BranchOutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \FIFO_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RRArbiter_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \DataMemoryBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LoadStoreQueue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FetchBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \CheckBranch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 2 multiplexer ports.
<suppressed ~3411 debug messages>

4.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \B4Processor.
  Optimizing cells in module \ExternalMemoryInterface.
  Optimizing cells in module \FIFO_6.
  Optimizing cells in module \FIFO_5.
    Consolidated identical input bits for $mux cell $procmux$16727:
      Old ports: A=77'00000000000000000000000000000000000000000000000000000000000000000000000000000, B=77'11111111111111111111111111111111111111111111111111111111111111111111111111111, Y=$procmux$16727_Y
      New ports: A=1'0, B=1'1, Y=$procmux$16727_Y [0]
      New connections: $procmux$16727_Y [76:1] = { $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] $procmux$16727_Y [0] }
  Optimizing cells in module \FIFO_5.
  Optimizing cells in module \Arbiter.
  Optimizing cells in module \RRArbiter_2.
  Optimizing cells in module \FIFO_4.
    Consolidated identical input bits for $mux cell $procmux$16756:
      Old ports: A=20'00000000000000000000, B=20'11111111111111111111, Y=$procmux$16756_Y
      New ports: A=1'0, B=1'1, Y=$procmux$16756_Y [0]
      New connections: $procmux$16756_Y [19:1] = { $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] $procmux$16756_Y [0] }
  Optimizing cells in module \FIFO_4.
  Optimizing cells in module \Executor.
  Optimizing cells in module \InstructionChecker.
  Optimizing cells in module \ReservationStation.
  Optimizing cells in module \Decoder_3.
  Optimizing cells in module \Decoder_2.
  Optimizing cells in module \Decoder_1.
  Optimizing cells in module \SourceTagSelector_2.
  Optimizing cells in module \Decoder.
  Optimizing cells in module \ValueSelector2.
  Optimizing cells in module \ValueSelector1.
  Optimizing cells in module \SourceTagSelector.
  Optimizing cells in module \OpcodeFormatChecker.
  Optimizing cells in module \BranchOutputCollector.
  Optimizing cells in module \FIFO_3.
    Consolidated identical input bits for $mux cell $procmux$18163:
      Old ports: A=65'00000000000000000000000000000000000000000000000000000000000000000, B=65'11111111111111111111111111111111111111111111111111111111111111111, Y=$procmux$18163_Y
      New ports: A=1'0, B=1'1, Y=$procmux$18163_Y [0]
      New connections: $procmux$18163_Y [64:1] = { $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] $procmux$18163_Y [0] }
  Optimizing cells in module \FIFO_3.
  Optimizing cells in module \OutputCollector.
  Optimizing cells in module \RRArbiter_1.
  Optimizing cells in module \FIFO_1.
    Consolidated identical input bits for $mux cell $procmux$18190:
      Old ports: A=71'00000000000000000000000000000000000000000000000000000000000000000000000, B=71'11111111111111111111111111111111111111111111111111111111111111111111111, Y=$procmux$18190_Y
      New ports: A=1'0, B=1'1, Y=$procmux$18190_Y [0]
      New connections: $procmux$18190_Y [70:1] = { $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] $procmux$18190_Y [0] }
  Optimizing cells in module \FIFO_1.
  Optimizing cells in module \DataMemoryBuffer.
  Optimizing cells in module \FIFO.
    Consolidated identical input bits for $mux cell $procmux$18217:
      Old ports: A=137'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, B=137'11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111, Y=$procmux$18217_Y
      New ports: A=1'0, B=1'1, Y=$procmux$18217_Y [0]
      New connections: $procmux$18217_Y [136:1] = { $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] $procmux$18217_Y [0] }
  Optimizing cells in module \FIFO.
  Optimizing cells in module \RRArbiter.
  Optimizing cells in module \LoadStoreQueue.
  Optimizing cells in module \RegisterFile_1.
  Optimizing cells in module \RegisterFile.
  Optimizing cells in module \ReorderBuffer_1.
  Optimizing cells in module \ReorderBuffer.
  Optimizing cells in module \FetchBuffer.
  Optimizing cells in module \Fetch_1.
  Optimizing cells in module \Fetch.
  Optimizing cells in module \CheckBranch.
  Optimizing cells in module \InstructionMemoryCache_1.
  Optimizing cells in module \InstructionMemoryCache.
Performed a total of 5 changes.

4.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\ExternalMemoryInterface'.
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\FIFO_5'.
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\FIFO_4'.
Finding identical cells in module `\Executor'.
Finding identical cells in module `\InstructionChecker'.
Finding identical cells in module `\ReservationStation'.
<suppressed ~6 debug messages>
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\ValueSelector2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\FIFO_3'.
<suppressed ~3 debug messages>
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\FIFO_1'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\FIFO'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\LoadStoreQueue'.
<suppressed ~21 debug messages>
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\ReorderBuffer_1'.
<suppressed ~198 debug messages>
Finding identical cells in module `\ReorderBuffer'.
<suppressed ~198 debug messages>
Finding identical cells in module `\FetchBuffer'.
<suppressed ~6 debug messages>
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\InstructionMemoryCache_1'.
Finding identical cells in module `\InstructionMemoryCache'.
Removed a total of 144 cells.

4.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$23229 ($dff) from module ExternalMemoryInterface (D = $procmux$16703_Y, Q = \burstLen, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$23936 ($sdff) from module ExternalMemoryInterface (D = $procmux$16699_Y, Q = \burstLen).
Adding SRST signal on $procdff$23230 ($dff) from module FIFO_6 (D = $procmux$16717_Y, Q = \head, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$23944 ($sdff) from module FIFO_6 (D = $add$B4Processor.v:22810$16507_Y, Q = \head).
Adding SRST signal on $procdff$23231 ($dff) from module FIFO_6 (D = $procmux$16710_Y, Q = \tail, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$23950 ($sdff) from module FIFO_6 (D = $add$B4Processor.v:22811$16508_Y, Q = \tail).
Adding SRST signal on $procdff$23232 ($dff) from module FIFO_5 (D = $procmux$16744_Y, Q = \head, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$23956 ($sdff) from module FIFO_5 (D = $add$B4Processor.v:22693$16488_Y, Q = \head).
Adding SRST signal on $procdff$23233 ($dff) from module FIFO_5 (D = $procmux$16737_Y, Q = \tail, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$23962 ($sdff) from module FIFO_5 (D = $add$B4Processor.v:22698$16491_Y, Q = \tail).
Setting constant 1-bit at position 0 on $procdff$23234 ($dff) from module FIFO_5.
Adding EN signal on $procdff$23239 ($dff) from module RRArbiter_2 (D = $or$B4Processor.v:22570$16475_Y, Q = \lastGrant).
Adding SRST signal on $procdff$23240 ($dff) from module FIFO_4 (D = $procmux$16773_Y, Q = \head, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$23969 ($sdff) from module FIFO_4 (D = $add$B4Processor.v:22432$16444_Y, Q = \head).
Adding SRST signal on $procdff$23241 ($dff) from module FIFO_4 (D = $procmux$16766_Y, Q = \tail, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$23975 ($sdff) from module FIFO_4 (D = $add$B4Processor.v:22437$16447_Y, Q = \tail).
Setting constant 1-bit at position 0 on $procdff$23242 ($dff) from module FIFO_4.
Adding SRST signal on $procdff$23247 ($dff) from module ReservationStation (D = $procmux$16785_Y, Q = \head, rval = 3'000).
Adding SRST signal on $procdff$23248 ($dff) from module ReservationStation (D = $procmux$18153_Y, Q = \reservation_0_opcode, rval = 7'0000000).
Adding SRST signal on $procdff$23249 ($dff) from module ReservationStation (D = $procmux$18141_Y, Q = \reservation_0_function3, rval = 3'000).
Adding SRST signal on $procdff$23250 ($dff) from module ReservationStation (D = $procmux$18129_Y, Q = \reservation_0_immediateOrFunction7, rval = 12'000000000000).
Adding SRST signal on $procdff$23251 ($dff) from module ReservationStation (D = $procmux$18117_Y, Q = \reservation_0_sourceTag1_threadId, rval = 1'0).
Adding SRST signal on $procdff$23252 ($dff) from module ReservationStation (D = $procmux$18105_Y, Q = \reservation_0_sourceTag1_id, rval = 4'0000).
Adding SRST signal on $procdff$23253 ($dff) from module ReservationStation (D = $procmux$18093_Y, Q = \reservation_0_ready1, rval = 1'0).
Adding SRST signal on $procdff$23254 ($dff) from module ReservationStation (D = $procmux$18084_Y, Q = \reservation_0_value1, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23255 ($dff) from module ReservationStation (D = $procmux$18072_Y, Q = \reservation_0_sourceTag2_threadId, rval = 1'0).
Adding SRST signal on $procdff$23256 ($dff) from module ReservationStation (D = $procmux$18060_Y, Q = \reservation_0_sourceTag2_id, rval = 4'0000).
Adding SRST signal on $procdff$23257 ($dff) from module ReservationStation (D = $procmux$18048_Y, Q = \reservation_0_ready2, rval = 1'0).
Adding SRST signal on $procdff$23258 ($dff) from module ReservationStation (D = $procmux$18039_Y, Q = \reservation_0_value2, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23259 ($dff) from module ReservationStation (D = $procmux$18027_Y, Q = \reservation_0_destinationTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23260 ($dff) from module ReservationStation (D = $procmux$18018_Y, Q = \reservation_0_destinationTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23261 ($dff) from module ReservationStation (D = $procmux$18006_Y, Q = \reservation_0_programCounter, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23262 ($dff) from module ReservationStation (D = $procmux$17994_Y, Q = \reservation_0_valid, rval = 1'0).
Adding SRST signal on $procdff$23263 ($dff) from module ReservationStation (D = $procmux$17982_Y, Q = \reservation_1_opcode, rval = 7'0000000).
Adding SRST signal on $procdff$23264 ($dff) from module ReservationStation (D = $procmux$17970_Y, Q = \reservation_1_function3, rval = 3'000).
Adding SRST signal on $procdff$23265 ($dff) from module ReservationStation (D = $procmux$17958_Y, Q = \reservation_1_immediateOrFunction7, rval = 12'000000000000).
Adding SRST signal on $procdff$23266 ($dff) from module ReservationStation (D = $procmux$17946_Y, Q = \reservation_1_sourceTag1_threadId, rval = 1'0).
Adding SRST signal on $procdff$23267 ($dff) from module ReservationStation (D = $procmux$17934_Y, Q = \reservation_1_sourceTag1_id, rval = 4'0000).
Adding SRST signal on $procdff$23268 ($dff) from module ReservationStation (D = $procmux$17922_Y, Q = \reservation_1_ready1, rval = 1'0).
Adding SRST signal on $procdff$23269 ($dff) from module ReservationStation (D = $procmux$17913_Y, Q = \reservation_1_value1, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23270 ($dff) from module ReservationStation (D = $procmux$17901_Y, Q = \reservation_1_sourceTag2_threadId, rval = 1'0).
Adding SRST signal on $procdff$23271 ($dff) from module ReservationStation (D = $procmux$17889_Y, Q = \reservation_1_sourceTag2_id, rval = 4'0000).
Adding SRST signal on $procdff$23272 ($dff) from module ReservationStation (D = $procmux$17877_Y, Q = \reservation_1_ready2, rval = 1'0).
Adding SRST signal on $procdff$23273 ($dff) from module ReservationStation (D = $procmux$17868_Y, Q = \reservation_1_value2, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23274 ($dff) from module ReservationStation (D = $procmux$17856_Y, Q = \reservation_1_destinationTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23275 ($dff) from module ReservationStation (D = $procmux$17847_Y, Q = \reservation_1_destinationTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23276 ($dff) from module ReservationStation (D = $procmux$17835_Y, Q = \reservation_1_programCounter, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23277 ($dff) from module ReservationStation (D = $procmux$17823_Y, Q = \reservation_1_valid, rval = 1'0).
Adding SRST signal on $procdff$23278 ($dff) from module ReservationStation (D = $procmux$17811_Y, Q = \reservation_2_opcode, rval = 7'0000000).
Adding SRST signal on $procdff$23279 ($dff) from module ReservationStation (D = $procmux$17799_Y, Q = \reservation_2_function3, rval = 3'000).
Adding SRST signal on $procdff$23280 ($dff) from module ReservationStation (D = $procmux$17787_Y, Q = \reservation_2_immediateOrFunction7, rval = 12'000000000000).
Adding SRST signal on $procdff$23281 ($dff) from module ReservationStation (D = $procmux$17775_Y, Q = \reservation_2_sourceTag1_threadId, rval = 1'0).
Adding SRST signal on $procdff$23282 ($dff) from module ReservationStation (D = $procmux$17763_Y, Q = \reservation_2_sourceTag1_id, rval = 4'0000).
Adding SRST signal on $procdff$23283 ($dff) from module ReservationStation (D = $procmux$17751_Y, Q = \reservation_2_ready1, rval = 1'0).
Adding SRST signal on $procdff$23284 ($dff) from module ReservationStation (D = $procmux$17742_Y, Q = \reservation_2_value1, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23285 ($dff) from module ReservationStation (D = $procmux$17730_Y, Q = \reservation_2_sourceTag2_threadId, rval = 1'0).
Adding SRST signal on $procdff$23286 ($dff) from module ReservationStation (D = $procmux$17718_Y, Q = \reservation_2_sourceTag2_id, rval = 4'0000).
Adding SRST signal on $procdff$23287 ($dff) from module ReservationStation (D = $procmux$17706_Y, Q = \reservation_2_ready2, rval = 1'0).
Adding SRST signal on $procdff$23288 ($dff) from module ReservationStation (D = $procmux$17697_Y, Q = \reservation_2_value2, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23289 ($dff) from module ReservationStation (D = $procmux$17685_Y, Q = \reservation_2_destinationTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23290 ($dff) from module ReservationStation (D = $procmux$17676_Y, Q = \reservation_2_destinationTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23291 ($dff) from module ReservationStation (D = $procmux$17664_Y, Q = \reservation_2_programCounter, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23292 ($dff) from module ReservationStation (D = $procmux$17652_Y, Q = \reservation_2_valid, rval = 1'0).
Adding SRST signal on $procdff$23293 ($dff) from module ReservationStation (D = $procmux$17640_Y, Q = \reservation_3_opcode, rval = 7'0000000).
Adding SRST signal on $procdff$23294 ($dff) from module ReservationStation (D = $procmux$17628_Y, Q = \reservation_3_function3, rval = 3'000).
Adding SRST signal on $procdff$23295 ($dff) from module ReservationStation (D = $procmux$17616_Y, Q = \reservation_3_immediateOrFunction7, rval = 12'000000000000).
Adding SRST signal on $procdff$23296 ($dff) from module ReservationStation (D = $procmux$17604_Y, Q = \reservation_3_sourceTag1_threadId, rval = 1'0).
Adding SRST signal on $procdff$23297 ($dff) from module ReservationStation (D = $procmux$17592_Y, Q = \reservation_3_sourceTag1_id, rval = 4'0000).
Adding SRST signal on $procdff$23298 ($dff) from module ReservationStation (D = $procmux$17580_Y, Q = \reservation_3_ready1, rval = 1'0).
Adding SRST signal on $procdff$23299 ($dff) from module ReservationStation (D = $procmux$17571_Y, Q = \reservation_3_value1, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23300 ($dff) from module ReservationStation (D = $procmux$17559_Y, Q = \reservation_3_sourceTag2_threadId, rval = 1'0).
Adding SRST signal on $procdff$23301 ($dff) from module ReservationStation (D = $procmux$17547_Y, Q = \reservation_3_sourceTag2_id, rval = 4'0000).
Adding SRST signal on $procdff$23302 ($dff) from module ReservationStation (D = $procmux$17535_Y, Q = \reservation_3_ready2, rval = 1'0).
Adding SRST signal on $procdff$23303 ($dff) from module ReservationStation (D = $procmux$17526_Y, Q = \reservation_3_value2, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23304 ($dff) from module ReservationStation (D = $procmux$17514_Y, Q = \reservation_3_destinationTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23305 ($dff) from module ReservationStation (D = $procmux$17505_Y, Q = \reservation_3_destinationTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23306 ($dff) from module ReservationStation (D = $procmux$17493_Y, Q = \reservation_3_programCounter, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23307 ($dff) from module ReservationStation (D = $procmux$17481_Y, Q = \reservation_3_valid, rval = 1'0).
Adding SRST signal on $procdff$23308 ($dff) from module ReservationStation (D = $procmux$17469_Y, Q = \reservation_4_opcode, rval = 7'0000000).
Adding SRST signal on $procdff$23309 ($dff) from module ReservationStation (D = $procmux$17457_Y, Q = \reservation_4_function3, rval = 3'000).
Adding SRST signal on $procdff$23310 ($dff) from module ReservationStation (D = $procmux$17445_Y, Q = \reservation_4_immediateOrFunction7, rval = 12'000000000000).
Adding SRST signal on $procdff$23311 ($dff) from module ReservationStation (D = $procmux$17433_Y, Q = \reservation_4_sourceTag1_threadId, rval = 1'0).
Adding SRST signal on $procdff$23312 ($dff) from module ReservationStation (D = $procmux$17421_Y, Q = \reservation_4_sourceTag1_id, rval = 4'0000).
Adding SRST signal on $procdff$23313 ($dff) from module ReservationStation (D = $procmux$17409_Y, Q = \reservation_4_ready1, rval = 1'0).
Adding SRST signal on $procdff$23314 ($dff) from module ReservationStation (D = $procmux$17400_Y, Q = \reservation_4_value1, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23315 ($dff) from module ReservationStation (D = $procmux$17388_Y, Q = \reservation_4_sourceTag2_threadId, rval = 1'0).
Adding SRST signal on $procdff$23316 ($dff) from module ReservationStation (D = $procmux$17376_Y, Q = \reservation_4_sourceTag2_id, rval = 4'0000).
Adding SRST signal on $procdff$23317 ($dff) from module ReservationStation (D = $procmux$17364_Y, Q = \reservation_4_ready2, rval = 1'0).
Adding SRST signal on $procdff$23318 ($dff) from module ReservationStation (D = $procmux$17355_Y, Q = \reservation_4_value2, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23319 ($dff) from module ReservationStation (D = $procmux$17343_Y, Q = \reservation_4_destinationTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23320 ($dff) from module ReservationStation (D = $procmux$17334_Y, Q = \reservation_4_destinationTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23321 ($dff) from module ReservationStation (D = $procmux$17322_Y, Q = \reservation_4_programCounter, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23322 ($dff) from module ReservationStation (D = $procmux$17310_Y, Q = \reservation_4_valid, rval = 1'0).
Adding SRST signal on $procdff$23323 ($dff) from module ReservationStation (D = $procmux$17298_Y, Q = \reservation_5_opcode, rval = 7'0000000).
Adding SRST signal on $procdff$23324 ($dff) from module ReservationStation (D = $procmux$17286_Y, Q = \reservation_5_function3, rval = 3'000).
Adding SRST signal on $procdff$23325 ($dff) from module ReservationStation (D = $procmux$17274_Y, Q = \reservation_5_immediateOrFunction7, rval = 12'000000000000).
Adding SRST signal on $procdff$23326 ($dff) from module ReservationStation (D = $procmux$17262_Y, Q = \reservation_5_sourceTag1_threadId, rval = 1'0).
Adding SRST signal on $procdff$23327 ($dff) from module ReservationStation (D = $procmux$17250_Y, Q = \reservation_5_sourceTag1_id, rval = 4'0000).
Adding SRST signal on $procdff$23328 ($dff) from module ReservationStation (D = $procmux$17238_Y, Q = \reservation_5_ready1, rval = 1'0).
Adding SRST signal on $procdff$23329 ($dff) from module ReservationStation (D = $procmux$17229_Y, Q = \reservation_5_value1, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23330 ($dff) from module ReservationStation (D = $procmux$17217_Y, Q = \reservation_5_sourceTag2_threadId, rval = 1'0).
Adding SRST signal on $procdff$23331 ($dff) from module ReservationStation (D = $procmux$17205_Y, Q = \reservation_5_sourceTag2_id, rval = 4'0000).
Adding SRST signal on $procdff$23332 ($dff) from module ReservationStation (D = $procmux$17193_Y, Q = \reservation_5_ready2, rval = 1'0).
Adding SRST signal on $procdff$23333 ($dff) from module ReservationStation (D = $procmux$17184_Y, Q = \reservation_5_value2, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23334 ($dff) from module ReservationStation (D = $procmux$17172_Y, Q = \reservation_5_destinationTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23335 ($dff) from module ReservationStation (D = $procmux$17163_Y, Q = \reservation_5_destinationTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23336 ($dff) from module ReservationStation (D = $procmux$17151_Y, Q = \reservation_5_programCounter, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23337 ($dff) from module ReservationStation (D = $procmux$17139_Y, Q = \reservation_5_valid, rval = 1'0).
Adding SRST signal on $procdff$23338 ($dff) from module ReservationStation (D = $procmux$17127_Y, Q = \reservation_6_opcode, rval = 7'0000000).
Adding SRST signal on $procdff$23339 ($dff) from module ReservationStation (D = $procmux$17115_Y, Q = \reservation_6_function3, rval = 3'000).
Adding SRST signal on $procdff$23340 ($dff) from module ReservationStation (D = $procmux$17103_Y, Q = \reservation_6_immediateOrFunction7, rval = 12'000000000000).
Adding SRST signal on $procdff$23341 ($dff) from module ReservationStation (D = $procmux$17091_Y, Q = \reservation_6_sourceTag1_threadId, rval = 1'0).
Adding SRST signal on $procdff$23342 ($dff) from module ReservationStation (D = $procmux$17079_Y, Q = \reservation_6_sourceTag1_id, rval = 4'0000).
Adding SRST signal on $procdff$23343 ($dff) from module ReservationStation (D = $procmux$17067_Y, Q = \reservation_6_ready1, rval = 1'0).
Adding SRST signal on $procdff$23344 ($dff) from module ReservationStation (D = $procmux$17058_Y, Q = \reservation_6_value1, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23345 ($dff) from module ReservationStation (D = $procmux$17046_Y, Q = \reservation_6_sourceTag2_threadId, rval = 1'0).
Adding SRST signal on $procdff$23346 ($dff) from module ReservationStation (D = $procmux$17034_Y, Q = \reservation_6_sourceTag2_id, rval = 4'0000).
Adding SRST signal on $procdff$23347 ($dff) from module ReservationStation (D = $procmux$17022_Y, Q = \reservation_6_ready2, rval = 1'0).
Adding SRST signal on $procdff$23348 ($dff) from module ReservationStation (D = $procmux$17013_Y, Q = \reservation_6_value2, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23349 ($dff) from module ReservationStation (D = $procmux$17001_Y, Q = \reservation_6_destinationTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23350 ($dff) from module ReservationStation (D = $procmux$16992_Y, Q = \reservation_6_destinationTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23351 ($dff) from module ReservationStation (D = $procmux$16980_Y, Q = \reservation_6_programCounter, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23352 ($dff) from module ReservationStation (D = $procmux$16968_Y, Q = \reservation_6_valid, rval = 1'0).
Adding SRST signal on $procdff$23353 ($dff) from module ReservationStation (D = $procmux$16956_Y, Q = \reservation_7_opcode, rval = 7'0000000).
Adding SRST signal on $procdff$23354 ($dff) from module ReservationStation (D = $procmux$16944_Y, Q = \reservation_7_function3, rval = 3'000).
Adding SRST signal on $procdff$23355 ($dff) from module ReservationStation (D = $procmux$16932_Y, Q = \reservation_7_immediateOrFunction7, rval = 12'000000000000).
Adding SRST signal on $procdff$23356 ($dff) from module ReservationStation (D = $procmux$16920_Y, Q = \reservation_7_sourceTag1_threadId, rval = 1'0).
Adding SRST signal on $procdff$23357 ($dff) from module ReservationStation (D = $procmux$16908_Y, Q = \reservation_7_sourceTag1_id, rval = 4'0000).
Adding SRST signal on $procdff$23358 ($dff) from module ReservationStation (D = $procmux$16896_Y, Q = \reservation_7_ready1, rval = 1'0).
Adding SRST signal on $procdff$23359 ($dff) from module ReservationStation (D = $procmux$16887_Y, Q = \reservation_7_value1, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23360 ($dff) from module ReservationStation (D = $procmux$16875_Y, Q = \reservation_7_sourceTag2_threadId, rval = 1'0).
Adding SRST signal on $procdff$23361 ($dff) from module ReservationStation (D = $procmux$16863_Y, Q = \reservation_7_sourceTag2_id, rval = 4'0000).
Adding SRST signal on $procdff$23362 ($dff) from module ReservationStation (D = $procmux$16851_Y, Q = \reservation_7_ready2, rval = 1'0).
Adding SRST signal on $procdff$23363 ($dff) from module ReservationStation (D = $procmux$16842_Y, Q = \reservation_7_value2, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23364 ($dff) from module ReservationStation (D = $procmux$16830_Y, Q = \reservation_7_destinationTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23365 ($dff) from module ReservationStation (D = $procmux$16821_Y, Q = \reservation_7_destinationTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23366 ($dff) from module ReservationStation (D = $procmux$16809_Y, Q = \reservation_7_programCounter, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23367 ($dff) from module ReservationStation (D = $procmux$16797_Y, Q = \reservation_7_valid, rval = 1'0).
Adding SRST signal on $procdff$23368 ($dff) from module FIFO_3 (D = $procmux$18178_Y, Q = \head, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$24102 ($sdff) from module FIFO_3 (D = $add$B4Processor.v:16641$12824_Y, Q = \head).
Adding SRST signal on $procdff$23369 ($dff) from module FIFO_3 (D = $procmux$18171_Y, Q = \tail, rval = 2'00).
Setting constant 1-bit at position 0 on $procdff$23370 ($dff) from module FIFO_3.
Adding EN signal on $procdff$23375 ($dff) from module RRArbiter_1 (D = $or$B4Processor.v:16385$12821_Y, Q = \lastGrant).
Adding SRST signal on $procdff$23376 ($dff) from module FIFO_1 (D = $procmux$18207_Y, Q = \head, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$24110 ($sdff) from module FIFO_1 (D = $add$B4Processor.v:16243$12789_Y, Q = \head).
Adding SRST signal on $procdff$23377 ($dff) from module FIFO_1 (D = $procmux$18200_Y, Q = \tail, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$24116 ($sdff) from module FIFO_1 (D = $add$B4Processor.v:16248$12792_Y, Q = \tail).
Setting constant 1-bit at position 0 on $procdff$23378 ($dff) from module FIFO_1.
Adding SRST signal on $procdff$23383 ($dff) from module FIFO (D = $procmux$18234_Y, Q = \head, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$24122 ($sdff) from module FIFO (D = $add$B4Processor.v:15774$12677_Y, Q = \head).
Adding SRST signal on $procdff$23384 ($dff) from module FIFO (D = $procmux$18227_Y, Q = \tail, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$24128 ($sdff) from module FIFO (D = $add$B4Processor.v:15779$12680_Y, Q = \tail).
Setting constant 1-bit at position 0 on $procdff$23385 ($dff) from module FIFO.
Adding EN signal on $procdff$23390 ($dff) from module RRArbiter (D = $or$B4Processor.v:15677$12674_Y, Q = \lastGrant).
Adding SRST signal on $procdff$23391 ($dff) from module LoadStoreQueue (D = $add$B4Processor.v:12221$9983_Y, Q = \head, rval = 3'000).
Adding SRST signal on $procdff$23392 ($dff) from module LoadStoreQueue (D = $procmux$19492_Y, Q = \nextTail, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$24136 ($sdff) from module LoadStoreQueue (D = $add$B4Processor.v:13024$11103_Y, Q = \nextTail).
Adding SRST signal on $procdff$23393 ($dff) from module LoadStoreQueue (D = $procmux$19484_Y, Q = \buffer_0_valid, rval = 1'0).
Adding SRST signal on $procdff$23394 ($dff) from module LoadStoreQueue (D = $procmux$19472_Y, Q = \buffer_0_readyReorderSign, rval = 1'0).
Adding SRST signal on $procdff$23398 ($dff) from module LoadStoreQueue (D = $procmux$19424_Y, Q = \buffer_0_addressAndLoadResultTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23399 ($dff) from module LoadStoreQueue (D = $procmux$19412_Y, Q = \buffer_0_addressAndLoadResultTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23400 ($dff) from module LoadStoreQueue (D = $procmux$19400_Y, Q = \buffer_0_address, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23401 ($dff) from module LoadStoreQueue (D = $procmux$19388_Y, Q = \buffer_0_addressValid, rval = 1'0).
Adding SRST signal on $procdff$23402 ($dff) from module LoadStoreQueue (D = $procmux$19376_Y, Q = \buffer_0_storeDataTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23403 ($dff) from module LoadStoreQueue (D = $procmux$19364_Y, Q = \buffer_0_storeDataTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23404 ($dff) from module LoadStoreQueue (D = $procmux$19352_Y, Q = \buffer_0_storeData, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23405 ($dff) from module LoadStoreQueue (D = $procmux$19340_Y, Q = \buffer_0_storeDataValid, rval = 1'0).
Adding SRST signal on $procdff$23406 ($dff) from module LoadStoreQueue (D = $procmux$19328_Y, Q = \buffer_1_valid, rval = 1'0).
Adding SRST signal on $procdff$23407 ($dff) from module LoadStoreQueue (D = $procmux$19316_Y, Q = \buffer_1_readyReorderSign, rval = 1'0).
Adding SRST signal on $procdff$23411 ($dff) from module LoadStoreQueue (D = $procmux$19268_Y, Q = \buffer_1_addressAndLoadResultTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23412 ($dff) from module LoadStoreQueue (D = $procmux$19256_Y, Q = \buffer_1_addressAndLoadResultTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23413 ($dff) from module LoadStoreQueue (D = $procmux$19244_Y, Q = \buffer_1_address, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23414 ($dff) from module LoadStoreQueue (D = $procmux$19232_Y, Q = \buffer_1_addressValid, rval = 1'0).
Adding SRST signal on $procdff$23415 ($dff) from module LoadStoreQueue (D = $procmux$19220_Y, Q = \buffer_1_storeDataTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23416 ($dff) from module LoadStoreQueue (D = $procmux$19208_Y, Q = \buffer_1_storeDataTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23417 ($dff) from module LoadStoreQueue (D = $procmux$19196_Y, Q = \buffer_1_storeData, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23418 ($dff) from module LoadStoreQueue (D = $procmux$19184_Y, Q = \buffer_1_storeDataValid, rval = 1'0).
Adding SRST signal on $procdff$23419 ($dff) from module LoadStoreQueue (D = $procmux$19172_Y, Q = \buffer_2_valid, rval = 1'0).
Adding SRST signal on $procdff$23420 ($dff) from module LoadStoreQueue (D = $procmux$19160_Y, Q = \buffer_2_readyReorderSign, rval = 1'0).
Adding SRST signal on $procdff$23424 ($dff) from module LoadStoreQueue (D = $procmux$19112_Y, Q = \buffer_2_addressAndLoadResultTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23425 ($dff) from module LoadStoreQueue (D = $procmux$19100_Y, Q = \buffer_2_addressAndLoadResultTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23426 ($dff) from module LoadStoreQueue (D = $procmux$19088_Y, Q = \buffer_2_address, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23427 ($dff) from module LoadStoreQueue (D = $procmux$19076_Y, Q = \buffer_2_addressValid, rval = 1'0).
Adding SRST signal on $procdff$23428 ($dff) from module LoadStoreQueue (D = $procmux$19064_Y, Q = \buffer_2_storeDataTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23429 ($dff) from module LoadStoreQueue (D = $procmux$19052_Y, Q = \buffer_2_storeDataTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23430 ($dff) from module LoadStoreQueue (D = $procmux$19040_Y, Q = \buffer_2_storeData, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23431 ($dff) from module LoadStoreQueue (D = $procmux$19028_Y, Q = \buffer_2_storeDataValid, rval = 1'0).
Adding SRST signal on $procdff$23432 ($dff) from module LoadStoreQueue (D = $procmux$19016_Y, Q = \buffer_3_valid, rval = 1'0).
Adding SRST signal on $procdff$23433 ($dff) from module LoadStoreQueue (D = $procmux$19004_Y, Q = \buffer_3_readyReorderSign, rval = 1'0).
Adding SRST signal on $procdff$23437 ($dff) from module LoadStoreQueue (D = $procmux$18956_Y, Q = \buffer_3_addressAndLoadResultTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23438 ($dff) from module LoadStoreQueue (D = $procmux$18944_Y, Q = \buffer_3_addressAndLoadResultTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23439 ($dff) from module LoadStoreQueue (D = $procmux$18932_Y, Q = \buffer_3_address, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23440 ($dff) from module LoadStoreQueue (D = $procmux$18920_Y, Q = \buffer_3_addressValid, rval = 1'0).
Adding SRST signal on $procdff$23441 ($dff) from module LoadStoreQueue (D = $procmux$18908_Y, Q = \buffer_3_storeDataTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23442 ($dff) from module LoadStoreQueue (D = $procmux$18896_Y, Q = \buffer_3_storeDataTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23443 ($dff) from module LoadStoreQueue (D = $procmux$18884_Y, Q = \buffer_3_storeData, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23444 ($dff) from module LoadStoreQueue (D = $procmux$18872_Y, Q = \buffer_3_storeDataValid, rval = 1'0).
Adding SRST signal on $procdff$23445 ($dff) from module LoadStoreQueue (D = $procmux$18860_Y, Q = \buffer_4_valid, rval = 1'0).
Adding SRST signal on $procdff$23446 ($dff) from module LoadStoreQueue (D = $procmux$18848_Y, Q = \buffer_4_readyReorderSign, rval = 1'0).
Adding SRST signal on $procdff$23450 ($dff) from module LoadStoreQueue (D = $procmux$18800_Y, Q = \buffer_4_addressAndLoadResultTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23451 ($dff) from module LoadStoreQueue (D = $procmux$18788_Y, Q = \buffer_4_addressAndLoadResultTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23452 ($dff) from module LoadStoreQueue (D = $procmux$18776_Y, Q = \buffer_4_address, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23453 ($dff) from module LoadStoreQueue (D = $procmux$18764_Y, Q = \buffer_4_addressValid, rval = 1'0).
Adding SRST signal on $procdff$23454 ($dff) from module LoadStoreQueue (D = $procmux$18752_Y, Q = \buffer_4_storeDataTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23455 ($dff) from module LoadStoreQueue (D = $procmux$18740_Y, Q = \buffer_4_storeDataTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23456 ($dff) from module LoadStoreQueue (D = $procmux$18728_Y, Q = \buffer_4_storeData, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23457 ($dff) from module LoadStoreQueue (D = $procmux$18716_Y, Q = \buffer_4_storeDataValid, rval = 1'0).
Adding SRST signal on $procdff$23458 ($dff) from module LoadStoreQueue (D = $procmux$18704_Y, Q = \buffer_5_valid, rval = 1'0).
Adding SRST signal on $procdff$23459 ($dff) from module LoadStoreQueue (D = $procmux$18692_Y, Q = \buffer_5_readyReorderSign, rval = 1'0).
Adding SRST signal on $procdff$23463 ($dff) from module LoadStoreQueue (D = $procmux$18644_Y, Q = \buffer_5_addressAndLoadResultTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23464 ($dff) from module LoadStoreQueue (D = $procmux$18632_Y, Q = \buffer_5_addressAndLoadResultTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23465 ($dff) from module LoadStoreQueue (D = $procmux$18620_Y, Q = \buffer_5_address, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23466 ($dff) from module LoadStoreQueue (D = $procmux$18608_Y, Q = \buffer_5_addressValid, rval = 1'0).
Adding SRST signal on $procdff$23467 ($dff) from module LoadStoreQueue (D = $procmux$18596_Y, Q = \buffer_5_storeDataTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23468 ($dff) from module LoadStoreQueue (D = $procmux$18584_Y, Q = \buffer_5_storeDataTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23469 ($dff) from module LoadStoreQueue (D = $procmux$18572_Y, Q = \buffer_5_storeData, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23470 ($dff) from module LoadStoreQueue (D = $procmux$18560_Y, Q = \buffer_5_storeDataValid, rval = 1'0).
Adding SRST signal on $procdff$23471 ($dff) from module LoadStoreQueue (D = $procmux$18548_Y, Q = \buffer_6_valid, rval = 1'0).
Adding SRST signal on $procdff$23472 ($dff) from module LoadStoreQueue (D = $procmux$18536_Y, Q = \buffer_6_readyReorderSign, rval = 1'0).
Adding SRST signal on $procdff$23476 ($dff) from module LoadStoreQueue (D = $procmux$18488_Y, Q = \buffer_6_addressAndLoadResultTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23477 ($dff) from module LoadStoreQueue (D = $procmux$18476_Y, Q = \buffer_6_addressAndLoadResultTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23478 ($dff) from module LoadStoreQueue (D = $procmux$18464_Y, Q = \buffer_6_address, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23479 ($dff) from module LoadStoreQueue (D = $procmux$18452_Y, Q = \buffer_6_addressValid, rval = 1'0).
Adding SRST signal on $procdff$23480 ($dff) from module LoadStoreQueue (D = $procmux$18440_Y, Q = \buffer_6_storeDataTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23481 ($dff) from module LoadStoreQueue (D = $procmux$18428_Y, Q = \buffer_6_storeDataTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23482 ($dff) from module LoadStoreQueue (D = $procmux$18416_Y, Q = \buffer_6_storeData, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23483 ($dff) from module LoadStoreQueue (D = $procmux$18404_Y, Q = \buffer_6_storeDataValid, rval = 1'0).
Adding SRST signal on $procdff$23484 ($dff) from module LoadStoreQueue (D = $procmux$18392_Y, Q = \buffer_7_valid, rval = 1'0).
Adding SRST signal on $procdff$23485 ($dff) from module LoadStoreQueue (D = $procmux$18380_Y, Q = \buffer_7_readyReorderSign, rval = 1'0).
Adding SRST signal on $procdff$23489 ($dff) from module LoadStoreQueue (D = $procmux$18332_Y, Q = \buffer_7_addressAndLoadResultTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23490 ($dff) from module LoadStoreQueue (D = $procmux$18320_Y, Q = \buffer_7_addressAndLoadResultTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23491 ($dff) from module LoadStoreQueue (D = $procmux$18308_Y, Q = \buffer_7_address, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23492 ($dff) from module LoadStoreQueue (D = $procmux$18296_Y, Q = \buffer_7_addressValid, rval = 1'0).
Adding SRST signal on $procdff$23493 ($dff) from module LoadStoreQueue (D = $procmux$18284_Y, Q = \buffer_7_storeDataTag_threadId, rval = 1'0).
Adding SRST signal on $procdff$23494 ($dff) from module LoadStoreQueue (D = $procmux$18272_Y, Q = \buffer_7_storeDataTag_id, rval = 4'0000).
Adding SRST signal on $procdff$23495 ($dff) from module LoadStoreQueue (D = $procmux$18260_Y, Q = \buffer_7_storeData, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23496 ($dff) from module LoadStoreQueue (D = $procmux$18248_Y, Q = \buffer_7_storeDataValid, rval = 1'0).
Adding SRST signal on $procdff$23497 ($dff) from module RegisterFile_1 (D = $procmux$19864_Y, Q = \registers_0, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24218 ($sdff) from module RegisterFile_1 (D = $procmux$19864_Y, Q = \registers_0).
Adding SRST signal on $procdff$23498 ($dff) from module RegisterFile_1 (D = $procmux$19852_Y, Q = \registers_1, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24222 ($sdff) from module RegisterFile_1 (D = $procmux$19852_Y, Q = \registers_1).
Adding SRST signal on $procdff$23499 ($dff) from module RegisterFile_1 (D = $procmux$19840_Y, Q = \registers_2, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24226 ($sdff) from module RegisterFile_1 (D = $procmux$19840_Y, Q = \registers_2).
Adding SRST signal on $procdff$23500 ($dff) from module RegisterFile_1 (D = $procmux$19828_Y, Q = \registers_3, rval = 64'0000000000000000000000000000000000000000000000000000000000000001).
Adding EN signal on $auto$ff.cc:262:slice$24230 ($sdff) from module RegisterFile_1 (D = $procmux$19828_Y, Q = \registers_3).
Adding SRST signal on $procdff$23501 ($dff) from module RegisterFile_1 (D = $procmux$19816_Y, Q = \registers_4, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24234 ($sdff) from module RegisterFile_1 (D = $procmux$19816_Y, Q = \registers_4).
Adding SRST signal on $procdff$23502 ($dff) from module RegisterFile_1 (D = $procmux$19804_Y, Q = \registers_5, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24238 ($sdff) from module RegisterFile_1 (D = $procmux$19804_Y, Q = \registers_5).
Adding SRST signal on $procdff$23503 ($dff) from module RegisterFile_1 (D = $procmux$19792_Y, Q = \registers_6, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24242 ($sdff) from module RegisterFile_1 (D = $procmux$19792_Y, Q = \registers_6).
Adding SRST signal on $procdff$23504 ($dff) from module RegisterFile_1 (D = $procmux$19780_Y, Q = \registers_7, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24246 ($sdff) from module RegisterFile_1 (D = $procmux$19780_Y, Q = \registers_7).
Adding SRST signal on $procdff$23505 ($dff) from module RegisterFile_1 (D = $procmux$19768_Y, Q = \registers_8, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24250 ($sdff) from module RegisterFile_1 (D = $procmux$19768_Y, Q = \registers_8).
Adding SRST signal on $procdff$23506 ($dff) from module RegisterFile_1 (D = $procmux$19756_Y, Q = \registers_9, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24254 ($sdff) from module RegisterFile_1 (D = $procmux$19756_Y, Q = \registers_9).
Adding SRST signal on $procdff$23507 ($dff) from module RegisterFile_1 (D = $procmux$19744_Y, Q = \registers_10, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24258 ($sdff) from module RegisterFile_1 (D = $procmux$19744_Y, Q = \registers_10).
Adding SRST signal on $procdff$23508 ($dff) from module RegisterFile_1 (D = $procmux$19732_Y, Q = \registers_11, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24262 ($sdff) from module RegisterFile_1 (D = $procmux$19732_Y, Q = \registers_11).
Adding SRST signal on $procdff$23509 ($dff) from module RegisterFile_1 (D = $procmux$19720_Y, Q = \registers_12, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24266 ($sdff) from module RegisterFile_1 (D = $procmux$19720_Y, Q = \registers_12).
Adding SRST signal on $procdff$23510 ($dff) from module RegisterFile_1 (D = $procmux$19708_Y, Q = \registers_13, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24270 ($sdff) from module RegisterFile_1 (D = $procmux$19708_Y, Q = \registers_13).
Adding SRST signal on $procdff$23511 ($dff) from module RegisterFile_1 (D = $procmux$19696_Y, Q = \registers_14, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24274 ($sdff) from module RegisterFile_1 (D = $procmux$19696_Y, Q = \registers_14).
Adding SRST signal on $procdff$23512 ($dff) from module RegisterFile_1 (D = $procmux$19684_Y, Q = \registers_15, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24278 ($sdff) from module RegisterFile_1 (D = $procmux$19684_Y, Q = \registers_15).
Adding SRST signal on $procdff$23513 ($dff) from module RegisterFile_1 (D = $procmux$19672_Y, Q = \registers_16, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24282 ($sdff) from module RegisterFile_1 (D = $procmux$19672_Y, Q = \registers_16).
Adding SRST signal on $procdff$23514 ($dff) from module RegisterFile_1 (D = $procmux$19660_Y, Q = \registers_17, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24286 ($sdff) from module RegisterFile_1 (D = $procmux$19660_Y, Q = \registers_17).
Adding SRST signal on $procdff$23515 ($dff) from module RegisterFile_1 (D = $procmux$19648_Y, Q = \registers_18, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24290 ($sdff) from module RegisterFile_1 (D = $procmux$19648_Y, Q = \registers_18).
Adding SRST signal on $procdff$23516 ($dff) from module RegisterFile_1 (D = $procmux$19636_Y, Q = \registers_19, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24294 ($sdff) from module RegisterFile_1 (D = $procmux$19636_Y, Q = \registers_19).
Adding SRST signal on $procdff$23517 ($dff) from module RegisterFile_1 (D = $procmux$19624_Y, Q = \registers_20, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24298 ($sdff) from module RegisterFile_1 (D = $procmux$19624_Y, Q = \registers_20).
Adding SRST signal on $procdff$23518 ($dff) from module RegisterFile_1 (D = $procmux$19612_Y, Q = \registers_21, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24302 ($sdff) from module RegisterFile_1 (D = $procmux$19612_Y, Q = \registers_21).
Adding SRST signal on $procdff$23519 ($dff) from module RegisterFile_1 (D = $procmux$19600_Y, Q = \registers_22, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24306 ($sdff) from module RegisterFile_1 (D = $procmux$19600_Y, Q = \registers_22).
Adding SRST signal on $procdff$23520 ($dff) from module RegisterFile_1 (D = $procmux$19588_Y, Q = \registers_23, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24310 ($sdff) from module RegisterFile_1 (D = $procmux$19588_Y, Q = \registers_23).
Adding SRST signal on $procdff$23521 ($dff) from module RegisterFile_1 (D = $procmux$19576_Y, Q = \registers_24, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24314 ($sdff) from module RegisterFile_1 (D = $procmux$19576_Y, Q = \registers_24).
Adding SRST signal on $procdff$23522 ($dff) from module RegisterFile_1 (D = $procmux$19564_Y, Q = \registers_25, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24318 ($sdff) from module RegisterFile_1 (D = $procmux$19564_Y, Q = \registers_25).
Adding SRST signal on $procdff$23523 ($dff) from module RegisterFile_1 (D = $procmux$19552_Y, Q = \registers_26, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24322 ($sdff) from module RegisterFile_1 (D = $procmux$19552_Y, Q = \registers_26).
Adding SRST signal on $procdff$23524 ($dff) from module RegisterFile_1 (D = $procmux$19540_Y, Q = \registers_27, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24326 ($sdff) from module RegisterFile_1 (D = $procmux$19540_Y, Q = \registers_27).
Adding SRST signal on $procdff$23525 ($dff) from module RegisterFile_1 (D = $procmux$19528_Y, Q = \registers_28, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24330 ($sdff) from module RegisterFile_1 (D = $procmux$19528_Y, Q = \registers_28).
Adding SRST signal on $procdff$23526 ($dff) from module RegisterFile_1 (D = $procmux$19516_Y, Q = \registers_29, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24334 ($sdff) from module RegisterFile_1 (D = $procmux$19516_Y, Q = \registers_29).
Adding SRST signal on $procdff$23527 ($dff) from module RegisterFile_1 (D = $procmux$19504_Y, Q = \registers_30, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24338 ($sdff) from module RegisterFile_1 (D = $procmux$19504_Y, Q = \registers_30).
Adding SRST signal on $procdff$23528 ($dff) from module RegisterFile (D = $procmux$20236_Y, Q = \registers_0, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24342 ($sdff) from module RegisterFile (D = $procmux$20236_Y, Q = \registers_0).
Adding SRST signal on $procdff$23529 ($dff) from module RegisterFile (D = $procmux$20224_Y, Q = \registers_1, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24346 ($sdff) from module RegisterFile (D = $procmux$20224_Y, Q = \registers_1).
Adding SRST signal on $procdff$23530 ($dff) from module RegisterFile (D = $procmux$20212_Y, Q = \registers_2, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24350 ($sdff) from module RegisterFile (D = $procmux$20212_Y, Q = \registers_2).
Adding SRST signal on $procdff$23531 ($dff) from module RegisterFile (D = $procmux$20200_Y, Q = \registers_3, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24354 ($sdff) from module RegisterFile (D = $procmux$20200_Y, Q = \registers_3).
Adding SRST signal on $procdff$23532 ($dff) from module RegisterFile (D = $procmux$20188_Y, Q = \registers_4, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24358 ($sdff) from module RegisterFile (D = $procmux$20188_Y, Q = \registers_4).
Adding SRST signal on $procdff$23533 ($dff) from module RegisterFile (D = $procmux$20176_Y, Q = \registers_5, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24362 ($sdff) from module RegisterFile (D = $procmux$20176_Y, Q = \registers_5).
Adding SRST signal on $procdff$23534 ($dff) from module RegisterFile (D = $procmux$20164_Y, Q = \registers_6, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24366 ($sdff) from module RegisterFile (D = $procmux$20164_Y, Q = \registers_6).
Adding SRST signal on $procdff$23535 ($dff) from module RegisterFile (D = $procmux$20152_Y, Q = \registers_7, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24370 ($sdff) from module RegisterFile (D = $procmux$20152_Y, Q = \registers_7).
Adding SRST signal on $procdff$23536 ($dff) from module RegisterFile (D = $procmux$20140_Y, Q = \registers_8, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24374 ($sdff) from module RegisterFile (D = $procmux$20140_Y, Q = \registers_8).
Adding SRST signal on $procdff$23537 ($dff) from module RegisterFile (D = $procmux$20128_Y, Q = \registers_9, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24378 ($sdff) from module RegisterFile (D = $procmux$20128_Y, Q = \registers_9).
Adding SRST signal on $procdff$23538 ($dff) from module RegisterFile (D = $procmux$20116_Y, Q = \registers_10, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24382 ($sdff) from module RegisterFile (D = $procmux$20116_Y, Q = \registers_10).
Adding SRST signal on $procdff$23539 ($dff) from module RegisterFile (D = $procmux$20104_Y, Q = \registers_11, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24386 ($sdff) from module RegisterFile (D = $procmux$20104_Y, Q = \registers_11).
Adding SRST signal on $procdff$23540 ($dff) from module RegisterFile (D = $procmux$20092_Y, Q = \registers_12, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24390 ($sdff) from module RegisterFile (D = $procmux$20092_Y, Q = \registers_12).
Adding SRST signal on $procdff$23541 ($dff) from module RegisterFile (D = $procmux$20080_Y, Q = \registers_13, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24394 ($sdff) from module RegisterFile (D = $procmux$20080_Y, Q = \registers_13).
Adding SRST signal on $procdff$23542 ($dff) from module RegisterFile (D = $procmux$20068_Y, Q = \registers_14, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24398 ($sdff) from module RegisterFile (D = $procmux$20068_Y, Q = \registers_14).
Adding SRST signal on $procdff$23543 ($dff) from module RegisterFile (D = $procmux$20056_Y, Q = \registers_15, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24402 ($sdff) from module RegisterFile (D = $procmux$20056_Y, Q = \registers_15).
Adding SRST signal on $procdff$23544 ($dff) from module RegisterFile (D = $procmux$20044_Y, Q = \registers_16, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24406 ($sdff) from module RegisterFile (D = $procmux$20044_Y, Q = \registers_16).
Adding SRST signal on $procdff$23545 ($dff) from module RegisterFile (D = $procmux$20032_Y, Q = \registers_17, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24410 ($sdff) from module RegisterFile (D = $procmux$20032_Y, Q = \registers_17).
Adding SRST signal on $procdff$23546 ($dff) from module RegisterFile (D = $procmux$20020_Y, Q = \registers_18, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24414 ($sdff) from module RegisterFile (D = $procmux$20020_Y, Q = \registers_18).
Adding SRST signal on $procdff$23547 ($dff) from module RegisterFile (D = $procmux$20008_Y, Q = \registers_19, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24418 ($sdff) from module RegisterFile (D = $procmux$20008_Y, Q = \registers_19).
Adding SRST signal on $procdff$23548 ($dff) from module RegisterFile (D = $procmux$19996_Y, Q = \registers_20, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24422 ($sdff) from module RegisterFile (D = $procmux$19996_Y, Q = \registers_20).
Adding SRST signal on $procdff$23549 ($dff) from module RegisterFile (D = $procmux$19984_Y, Q = \registers_21, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24426 ($sdff) from module RegisterFile (D = $procmux$19984_Y, Q = \registers_21).
Adding SRST signal on $procdff$23550 ($dff) from module RegisterFile (D = $procmux$19972_Y, Q = \registers_22, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24430 ($sdff) from module RegisterFile (D = $procmux$19972_Y, Q = \registers_22).
Adding SRST signal on $procdff$23551 ($dff) from module RegisterFile (D = $procmux$19960_Y, Q = \registers_23, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24434 ($sdff) from module RegisterFile (D = $procmux$19960_Y, Q = \registers_23).
Adding SRST signal on $procdff$23552 ($dff) from module RegisterFile (D = $procmux$19948_Y, Q = \registers_24, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24438 ($sdff) from module RegisterFile (D = $procmux$19948_Y, Q = \registers_24).
Adding SRST signal on $procdff$23553 ($dff) from module RegisterFile (D = $procmux$19936_Y, Q = \registers_25, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24442 ($sdff) from module RegisterFile (D = $procmux$19936_Y, Q = \registers_25).
Adding SRST signal on $procdff$23554 ($dff) from module RegisterFile (D = $procmux$19924_Y, Q = \registers_26, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24446 ($sdff) from module RegisterFile (D = $procmux$19924_Y, Q = \registers_26).
Adding SRST signal on $procdff$23555 ($dff) from module RegisterFile (D = $procmux$19912_Y, Q = \registers_27, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24450 ($sdff) from module RegisterFile (D = $procmux$19912_Y, Q = \registers_27).
Adding SRST signal on $procdff$23556 ($dff) from module RegisterFile (D = $procmux$19900_Y, Q = \registers_28, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24454 ($sdff) from module RegisterFile (D = $procmux$19900_Y, Q = \registers_28).
Adding SRST signal on $procdff$23557 ($dff) from module RegisterFile (D = $procmux$19888_Y, Q = \registers_29, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24458 ($sdff) from module RegisterFile (D = $procmux$19888_Y, Q = \registers_29).
Adding SRST signal on $procdff$23558 ($dff) from module RegisterFile (D = $procmux$19876_Y, Q = \registers_30, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$24462 ($sdff) from module RegisterFile (D = $procmux$19876_Y, Q = \registers_30).
Adding SRST signal on $procdff$23559 ($dff) from module ReorderBuffer_1 (D = $procmux$21223_Y, Q = \head, rval = 4'0000).
Adding SRST signal on $procdff$23560 ($dff) from module ReorderBuffer_1 (D = $add$B4Processor.v:7664$6760_Y, Q = \tail, rval = 4'0000).
Adding SRST signal on $procdff$23561 ($dff) from module ReorderBuffer_1 (D = $procmux$20956_Y, Q = \buffer_0_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23562 ($dff) from module ReorderBuffer_1 (D = $procmux$20947_Y, Q = \buffer_0_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23563 ($dff) from module ReorderBuffer_1 (D = $procmux$20935_Y, Q = \buffer_0_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23564 ($dff) from module ReorderBuffer_1 (D = $procmux$20926_Y, Q = \buffer_0_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23565 ($dff) from module ReorderBuffer_1 (D = $procmux$20917_Y, Q = \buffer_1_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23566 ($dff) from module ReorderBuffer_1 (D = $procmux$20908_Y, Q = \buffer_1_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23567 ($dff) from module ReorderBuffer_1 (D = $procmux$20896_Y, Q = \buffer_1_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23568 ($dff) from module ReorderBuffer_1 (D = $procmux$20887_Y, Q = \buffer_1_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23569 ($dff) from module ReorderBuffer_1 (D = $procmux$20878_Y, Q = \buffer_2_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23570 ($dff) from module ReorderBuffer_1 (D = $procmux$20869_Y, Q = \buffer_2_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23571 ($dff) from module ReorderBuffer_1 (D = $procmux$20857_Y, Q = \buffer_2_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23572 ($dff) from module ReorderBuffer_1 (D = $procmux$20848_Y, Q = \buffer_2_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23573 ($dff) from module ReorderBuffer_1 (D = $procmux$20839_Y, Q = \buffer_3_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23574 ($dff) from module ReorderBuffer_1 (D = $procmux$20830_Y, Q = \buffer_3_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23575 ($dff) from module ReorderBuffer_1 (D = $procmux$20818_Y, Q = \buffer_3_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23576 ($dff) from module ReorderBuffer_1 (D = $procmux$20809_Y, Q = \buffer_3_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23577 ($dff) from module ReorderBuffer_1 (D = $procmux$20800_Y, Q = \buffer_4_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23578 ($dff) from module ReorderBuffer_1 (D = $procmux$20791_Y, Q = \buffer_4_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23579 ($dff) from module ReorderBuffer_1 (D = $procmux$20779_Y, Q = \buffer_4_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23580 ($dff) from module ReorderBuffer_1 (D = $procmux$20770_Y, Q = \buffer_4_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23581 ($dff) from module ReorderBuffer_1 (D = $procmux$20761_Y, Q = \buffer_5_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23582 ($dff) from module ReorderBuffer_1 (D = $procmux$20752_Y, Q = \buffer_5_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23583 ($dff) from module ReorderBuffer_1 (D = $procmux$20740_Y, Q = \buffer_5_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23584 ($dff) from module ReorderBuffer_1 (D = $procmux$20731_Y, Q = \buffer_5_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23585 ($dff) from module ReorderBuffer_1 (D = $procmux$20722_Y, Q = \buffer_6_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23586 ($dff) from module ReorderBuffer_1 (D = $procmux$20713_Y, Q = \buffer_6_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23587 ($dff) from module ReorderBuffer_1 (D = $procmux$20701_Y, Q = \buffer_6_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23588 ($dff) from module ReorderBuffer_1 (D = $procmux$20692_Y, Q = \buffer_6_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23589 ($dff) from module ReorderBuffer_1 (D = $procmux$20683_Y, Q = \buffer_7_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23590 ($dff) from module ReorderBuffer_1 (D = $procmux$20674_Y, Q = \buffer_7_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23591 ($dff) from module ReorderBuffer_1 (D = $procmux$20662_Y, Q = \buffer_7_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23592 ($dff) from module ReorderBuffer_1 (D = $procmux$20653_Y, Q = \buffer_7_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23593 ($dff) from module ReorderBuffer_1 (D = $procmux$20644_Y, Q = \buffer_8_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23594 ($dff) from module ReorderBuffer_1 (D = $procmux$20635_Y, Q = \buffer_8_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23595 ($dff) from module ReorderBuffer_1 (D = $procmux$20623_Y, Q = \buffer_8_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23596 ($dff) from module ReorderBuffer_1 (D = $procmux$20614_Y, Q = \buffer_8_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23597 ($dff) from module ReorderBuffer_1 (D = $procmux$20605_Y, Q = \buffer_9_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23598 ($dff) from module ReorderBuffer_1 (D = $procmux$20596_Y, Q = \buffer_9_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23599 ($dff) from module ReorderBuffer_1 (D = $procmux$20584_Y, Q = \buffer_9_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23600 ($dff) from module ReorderBuffer_1 (D = $procmux$20575_Y, Q = \buffer_9_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23601 ($dff) from module ReorderBuffer_1 (D = $procmux$20566_Y, Q = \buffer_10_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23602 ($dff) from module ReorderBuffer_1 (D = $procmux$20557_Y, Q = \buffer_10_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23603 ($dff) from module ReorderBuffer_1 (D = $procmux$20545_Y, Q = \buffer_10_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23604 ($dff) from module ReorderBuffer_1 (D = $procmux$20536_Y, Q = \buffer_10_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23605 ($dff) from module ReorderBuffer_1 (D = $procmux$20527_Y, Q = \buffer_11_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23606 ($dff) from module ReorderBuffer_1 (D = $procmux$20518_Y, Q = \buffer_11_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23607 ($dff) from module ReorderBuffer_1 (D = $procmux$20506_Y, Q = \buffer_11_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23608 ($dff) from module ReorderBuffer_1 (D = $procmux$20497_Y, Q = \buffer_11_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23609 ($dff) from module ReorderBuffer_1 (D = $procmux$20488_Y, Q = \buffer_12_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23610 ($dff) from module ReorderBuffer_1 (D = $procmux$20479_Y, Q = \buffer_12_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23611 ($dff) from module ReorderBuffer_1 (D = $procmux$20467_Y, Q = \buffer_12_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23612 ($dff) from module ReorderBuffer_1 (D = $procmux$20458_Y, Q = \buffer_12_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23613 ($dff) from module ReorderBuffer_1 (D = $procmux$20449_Y, Q = \buffer_13_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23614 ($dff) from module ReorderBuffer_1 (D = $procmux$20440_Y, Q = \buffer_13_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23615 ($dff) from module ReorderBuffer_1 (D = $procmux$20428_Y, Q = \buffer_13_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23616 ($dff) from module ReorderBuffer_1 (D = $procmux$20419_Y, Q = \buffer_13_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23617 ($dff) from module ReorderBuffer_1 (D = $procmux$20410_Y, Q = \buffer_14_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23618 ($dff) from module ReorderBuffer_1 (D = $procmux$20401_Y, Q = \buffer_14_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23619 ($dff) from module ReorderBuffer_1 (D = $procmux$20389_Y, Q = \buffer_14_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23620 ($dff) from module ReorderBuffer_1 (D = $procmux$20380_Y, Q = \buffer_14_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23621 ($dff) from module ReorderBuffer_1 (D = $procmux$20371_Y, Q = \buffer_15_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23622 ($dff) from module ReorderBuffer_1 (D = $procmux$20362_Y, Q = \buffer_15_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23623 ($dff) from module ReorderBuffer_1 (D = $procmux$20350_Y, Q = \buffer_15_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23624 ($dff) from module ReorderBuffer_1 (D = $procmux$20341_Y, Q = \buffer_15_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23625 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8048$7521_Y, Q = \registerTagMap_0_valid, rval = 1'0).
Adding EN signal on $procdff$23626 ($dff) from module ReorderBuffer_1 (D = $procmux$21218_Y, Q = \registerTagMap_0_tagId).
Adding SRST signal on $procdff$23627 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8050$7525_Y, Q = \registerTagMap_1_valid, rval = 1'0).
Adding EN signal on $procdff$23628 ($dff) from module ReorderBuffer_1 (D = $procmux$21210_Y, Q = \registerTagMap_1_tagId).
Adding SRST signal on $procdff$23629 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8052$7529_Y, Q = \registerTagMap_2_valid, rval = 1'0).
Adding EN signal on $procdff$23630 ($dff) from module ReorderBuffer_1 (D = $procmux$21202_Y, Q = \registerTagMap_2_tagId).
Adding SRST signal on $procdff$23631 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8054$7533_Y, Q = \registerTagMap_3_valid, rval = 1'0).
Adding EN signal on $procdff$23632 ($dff) from module ReorderBuffer_1 (D = $procmux$21194_Y, Q = \registerTagMap_3_tagId).
Adding SRST signal on $procdff$23633 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8056$7537_Y, Q = \registerTagMap_4_valid, rval = 1'0).
Adding EN signal on $procdff$23634 ($dff) from module ReorderBuffer_1 (D = $procmux$21186_Y, Q = \registerTagMap_4_tagId).
Adding SRST signal on $procdff$23635 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8058$7541_Y, Q = \registerTagMap_5_valid, rval = 1'0).
Adding EN signal on $procdff$23636 ($dff) from module ReorderBuffer_1 (D = $procmux$21178_Y, Q = \registerTagMap_5_tagId).
Adding SRST signal on $procdff$23637 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8060$7545_Y, Q = \registerTagMap_6_valid, rval = 1'0).
Adding EN signal on $procdff$23638 ($dff) from module ReorderBuffer_1 (D = $procmux$21170_Y, Q = \registerTagMap_6_tagId).
Adding SRST signal on $procdff$23639 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8062$7549_Y, Q = \registerTagMap_7_valid, rval = 1'0).
Adding EN signal on $procdff$23640 ($dff) from module ReorderBuffer_1 (D = $procmux$21162_Y, Q = \registerTagMap_7_tagId).
Adding SRST signal on $procdff$23641 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8064$7553_Y, Q = \registerTagMap_8_valid, rval = 1'0).
Adding EN signal on $procdff$23642 ($dff) from module ReorderBuffer_1 (D = $procmux$21154_Y, Q = \registerTagMap_8_tagId).
Adding SRST signal on $procdff$23643 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8066$7557_Y, Q = \registerTagMap_9_valid, rval = 1'0).
Adding EN signal on $procdff$23644 ($dff) from module ReorderBuffer_1 (D = $procmux$21146_Y, Q = \registerTagMap_9_tagId).
Adding SRST signal on $procdff$23645 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8068$7561_Y, Q = \registerTagMap_10_valid, rval = 1'0).
Adding EN signal on $procdff$23646 ($dff) from module ReorderBuffer_1 (D = $procmux$21138_Y, Q = \registerTagMap_10_tagId).
Adding SRST signal on $procdff$23647 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8070$7565_Y, Q = \registerTagMap_11_valid, rval = 1'0).
Adding EN signal on $procdff$23648 ($dff) from module ReorderBuffer_1 (D = $procmux$21130_Y, Q = \registerTagMap_11_tagId).
Adding SRST signal on $procdff$23649 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8072$7569_Y, Q = \registerTagMap_12_valid, rval = 1'0).
Adding EN signal on $procdff$23650 ($dff) from module ReorderBuffer_1 (D = $procmux$21122_Y, Q = \registerTagMap_12_tagId).
Adding SRST signal on $procdff$23651 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8074$7573_Y, Q = \registerTagMap_13_valid, rval = 1'0).
Adding EN signal on $procdff$23652 ($dff) from module ReorderBuffer_1 (D = $procmux$21114_Y, Q = \registerTagMap_13_tagId).
Adding SRST signal on $procdff$23653 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8076$7577_Y, Q = \registerTagMap_14_valid, rval = 1'0).
Adding EN signal on $procdff$23654 ($dff) from module ReorderBuffer_1 (D = $procmux$21106_Y, Q = \registerTagMap_14_tagId).
Adding SRST signal on $procdff$23655 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8078$7581_Y, Q = \registerTagMap_15_valid, rval = 1'0).
Adding EN signal on $procdff$23656 ($dff) from module ReorderBuffer_1 (D = $procmux$21098_Y, Q = \registerTagMap_15_tagId).
Adding SRST signal on $procdff$23657 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8080$7585_Y, Q = \registerTagMap_16_valid, rval = 1'0).
Adding EN signal on $procdff$23658 ($dff) from module ReorderBuffer_1 (D = $procmux$21090_Y, Q = \registerTagMap_16_tagId).
Adding SRST signal on $procdff$23659 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8082$7589_Y, Q = \registerTagMap_17_valid, rval = 1'0).
Adding EN signal on $procdff$23660 ($dff) from module ReorderBuffer_1 (D = $procmux$21082_Y, Q = \registerTagMap_17_tagId).
Adding SRST signal on $procdff$23661 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8084$7593_Y, Q = \registerTagMap_18_valid, rval = 1'0).
Adding EN signal on $procdff$23662 ($dff) from module ReorderBuffer_1 (D = $procmux$21074_Y, Q = \registerTagMap_18_tagId).
Adding SRST signal on $procdff$23663 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8086$7597_Y, Q = \registerTagMap_19_valid, rval = 1'0).
Adding EN signal on $procdff$23664 ($dff) from module ReorderBuffer_1 (D = $procmux$21066_Y, Q = \registerTagMap_19_tagId).
Adding SRST signal on $procdff$23665 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8088$7601_Y, Q = \registerTagMap_20_valid, rval = 1'0).
Adding EN signal on $procdff$23666 ($dff) from module ReorderBuffer_1 (D = $procmux$21058_Y, Q = \registerTagMap_20_tagId).
Adding SRST signal on $procdff$23667 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8090$7605_Y, Q = \registerTagMap_21_valid, rval = 1'0).
Adding EN signal on $procdff$23668 ($dff) from module ReorderBuffer_1 (D = $procmux$21050_Y, Q = \registerTagMap_21_tagId).
Adding SRST signal on $procdff$23669 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8092$7609_Y, Q = \registerTagMap_22_valid, rval = 1'0).
Adding EN signal on $procdff$23670 ($dff) from module ReorderBuffer_1 (D = $procmux$21042_Y, Q = \registerTagMap_22_tagId).
Adding SRST signal on $procdff$23671 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8094$7613_Y, Q = \registerTagMap_23_valid, rval = 1'0).
Adding EN signal on $procdff$23672 ($dff) from module ReorderBuffer_1 (D = $procmux$21034_Y, Q = \registerTagMap_23_tagId).
Adding SRST signal on $procdff$23673 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8096$7617_Y, Q = \registerTagMap_24_valid, rval = 1'0).
Adding EN signal on $procdff$23674 ($dff) from module ReorderBuffer_1 (D = $procmux$21026_Y, Q = \registerTagMap_24_tagId).
Adding SRST signal on $procdff$23675 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8098$7621_Y, Q = \registerTagMap_25_valid, rval = 1'0).
Adding EN signal on $procdff$23676 ($dff) from module ReorderBuffer_1 (D = $procmux$21018_Y, Q = \registerTagMap_25_tagId).
Adding SRST signal on $procdff$23677 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8100$7625_Y, Q = \registerTagMap_26_valid, rval = 1'0).
Adding EN signal on $procdff$23678 ($dff) from module ReorderBuffer_1 (D = $procmux$21010_Y, Q = \registerTagMap_26_tagId).
Adding SRST signal on $procdff$23679 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8102$7629_Y, Q = \registerTagMap_27_valid, rval = 1'0).
Adding EN signal on $procdff$23680 ($dff) from module ReorderBuffer_1 (D = $procmux$21002_Y, Q = \registerTagMap_27_tagId).
Adding SRST signal on $procdff$23681 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8104$7633_Y, Q = \registerTagMap_28_valid, rval = 1'0).
Adding EN signal on $procdff$23682 ($dff) from module ReorderBuffer_1 (D = $procmux$20994_Y, Q = \registerTagMap_28_tagId).
Adding SRST signal on $procdff$23683 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8106$7637_Y, Q = \registerTagMap_29_valid, rval = 1'0).
Adding EN signal on $procdff$23684 ($dff) from module ReorderBuffer_1 (D = $procmux$20986_Y, Q = \registerTagMap_29_tagId).
Adding SRST signal on $procdff$23685 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8108$7641_Y, Q = \registerTagMap_30_valid, rval = 1'0).
Adding EN signal on $procdff$23686 ($dff) from module ReorderBuffer_1 (D = $procmux$20978_Y, Q = \registerTagMap_30_tagId).
Adding SRST signal on $procdff$23687 ($dff) from module ReorderBuffer_1 (D = $or$B4Processor.v:8110$7645_Y, Q = \registerTagMap_31_valid, rval = 1'0).
Adding EN signal on $procdff$23688 ($dff) from module ReorderBuffer_1 (D = $procmux$20970_Y, Q = \registerTagMap_31_tagId).
Adding SRST signal on $procdff$23689 ($dff) from module ReorderBuffer (D = $procmux$22210_Y, Q = \head, rval = 4'0000).
Adding SRST signal on $procdff$23690 ($dff) from module ReorderBuffer (D = $add$B4Processor.v:4113$3571_Y, Q = \tail, rval = 4'0000).
Adding SRST signal on $procdff$23691 ($dff) from module ReorderBuffer (D = $procmux$21943_Y, Q = \buffer_0_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23692 ($dff) from module ReorderBuffer (D = $procmux$21934_Y, Q = \buffer_0_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23693 ($dff) from module ReorderBuffer (D = $procmux$21922_Y, Q = \buffer_0_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23694 ($dff) from module ReorderBuffer (D = $procmux$21913_Y, Q = \buffer_0_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23695 ($dff) from module ReorderBuffer (D = $procmux$21904_Y, Q = \buffer_1_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23696 ($dff) from module ReorderBuffer (D = $procmux$21895_Y, Q = \buffer_1_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23697 ($dff) from module ReorderBuffer (D = $procmux$21883_Y, Q = \buffer_1_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23698 ($dff) from module ReorderBuffer (D = $procmux$21874_Y, Q = \buffer_1_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23699 ($dff) from module ReorderBuffer (D = $procmux$21865_Y, Q = \buffer_2_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23700 ($dff) from module ReorderBuffer (D = $procmux$21856_Y, Q = \buffer_2_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23701 ($dff) from module ReorderBuffer (D = $procmux$21844_Y, Q = \buffer_2_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23702 ($dff) from module ReorderBuffer (D = $procmux$21835_Y, Q = \buffer_2_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23703 ($dff) from module ReorderBuffer (D = $procmux$21826_Y, Q = \buffer_3_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23704 ($dff) from module ReorderBuffer (D = $procmux$21817_Y, Q = \buffer_3_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23705 ($dff) from module ReorderBuffer (D = $procmux$21805_Y, Q = \buffer_3_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23706 ($dff) from module ReorderBuffer (D = $procmux$21796_Y, Q = \buffer_3_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23707 ($dff) from module ReorderBuffer (D = $procmux$21787_Y, Q = \buffer_4_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23708 ($dff) from module ReorderBuffer (D = $procmux$21778_Y, Q = \buffer_4_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23709 ($dff) from module ReorderBuffer (D = $procmux$21766_Y, Q = \buffer_4_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23710 ($dff) from module ReorderBuffer (D = $procmux$21757_Y, Q = \buffer_4_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23711 ($dff) from module ReorderBuffer (D = $procmux$21748_Y, Q = \buffer_5_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23712 ($dff) from module ReorderBuffer (D = $procmux$21739_Y, Q = \buffer_5_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23713 ($dff) from module ReorderBuffer (D = $procmux$21727_Y, Q = \buffer_5_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23714 ($dff) from module ReorderBuffer (D = $procmux$21718_Y, Q = \buffer_5_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23715 ($dff) from module ReorderBuffer (D = $procmux$21709_Y, Q = \buffer_6_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23716 ($dff) from module ReorderBuffer (D = $procmux$21700_Y, Q = \buffer_6_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23717 ($dff) from module ReorderBuffer (D = $procmux$21688_Y, Q = \buffer_6_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23718 ($dff) from module ReorderBuffer (D = $procmux$21679_Y, Q = \buffer_6_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23719 ($dff) from module ReorderBuffer (D = $procmux$21670_Y, Q = \buffer_7_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23720 ($dff) from module ReorderBuffer (D = $procmux$21661_Y, Q = \buffer_7_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23721 ($dff) from module ReorderBuffer (D = $procmux$21649_Y, Q = \buffer_7_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23722 ($dff) from module ReorderBuffer (D = $procmux$21640_Y, Q = \buffer_7_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23723 ($dff) from module ReorderBuffer (D = $procmux$21631_Y, Q = \buffer_8_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23724 ($dff) from module ReorderBuffer (D = $procmux$21622_Y, Q = \buffer_8_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23725 ($dff) from module ReorderBuffer (D = $procmux$21610_Y, Q = \buffer_8_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23726 ($dff) from module ReorderBuffer (D = $procmux$21601_Y, Q = \buffer_8_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23727 ($dff) from module ReorderBuffer (D = $procmux$21592_Y, Q = \buffer_9_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23728 ($dff) from module ReorderBuffer (D = $procmux$21583_Y, Q = \buffer_9_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23729 ($dff) from module ReorderBuffer (D = $procmux$21571_Y, Q = \buffer_9_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23730 ($dff) from module ReorderBuffer (D = $procmux$21562_Y, Q = \buffer_9_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23731 ($dff) from module ReorderBuffer (D = $procmux$21553_Y, Q = \buffer_10_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23732 ($dff) from module ReorderBuffer (D = $procmux$21544_Y, Q = \buffer_10_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23733 ($dff) from module ReorderBuffer (D = $procmux$21532_Y, Q = \buffer_10_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23734 ($dff) from module ReorderBuffer (D = $procmux$21523_Y, Q = \buffer_10_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23735 ($dff) from module ReorderBuffer (D = $procmux$21514_Y, Q = \buffer_11_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23736 ($dff) from module ReorderBuffer (D = $procmux$21505_Y, Q = \buffer_11_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23737 ($dff) from module ReorderBuffer (D = $procmux$21493_Y, Q = \buffer_11_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23738 ($dff) from module ReorderBuffer (D = $procmux$21484_Y, Q = \buffer_11_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23739 ($dff) from module ReorderBuffer (D = $procmux$21475_Y, Q = \buffer_12_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23740 ($dff) from module ReorderBuffer (D = $procmux$21466_Y, Q = \buffer_12_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23741 ($dff) from module ReorderBuffer (D = $procmux$21454_Y, Q = \buffer_12_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23742 ($dff) from module ReorderBuffer (D = $procmux$21445_Y, Q = \buffer_12_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23743 ($dff) from module ReorderBuffer (D = $procmux$21436_Y, Q = \buffer_13_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23744 ($dff) from module ReorderBuffer (D = $procmux$21427_Y, Q = \buffer_13_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23745 ($dff) from module ReorderBuffer (D = $procmux$21415_Y, Q = \buffer_13_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23746 ($dff) from module ReorderBuffer (D = $procmux$21406_Y, Q = \buffer_13_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23747 ($dff) from module ReorderBuffer (D = $procmux$21397_Y, Q = \buffer_14_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23748 ($dff) from module ReorderBuffer (D = $procmux$21388_Y, Q = \buffer_14_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23749 ($dff) from module ReorderBuffer (D = $procmux$21376_Y, Q = \buffer_14_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23750 ($dff) from module ReorderBuffer (D = $procmux$21367_Y, Q = \buffer_14_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23751 ($dff) from module ReorderBuffer (D = $procmux$21358_Y, Q = \buffer_15_destinationRegister, rval = 5'00000).
Adding SRST signal on $procdff$23752 ($dff) from module ReorderBuffer (D = $procmux$21349_Y, Q = \buffer_15_valueReady, rval = 1'0).
Adding SRST signal on $procdff$23753 ($dff) from module ReorderBuffer (D = $procmux$21337_Y, Q = \buffer_15_value, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $procdff$23754 ($dff) from module ReorderBuffer (D = $procmux$21328_Y, Q = \buffer_15_storeSign, rval = 1'0).
Adding SRST signal on $procdff$23755 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4497$4332_Y, Q = \registerTagMap_0_valid, rval = 1'0).
Adding EN signal on $procdff$23756 ($dff) from module ReorderBuffer (D = $procmux$22205_Y, Q = \registerTagMap_0_tagId).
Adding SRST signal on $procdff$23757 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4499$4336_Y, Q = \registerTagMap_1_valid, rval = 1'0).
Adding EN signal on $procdff$23758 ($dff) from module ReorderBuffer (D = $procmux$22197_Y, Q = \registerTagMap_1_tagId).
Adding SRST signal on $procdff$23759 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4501$4340_Y, Q = \registerTagMap_2_valid, rval = 1'0).
Adding EN signal on $procdff$23760 ($dff) from module ReorderBuffer (D = $procmux$22189_Y, Q = \registerTagMap_2_tagId).
Adding SRST signal on $procdff$23761 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4503$4344_Y, Q = \registerTagMap_3_valid, rval = 1'0).
Adding EN signal on $procdff$23762 ($dff) from module ReorderBuffer (D = $procmux$22181_Y, Q = \registerTagMap_3_tagId).
Adding SRST signal on $procdff$23763 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4505$4348_Y, Q = \registerTagMap_4_valid, rval = 1'0).
Adding EN signal on $procdff$23764 ($dff) from module ReorderBuffer (D = $procmux$22173_Y, Q = \registerTagMap_4_tagId).
Adding SRST signal on $procdff$23765 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4507$4352_Y, Q = \registerTagMap_5_valid, rval = 1'0).
Adding EN signal on $procdff$23766 ($dff) from module ReorderBuffer (D = $procmux$22165_Y, Q = \registerTagMap_5_tagId).
Adding SRST signal on $procdff$23767 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4509$4356_Y, Q = \registerTagMap_6_valid, rval = 1'0).
Adding EN signal on $procdff$23768 ($dff) from module ReorderBuffer (D = $procmux$22157_Y, Q = \registerTagMap_6_tagId).
Adding SRST signal on $procdff$23769 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4511$4360_Y, Q = \registerTagMap_7_valid, rval = 1'0).
Adding EN signal on $procdff$23770 ($dff) from module ReorderBuffer (D = $procmux$22149_Y, Q = \registerTagMap_7_tagId).
Adding SRST signal on $procdff$23771 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4513$4364_Y, Q = \registerTagMap_8_valid, rval = 1'0).
Adding EN signal on $procdff$23772 ($dff) from module ReorderBuffer (D = $procmux$22141_Y, Q = \registerTagMap_8_tagId).
Adding SRST signal on $procdff$23773 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4515$4368_Y, Q = \registerTagMap_9_valid, rval = 1'0).
Adding EN signal on $procdff$23774 ($dff) from module ReorderBuffer (D = $procmux$22133_Y, Q = \registerTagMap_9_tagId).
Adding SRST signal on $procdff$23775 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4517$4372_Y, Q = \registerTagMap_10_valid, rval = 1'0).
Adding EN signal on $procdff$23776 ($dff) from module ReorderBuffer (D = $procmux$22125_Y, Q = \registerTagMap_10_tagId).
Adding SRST signal on $procdff$23777 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4519$4376_Y, Q = \registerTagMap_11_valid, rval = 1'0).
Adding EN signal on $procdff$23778 ($dff) from module ReorderBuffer (D = $procmux$22117_Y, Q = \registerTagMap_11_tagId).
Adding SRST signal on $procdff$23779 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4521$4380_Y, Q = \registerTagMap_12_valid, rval = 1'0).
Adding EN signal on $procdff$23780 ($dff) from module ReorderBuffer (D = $procmux$22109_Y, Q = \registerTagMap_12_tagId).
Adding SRST signal on $procdff$23781 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4523$4384_Y, Q = \registerTagMap_13_valid, rval = 1'0).
Adding EN signal on $procdff$23782 ($dff) from module ReorderBuffer (D = $procmux$22101_Y, Q = \registerTagMap_13_tagId).
Adding SRST signal on $procdff$23783 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4525$4388_Y, Q = \registerTagMap_14_valid, rval = 1'0).
Adding EN signal on $procdff$23784 ($dff) from module ReorderBuffer (D = $procmux$22093_Y, Q = \registerTagMap_14_tagId).
Adding SRST signal on $procdff$23785 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4527$4392_Y, Q = \registerTagMap_15_valid, rval = 1'0).
Adding EN signal on $procdff$23786 ($dff) from module ReorderBuffer (D = $procmux$22085_Y, Q = \registerTagMap_15_tagId).
Adding SRST signal on $procdff$23787 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4529$4396_Y, Q = \registerTagMap_16_valid, rval = 1'0).
Adding EN signal on $procdff$23788 ($dff) from module ReorderBuffer (D = $procmux$22077_Y, Q = \registerTagMap_16_tagId).
Adding SRST signal on $procdff$23789 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4531$4400_Y, Q = \registerTagMap_17_valid, rval = 1'0).
Adding EN signal on $procdff$23790 ($dff) from module ReorderBuffer (D = $procmux$22069_Y, Q = \registerTagMap_17_tagId).
Adding SRST signal on $procdff$23791 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4533$4404_Y, Q = \registerTagMap_18_valid, rval = 1'0).
Adding EN signal on $procdff$23792 ($dff) from module ReorderBuffer (D = $procmux$22061_Y, Q = \registerTagMap_18_tagId).
Adding SRST signal on $procdff$23793 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4535$4408_Y, Q = \registerTagMap_19_valid, rval = 1'0).
Adding EN signal on $procdff$23794 ($dff) from module ReorderBuffer (D = $procmux$22053_Y, Q = \registerTagMap_19_tagId).
Adding SRST signal on $procdff$23795 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4537$4412_Y, Q = \registerTagMap_20_valid, rval = 1'0).
Adding EN signal on $procdff$23796 ($dff) from module ReorderBuffer (D = $procmux$22045_Y, Q = \registerTagMap_20_tagId).
Adding SRST signal on $procdff$23797 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4539$4416_Y, Q = \registerTagMap_21_valid, rval = 1'0).
Adding EN signal on $procdff$23798 ($dff) from module ReorderBuffer (D = $procmux$22037_Y, Q = \registerTagMap_21_tagId).
Adding SRST signal on $procdff$23799 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4541$4420_Y, Q = \registerTagMap_22_valid, rval = 1'0).
Adding EN signal on $procdff$23800 ($dff) from module ReorderBuffer (D = $procmux$22029_Y, Q = \registerTagMap_22_tagId).
Adding SRST signal on $procdff$23801 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4543$4424_Y, Q = \registerTagMap_23_valid, rval = 1'0).
Adding EN signal on $procdff$23802 ($dff) from module ReorderBuffer (D = $procmux$22021_Y, Q = \registerTagMap_23_tagId).
Adding SRST signal on $procdff$23803 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4545$4428_Y, Q = \registerTagMap_24_valid, rval = 1'0).
Adding EN signal on $procdff$23804 ($dff) from module ReorderBuffer (D = $procmux$22013_Y, Q = \registerTagMap_24_tagId).
Adding SRST signal on $procdff$23805 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4547$4432_Y, Q = \registerTagMap_25_valid, rval = 1'0).
Adding EN signal on $procdff$23806 ($dff) from module ReorderBuffer (D = $procmux$22005_Y, Q = \registerTagMap_25_tagId).
Adding SRST signal on $procdff$23807 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4549$4436_Y, Q = \registerTagMap_26_valid, rval = 1'0).
Adding EN signal on $procdff$23808 ($dff) from module ReorderBuffer (D = $procmux$21997_Y, Q = \registerTagMap_26_tagId).
Adding SRST signal on $procdff$23809 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4551$4440_Y, Q = \registerTagMap_27_valid, rval = 1'0).
Adding EN signal on $procdff$23810 ($dff) from module ReorderBuffer (D = $procmux$21989_Y, Q = \registerTagMap_27_tagId).
Adding SRST signal on $procdff$23811 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4553$4444_Y, Q = \registerTagMap_28_valid, rval = 1'0).
Adding EN signal on $procdff$23812 ($dff) from module ReorderBuffer (D = $procmux$21981_Y, Q = \registerTagMap_28_tagId).
Adding SRST signal on $procdff$23813 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4555$4448_Y, Q = \registerTagMap_29_valid, rval = 1'0).
Adding EN signal on $procdff$23814 ($dff) from module ReorderBuffer (D = $procmux$21973_Y, Q = \registerTagMap_29_tagId).
Adding SRST signal on $procdff$23815 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4557$4452_Y, Q = \registerTagMap_30_valid, rval = 1'0).
Adding EN signal on $procdff$23816 ($dff) from module ReorderBuffer (D = $procmux$21965_Y, Q = \registerTagMap_30_tagId).
Adding SRST signal on $procdff$23817 ($dff) from module ReorderBuffer (D = $or$B4Processor.v:4559$4456_Y, Q = \registerTagMap_31_valid, rval = 1'0).
Adding EN signal on $procdff$23818 ($dff) from module ReorderBuffer (D = $procmux$21957_Y, Q = \registerTagMap_31_tagId).
Adding SRST signal on $procdff$23819 ($dff) from module FetchBuffer (D = $procmux$22322_Y, Q = \head, rval = 3'000).
Adding SRST signal on $procdff$23836 ($dff) from module FetchBuffer (D = $procmux$22314_Y, Q = \tail, rval = 3'000).
Adding SRST signal on $procdff$23838 ($dff) from module Fetch_1 (D = $procmux$22334_Y, Q = \waiting, rval = 3'000).
Adding SRST signal on $procdff$23837 ($dff) from module Fetch_1 (D = $procmux$22346_Y, Q = \pc, rval = 64'0000000000000000000000000000000000100000000000000000000000000000).
Adding SRST signal on $procdff$23840 ($dff) from module Fetch (D = $procmux$22358_Y, Q = \waiting, rval = 3'000).
Adding SRST signal on $procdff$23839 ($dff) from module Fetch (D = $procmux$22370_Y, Q = \pc, rval = 64'0000000000000000000000000000000000100000000000000000000000000000).
Adding EN signal on $procdff$23883 ($dff) from module InstructionMemoryCache_1 (D = { $ternary$B4Processor.v:1272$1185_Y \readIndex 3'000 }, Q = \transaction_address).
Adding SRST signal on $procdff$23885 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22403_Y, Q = \head, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$24861 ($sdff) from module InstructionMemoryCache_1 (D = $add$B4Processor.v:1365$1442_Y, Q = \head).
Adding EN signal on $procdff$23873 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22484_Y, Q = \buf_3_data_0).
Adding EN signal on $procdff$23874 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22474_Y, Q = \buf_3_data_1).
Adding EN signal on $procdff$23875 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22464_Y, Q = \buf_3_data_2).
Adding EN signal on $procdff$23876 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22454_Y, Q = \buf_3_data_3).
Adding SRST signal on $procdff$23871 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22503_Y, Q = \buf_3_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$24885 ($sdff) from module InstructionMemoryCache_1 (D = $procmux$22499_Y, Q = \buf_3_valid).
Adding EN signal on $procdff$23877 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22444_Y, Q = \buf_3_data_4).
Adding EN signal on $procdff$23878 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22434_Y, Q = \buf_3_data_5).
Adding EN signal on $procdff$23879 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22424_Y, Q = \buf_3_data_6).
Adding EN signal on $procdff$23880 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22414_Y, Q = \buf_3_data_7).
Adding SRST signal on $procdff$23881 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22394_Y, Q = \state, rval = 1'0).
Adding EN signal on $procdff$23872 ($dff) from module InstructionMemoryCache_1 (D = $ternary$B4Processor.v:1272$1185_Y, Q = \buf_3_upper).
Adding SRST signal on $procdff$23841 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22797_Y, Q = \buf_0_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$24913 ($sdff) from module InstructionMemoryCache_1 (D = $procmux$22793_Y, Q = \buf_0_valid).
Adding EN signal on $procdff$23842 ($dff) from module InstructionMemoryCache_1 (D = $ternary$B4Processor.v:1272$1185_Y, Q = \buf_0_upper).
Adding EN signal on $procdff$23843 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22778_Y, Q = \buf_0_data_0).
Adding EN signal on $procdff$23844 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22768_Y, Q = \buf_0_data_1).
Adding EN signal on $procdff$23845 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22758_Y, Q = \buf_0_data_2).
Adding EN signal on $procdff$23846 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22748_Y, Q = \buf_0_data_3).
Adding EN signal on $procdff$23847 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22738_Y, Q = \buf_0_data_4).
Adding EN signal on $procdff$23848 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22728_Y, Q = \buf_0_data_5).
Adding EN signal on $procdff$23849 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22718_Y, Q = \buf_0_data_6).
Adding EN signal on $procdff$23850 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22708_Y, Q = \buf_0_data_7).
Adding SRST signal on $procdff$23851 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22699_Y, Q = \buf_1_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$24960 ($sdff) from module InstructionMemoryCache_1 (D = $procmux$22695_Y, Q = \buf_1_valid).
Adding EN signal on $procdff$23852 ($dff) from module InstructionMemoryCache_1 (D = $ternary$B4Processor.v:1272$1185_Y, Q = \buf_1_upper).
Adding EN signal on $procdff$23853 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22680_Y, Q = \buf_1_data_0).
Adding EN signal on $procdff$23854 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22670_Y, Q = \buf_1_data_1).
Adding EN signal on $procdff$23855 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22660_Y, Q = \buf_1_data_2).
Adding EN signal on $procdff$23856 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22650_Y, Q = \buf_1_data_3).
Adding EN signal on $procdff$23857 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22640_Y, Q = \buf_1_data_4).
Adding EN signal on $procdff$23858 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22630_Y, Q = \buf_1_data_5).
Adding EN signal on $procdff$23859 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22620_Y, Q = \buf_1_data_6).
Adding EN signal on $procdff$23860 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22610_Y, Q = \buf_1_data_7).
Adding SRST signal on $procdff$23861 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22601_Y, Q = \buf_2_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$25007 ($sdff) from module InstructionMemoryCache_1 (D = $procmux$22597_Y, Q = \buf_2_valid).
Adding EN signal on $procdff$23862 ($dff) from module InstructionMemoryCache_1 (D = $ternary$B4Processor.v:1272$1185_Y, Q = \buf_2_upper).
Adding EN signal on $procdff$23863 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22582_Y, Q = \buf_2_data_0).
Adding EN signal on $procdff$23864 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22572_Y, Q = \buf_2_data_1).
Adding EN signal on $procdff$23865 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22562_Y, Q = \buf_2_data_2).
Adding EN signal on $procdff$23866 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22552_Y, Q = \buf_2_data_3).
Adding EN signal on $procdff$23867 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22542_Y, Q = \buf_2_data_4).
Adding EN signal on $procdff$23868 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22532_Y, Q = \buf_2_data_5).
Adding EN signal on $procdff$23869 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22522_Y, Q = \buf_2_data_6).
Adding EN signal on $procdff$23870 ($dff) from module InstructionMemoryCache_1 (D = $procmux$22512_Y, Q = \buf_2_data_7).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$24860 ($dffe) from module InstructionMemoryCache_1.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$24860 ($dffe) from module InstructionMemoryCache_1.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$24860 ($dffe) from module InstructionMemoryCache_1.
Adding EN signal on $procdff$23928 ($dff) from module InstructionMemoryCache (D = { $ternary$B4Processor.v:280$394_Y \readIndex 3'000 }, Q = \transaction_address).
Adding SRST signal on $procdff$23930 ($dff) from module InstructionMemoryCache (D = $procmux$22830_Y, Q = \head, rval = 2'00).
Adding EN signal on $auto$ff.cc:262:slice$25056 ($sdff) from module InstructionMemoryCache (D = $add$B4Processor.v:373$651_Y, Q = \head).
Adding EN signal on $procdff$23918 ($dff) from module InstructionMemoryCache (D = $procmux$22911_Y, Q = \buf_3_data_0).
Adding EN signal on $procdff$23919 ($dff) from module InstructionMemoryCache (D = $procmux$22901_Y, Q = \buf_3_data_1).
Adding EN signal on $procdff$23920 ($dff) from module InstructionMemoryCache (D = $procmux$22891_Y, Q = \buf_3_data_2).
Adding EN signal on $procdff$23921 ($dff) from module InstructionMemoryCache (D = $procmux$22881_Y, Q = \buf_3_data_3).
Adding SRST signal on $procdff$23916 ($dff) from module InstructionMemoryCache (D = $procmux$22930_Y, Q = \buf_3_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$25080 ($sdff) from module InstructionMemoryCache (D = $procmux$22926_Y, Q = \buf_3_valid).
Adding EN signal on $procdff$23922 ($dff) from module InstructionMemoryCache (D = $procmux$22871_Y, Q = \buf_3_data_4).
Adding EN signal on $procdff$23923 ($dff) from module InstructionMemoryCache (D = $procmux$22861_Y, Q = \buf_3_data_5).
Adding EN signal on $procdff$23924 ($dff) from module InstructionMemoryCache (D = $procmux$22851_Y, Q = \buf_3_data_6).
Adding EN signal on $procdff$23925 ($dff) from module InstructionMemoryCache (D = $procmux$22841_Y, Q = \buf_3_data_7).
Adding SRST signal on $procdff$23926 ($dff) from module InstructionMemoryCache (D = $procmux$22821_Y, Q = \state, rval = 1'0).
Adding EN signal on $procdff$23917 ($dff) from module InstructionMemoryCache (D = $ternary$B4Processor.v:280$394_Y, Q = \buf_3_upper).
Adding SRST signal on $procdff$23886 ($dff) from module InstructionMemoryCache (D = $procmux$23224_Y, Q = \buf_0_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$25108 ($sdff) from module InstructionMemoryCache (D = $procmux$23220_Y, Q = \buf_0_valid).
Adding EN signal on $procdff$23887 ($dff) from module InstructionMemoryCache (D = $ternary$B4Processor.v:280$394_Y, Q = \buf_0_upper).
Adding EN signal on $procdff$23888 ($dff) from module InstructionMemoryCache (D = $procmux$23205_Y, Q = \buf_0_data_0).
Adding EN signal on $procdff$23889 ($dff) from module InstructionMemoryCache (D = $procmux$23195_Y, Q = \buf_0_data_1).
Adding EN signal on $procdff$23890 ($dff) from module InstructionMemoryCache (D = $procmux$23185_Y, Q = \buf_0_data_2).
Adding EN signal on $procdff$23891 ($dff) from module InstructionMemoryCache (D = $procmux$23175_Y, Q = \buf_0_data_3).
Adding EN signal on $procdff$23892 ($dff) from module InstructionMemoryCache (D = $procmux$23165_Y, Q = \buf_0_data_4).
Adding EN signal on $procdff$23893 ($dff) from module InstructionMemoryCache (D = $procmux$23155_Y, Q = \buf_0_data_5).
Adding EN signal on $procdff$23894 ($dff) from module InstructionMemoryCache (D = $procmux$23145_Y, Q = \buf_0_data_6).
Adding EN signal on $procdff$23895 ($dff) from module InstructionMemoryCache (D = $procmux$23135_Y, Q = \buf_0_data_7).
Adding SRST signal on $procdff$23896 ($dff) from module InstructionMemoryCache (D = $procmux$23126_Y, Q = \buf_1_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$25155 ($sdff) from module InstructionMemoryCache (D = $procmux$23122_Y, Q = \buf_1_valid).
Adding EN signal on $procdff$23897 ($dff) from module InstructionMemoryCache (D = $ternary$B4Processor.v:280$394_Y, Q = \buf_1_upper).
Adding EN signal on $procdff$23898 ($dff) from module InstructionMemoryCache (D = $procmux$23107_Y, Q = \buf_1_data_0).
Adding EN signal on $procdff$23899 ($dff) from module InstructionMemoryCache (D = $procmux$23097_Y, Q = \buf_1_data_1).
Adding EN signal on $procdff$23900 ($dff) from module InstructionMemoryCache (D = $procmux$23087_Y, Q = \buf_1_data_2).
Adding EN signal on $procdff$23901 ($dff) from module InstructionMemoryCache (D = $procmux$23077_Y, Q = \buf_1_data_3).
Adding EN signal on $procdff$23902 ($dff) from module InstructionMemoryCache (D = $procmux$23067_Y, Q = \buf_1_data_4).
Adding EN signal on $procdff$23903 ($dff) from module InstructionMemoryCache (D = $procmux$23057_Y, Q = \buf_1_data_5).
Adding EN signal on $procdff$23904 ($dff) from module InstructionMemoryCache (D = $procmux$23047_Y, Q = \buf_1_data_6).
Adding EN signal on $procdff$23905 ($dff) from module InstructionMemoryCache (D = $procmux$23037_Y, Q = \buf_1_data_7).
Adding SRST signal on $procdff$23906 ($dff) from module InstructionMemoryCache (D = $procmux$23028_Y, Q = \buf_2_valid, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$25202 ($sdff) from module InstructionMemoryCache (D = $procmux$23024_Y, Q = \buf_2_valid).
Adding EN signal on $procdff$23907 ($dff) from module InstructionMemoryCache (D = $ternary$B4Processor.v:280$394_Y, Q = \buf_2_upper).
Adding EN signal on $procdff$23908 ($dff) from module InstructionMemoryCache (D = $procmux$23009_Y, Q = \buf_2_data_0).
Adding EN signal on $procdff$23909 ($dff) from module InstructionMemoryCache (D = $procmux$22999_Y, Q = \buf_2_data_1).
Adding EN signal on $procdff$23910 ($dff) from module InstructionMemoryCache (D = $procmux$22989_Y, Q = \buf_2_data_2).
Adding EN signal on $procdff$23911 ($dff) from module InstructionMemoryCache (D = $procmux$22979_Y, Q = \buf_2_data_3).
Adding EN signal on $procdff$23912 ($dff) from module InstructionMemoryCache (D = $procmux$22969_Y, Q = \buf_2_data_4).
Adding EN signal on $procdff$23913 ($dff) from module InstructionMemoryCache (D = $procmux$22959_Y, Q = \buf_2_data_5).
Adding EN signal on $procdff$23914 ($dff) from module InstructionMemoryCache (D = $procmux$22949_Y, Q = \buf_2_data_6).
Adding EN signal on $procdff$23915 ($dff) from module InstructionMemoryCache (D = $procmux$22939_Y, Q = \buf_2_data_7).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$25055 ($dffe) from module InstructionMemoryCache.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$25055 ($dffe) from module InstructionMemoryCache.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$25055 ($dffe) from module InstructionMemoryCache.

4.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \ValueSelector2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \InstructionMemoryCache..
Removed 731 unused cells and 17953 unused wires.
<suppressed ~775 debug messages>

4.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
<suppressed ~1 debug messages>
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
<suppressed ~256 debug messages>
Optimizing module InstructionMemoryCache_1.
<suppressed ~256 debug messages>
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
<suppressed ~31 debug messages>
Optimizing module RegisterFile_1.
<suppressed ~31 debug messages>
Optimizing module ReorderBuffer.
<suppressed ~32 debug messages>
Optimizing module ReorderBuffer_1.
<suppressed ~32 debug messages>
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

4.9. Rerunning OPT passes. (Maybe there is more to do..)

4.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Arbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \B4Processor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \BranchOutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \CheckBranch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \DataMemoryBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Executor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ExternalMemoryInterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Fetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FetchBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LoadStoreQueue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OpcodeFormatChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RRArbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReservationStation..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3327 debug messages>

4.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Arbiter.
  Optimizing cells in module \B4Processor.
  Optimizing cells in module \BranchOutputCollector.
  Optimizing cells in module \CheckBranch.
  Optimizing cells in module \DataMemoryBuffer.
  Optimizing cells in module \Decoder.
  Optimizing cells in module \Decoder_1.
  Optimizing cells in module \Decoder_2.
  Optimizing cells in module \Decoder_3.
  Optimizing cells in module \Executor.
  Optimizing cells in module \ExternalMemoryInterface.
  Optimizing cells in module \FIFO.
  Optimizing cells in module \FIFO_1.
  Optimizing cells in module \FIFO_3.
  Optimizing cells in module \FIFO_4.
  Optimizing cells in module \FIFO_5.
  Optimizing cells in module \FIFO_6.
  Optimizing cells in module \Fetch.
  Optimizing cells in module \FetchBuffer.
  Optimizing cells in module \Fetch_1.
  Optimizing cells in module \InstructionChecker.
  Optimizing cells in module \InstructionMemoryCache.
  Optimizing cells in module \InstructionMemoryCache_1.
  Optimizing cells in module \LoadStoreQueue.
  Optimizing cells in module \OpcodeFormatChecker.
  Optimizing cells in module \OutputCollector.
  Optimizing cells in module \RRArbiter.
  Optimizing cells in module \RRArbiter_1.
  Optimizing cells in module \RRArbiter_2.
  Optimizing cells in module \RegisterFile.
  Optimizing cells in module \RegisterFile_1.
  Optimizing cells in module \ReorderBuffer.
  Optimizing cells in module \ReorderBuffer_1.
  Optimizing cells in module \ReservationStation.
  Optimizing cells in module \SourceTagSelector.
  Optimizing cells in module \SourceTagSelector_2.
  Optimizing cells in module \ValueSelector1.
  Optimizing cells in module \ValueSelector2.
Performed a total of 0 changes.

4.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Executor'.
Finding identical cells in module `\ExternalMemoryInterface'.
<suppressed ~3 debug messages>
Finding identical cells in module `\FIFO'.
<suppressed ~6 debug messages>
Finding identical cells in module `\FIFO_1'.
<suppressed ~6 debug messages>
Finding identical cells in module `\FIFO_3'.
<suppressed ~3 debug messages>
Finding identical cells in module `\FIFO_4'.
<suppressed ~6 debug messages>
Finding identical cells in module `\FIFO_5'.
<suppressed ~6 debug messages>
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\FetchBuffer'.
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\InstructionChecker'.
Finding identical cells in module `\InstructionMemoryCache'.
<suppressed ~135 debug messages>
Finding identical cells in module `\InstructionMemoryCache_1'.
<suppressed ~135 debug messages>
Finding identical cells in module `\LoadStoreQueue'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\ReorderBuffer'.
Finding identical cells in module `\ReorderBuffer_1'.
Finding identical cells in module `\ReservationStation'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 100 cells.

4.13. Executing OPT_DFF pass (perform DFF optimizations).

4.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..
Removed 0 unused cells and 454 unused wires.
<suppressed ~8 debug messages>

4.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

4.16. Rerunning OPT passes. (Maybe there is more to do..)

4.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Arbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \B4Processor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \BranchOutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \CheckBranch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \DataMemoryBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Executor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ExternalMemoryInterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Fetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FetchBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LoadStoreQueue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OpcodeFormatChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RRArbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReservationStation..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3327 debug messages>

4.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Arbiter.
  Optimizing cells in module \B4Processor.
  Optimizing cells in module \BranchOutputCollector.
  Optimizing cells in module \CheckBranch.
  Optimizing cells in module \DataMemoryBuffer.
  Optimizing cells in module \Decoder.
  Optimizing cells in module \Decoder_1.
  Optimizing cells in module \Decoder_2.
  Optimizing cells in module \Decoder_3.
  Optimizing cells in module \Executor.
  Optimizing cells in module \ExternalMemoryInterface.
  Optimizing cells in module \FIFO.
  Optimizing cells in module \FIFO_1.
  Optimizing cells in module \FIFO_3.
  Optimizing cells in module \FIFO_4.
  Optimizing cells in module \FIFO_5.
  Optimizing cells in module \FIFO_6.
  Optimizing cells in module \Fetch.
  Optimizing cells in module \FetchBuffer.
  Optimizing cells in module \Fetch_1.
  Optimizing cells in module \InstructionChecker.
  Optimizing cells in module \InstructionMemoryCache.
  Optimizing cells in module \InstructionMemoryCache_1.
  Optimizing cells in module \LoadStoreQueue.
  Optimizing cells in module \OpcodeFormatChecker.
  Optimizing cells in module \OutputCollector.
  Optimizing cells in module \RRArbiter.
  Optimizing cells in module \RRArbiter_1.
  Optimizing cells in module \RRArbiter_2.
  Optimizing cells in module \RegisterFile.
  Optimizing cells in module \RegisterFile_1.
  Optimizing cells in module \ReorderBuffer.
  Optimizing cells in module \ReorderBuffer_1.
  Optimizing cells in module \ReservationStation.
  Optimizing cells in module \SourceTagSelector.
  Optimizing cells in module \SourceTagSelector_2.
  Optimizing cells in module \ValueSelector1.
  Optimizing cells in module \ValueSelector2.
Performed a total of 0 changes.

4.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Executor'.
Finding identical cells in module `\ExternalMemoryInterface'.
Finding identical cells in module `\FIFO'.
Finding identical cells in module `\FIFO_1'.
Finding identical cells in module `\FIFO_3'.
Finding identical cells in module `\FIFO_4'.
Finding identical cells in module `\FIFO_5'.
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\FetchBuffer'.
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\InstructionChecker'.
Finding identical cells in module `\InstructionMemoryCache'.
Finding identical cells in module `\InstructionMemoryCache_1'.
Finding identical cells in module `\LoadStoreQueue'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\ReorderBuffer'.
Finding identical cells in module `\ReorderBuffer_1'.
Finding identical cells in module `\ReservationStation'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 0 cells.

4.20. Executing OPT_DFF pass (perform DFF optimizations).

4.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..

4.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

4.23. Finished OPT passes. (There is nothing left to do.)

5. Executing SYNTH_XILINX pass.

5.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/xilinx/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/xilinx/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\VCC'.
Generating RTLIL representation for module `\GND'.
Generating RTLIL representation for module `\IBUF'.
Generating RTLIL representation for module `\IBUFG'.
Generating RTLIL representation for module `\OBUF'.
Generating RTLIL representation for module `\IOBUF'.
Generating RTLIL representation for module `\OBUFT'.
Generating RTLIL representation for module `\BUFG'.
Generating RTLIL representation for module `\BUFGCTRL'.
Generating RTLIL representation for module `\BUFHCE'.
Generating RTLIL representation for module `\INV'.
Generating RTLIL representation for module `\LUT1'.
Generating RTLIL representation for module `\LUT2'.
Generating RTLIL representation for module `\LUT3'.
Generating RTLIL representation for module `\LUT4'.
Generating RTLIL representation for module `\LUT5'.
Generating RTLIL representation for module `\LUT6'.
Generating RTLIL representation for module `\LUT6_2'.
Generating RTLIL representation for module `\$__ABC9_LUT7'.
Generating RTLIL representation for module `\$__ABC9_LUT8'.
Generating RTLIL representation for module `\MUXCY'.
Generating RTLIL representation for module `\MUXF5'.
Generating RTLIL representation for module `\MUXF6'.
Generating RTLIL representation for module `\MUXF7'.
Generating RTLIL representation for module `\MUXF8'.
Generating RTLIL representation for module `\MUXF9'.
Generating RTLIL representation for module `\XORCY'.
Generating RTLIL representation for module `\CARRY4'.
Generating RTLIL representation for module `\CARRY8'.
Generating RTLIL representation for module `\ORCY'.
Generating RTLIL representation for module `\MULT_AND'.
Generating RTLIL representation for module `\FDRE'.
Generating RTLIL representation for module `\FDRE_1'.
Generating RTLIL representation for module `\FDSE'.
Generating RTLIL representation for module `\FDSE_1'.
Generating RTLIL representation for module `\FDRSE'.
Generating RTLIL representation for module `\FDRSE_1'.
Generating RTLIL representation for module `\FDCE'.
Generating RTLIL representation for module `\FDCE_1'.
Generating RTLIL representation for module `\FDPE'.
Generating RTLIL representation for module `\FDPE_1'.
Generating RTLIL representation for module `\FDCPE'.
Generating RTLIL representation for module `\FDCPE_1'.
Generating RTLIL representation for module `\LDCE'.
Generating RTLIL representation for module `\LDPE'.
Generating RTLIL representation for module `\LDCPE'.
Generating RTLIL representation for module `\AND2B1L'.
Generating RTLIL representation for module `\OR2L'.
Generating RTLIL representation for module `\RAM16X1S'.
Generating RTLIL representation for module `\RAM16X1S_1'.
Generating RTLIL representation for module `\RAM32X1S'.
Generating RTLIL representation for module `\RAM32X1S_1'.
Generating RTLIL representation for module `\RAM64X1S'.
Generating RTLIL representation for module `\RAM64X1S_1'.
Generating RTLIL representation for module `\RAM128X1S'.
Generating RTLIL representation for module `\RAM128X1S_1'.
Generating RTLIL representation for module `\RAM256X1S'.
Generating RTLIL representation for module `\RAM512X1S'.
Generating RTLIL representation for module `\RAM16X2S'.
Generating RTLIL representation for module `\RAM32X2S'.
Generating RTLIL representation for module `\RAM64X2S'.
Generating RTLIL representation for module `\RAM16X4S'.
Generating RTLIL representation for module `\RAM32X4S'.
Generating RTLIL representation for module `\RAM16X8S'.
Generating RTLIL representation for module `\RAM32X8S'.
Generating RTLIL representation for module `\RAM16X1D'.
Generating RTLIL representation for module `\RAM16X1D_1'.
Generating RTLIL representation for module `\RAM32X1D'.
Generating RTLIL representation for module `\RAM32X1D_1'.
Generating RTLIL representation for module `\RAM64X1D'.
Generating RTLIL representation for module `\RAM64X1D_1'.
Generating RTLIL representation for module `\RAM128X1D'.
Generating RTLIL representation for module `\RAM256X1D'.
Generating RTLIL representation for module `\RAM32M'.
Generating RTLIL representation for module `\RAM32M16'.
Generating RTLIL representation for module `\RAM64M'.
Generating RTLIL representation for module `\RAM64M8'.
Generating RTLIL representation for module `\RAM32X16DR8'.
Generating RTLIL representation for module `\RAM64X8SW'.
Generating RTLIL representation for module `\ROM16X1'.
Generating RTLIL representation for module `\ROM32X1'.
Generating RTLIL representation for module `\ROM64X1'.
Generating RTLIL representation for module `\ROM128X1'.
Generating RTLIL representation for module `\ROM256X1'.
Generating RTLIL representation for module `\SRL16'.
Generating RTLIL representation for module `\SRL16E'.
Generating RTLIL representation for module `\SRLC16'.
Generating RTLIL representation for module `\SRLC16E'.
Generating RTLIL representation for module `\SRLC32E'.
Generating RTLIL representation for module `\CFGLUT5'.
Generating RTLIL representation for module `\MULT18X18'.
Generating RTLIL representation for module `\MULT18X18S'.
Generating RTLIL representation for module `\MULT18X18SIO'.
Generating RTLIL representation for module `\DSP48A'.
Generating RTLIL representation for module `\DSP48A1'.
Generating RTLIL representation for module `\DSP48'.
Generating RTLIL representation for module `\DSP48E1'.
Generating RTLIL representation for module `\RAMB18E1'.
Generating RTLIL representation for module `\RAMB36E1'.
Successfully finished Verilog frontend.

5.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/xilinx/cells_xtra.v
Parsing Verilog input from `/usr/bin/../share/yosys/xilinx/cells_xtra.v' to AST representation.
Generating RTLIL representation for module `\RAMB4_S1'.
Generating RTLIL representation for module `\RAMB4_S2'.
Generating RTLIL representation for module `\RAMB4_S4'.
Generating RTLIL representation for module `\RAMB4_S8'.
Generating RTLIL representation for module `\RAMB4_S16'.
Generating RTLIL representation for module `\RAMB4_S1_S1'.
Generating RTLIL representation for module `\RAMB4_S1_S2'.
Generating RTLIL representation for module `\RAMB4_S1_S4'.
Generating RTLIL representation for module `\RAMB4_S1_S8'.
Generating RTLIL representation for module `\RAMB4_S1_S16'.
Generating RTLIL representation for module `\RAMB4_S2_S2'.
Generating RTLIL representation for module `\RAMB4_S2_S4'.
Generating RTLIL representation for module `\RAMB4_S2_S8'.
Generating RTLIL representation for module `\RAMB4_S2_S16'.
Generating RTLIL representation for module `\RAMB4_S4_S4'.
Generating RTLIL representation for module `\RAMB4_S4_S8'.
Generating RTLIL representation for module `\RAMB4_S4_S16'.
Generating RTLIL representation for module `\RAMB4_S8_S8'.
Generating RTLIL representation for module `\RAMB4_S8_S16'.
Generating RTLIL representation for module `\RAMB4_S16_S16'.
Generating RTLIL representation for module `\RAMB16_S1'.
Generating RTLIL representation for module `\RAMB16_S2'.
Generating RTLIL representation for module `\RAMB16_S4'.
Generating RTLIL representation for module `\RAMB16_S9'.
Generating RTLIL representation for module `\RAMB16_S18'.
Generating RTLIL representation for module `\RAMB16_S36'.
Generating RTLIL representation for module `\RAMB16_S1_S1'.
Generating RTLIL representation for module `\RAMB16_S1_S2'.
Generating RTLIL representation for module `\RAMB16_S1_S4'.
Generating RTLIL representation for module `\RAMB16_S1_S9'.
Generating RTLIL representation for module `\RAMB16_S1_S18'.
Generating RTLIL representation for module `\RAMB16_S1_S36'.
Generating RTLIL representation for module `\RAMB16_S2_S2'.
Generating RTLIL representation for module `\RAMB16_S2_S4'.
Generating RTLIL representation for module `\RAMB16_S2_S9'.
Generating RTLIL representation for module `\RAMB16_S2_S18'.
Generating RTLIL representation for module `\RAMB16_S2_S36'.
Generating RTLIL representation for module `\RAMB16_S4_S4'.
Generating RTLIL representation for module `\RAMB16_S4_S9'.
Generating RTLIL representation for module `\RAMB16_S4_S18'.
Generating RTLIL representation for module `\RAMB16_S4_S36'.
Generating RTLIL representation for module `\RAMB16_S9_S9'.
Generating RTLIL representation for module `\RAMB16_S9_S18'.
Generating RTLIL representation for module `\RAMB16_S9_S36'.
Generating RTLIL representation for module `\RAMB16_S18_S18'.
Generating RTLIL representation for module `\RAMB16_S18_S36'.
Generating RTLIL representation for module `\RAMB16_S36_S36'.
Generating RTLIL representation for module `\RAMB16BWE_S18'.
Generating RTLIL representation for module `\RAMB16BWE_S36'.
Generating RTLIL representation for module `\RAMB16BWE_S18_S9'.
Generating RTLIL representation for module `\RAMB16BWE_S18_S18'.
Generating RTLIL representation for module `\RAMB16BWE_S36_S9'.
Generating RTLIL representation for module `\RAMB16BWE_S36_S18'.
Generating RTLIL representation for module `\RAMB16BWE_S36_S36'.
Generating RTLIL representation for module `\RAMB16BWER'.
Generating RTLIL representation for module `\RAMB8BWER'.
Generating RTLIL representation for module `\FIFO16'.
Generating RTLIL representation for module `\RAMB16'.
Generating RTLIL representation for module `\RAMB32_S64_ECC'.
Generating RTLIL representation for module `\FIFO18'.
Generating RTLIL representation for module `\FIFO18_36'.
Generating RTLIL representation for module `\FIFO36'.
Generating RTLIL representation for module `\FIFO36_72'.
Generating RTLIL representation for module `\RAMB18'.
Generating RTLIL representation for module `\RAMB36'.
Generating RTLIL representation for module `\RAMB18SDP'.
Generating RTLIL representation for module `\RAMB36SDP'.
Generating RTLIL representation for module `\FIFO18E1'.
Generating RTLIL representation for module `\FIFO36E1'.
Generating RTLIL representation for module `\FIFO18E2'.
Generating RTLIL representation for module `\FIFO36E2'.
Generating RTLIL representation for module `\RAMB18E2'.
Generating RTLIL representation for module `\RAMB36E2'.
Generating RTLIL representation for module `\URAM288'.
Generating RTLIL representation for module `\URAM288_BASE'.
Generating RTLIL representation for module `\DSP48E'.
Generating RTLIL representation for module `\DSP48E2'.
Generating RTLIL representation for module `\FDDRCPE'.
Generating RTLIL representation for module `\FDDRRSE'.
Generating RTLIL representation for module `\IFDDRCPE'.
Generating RTLIL representation for module `\IFDDRRSE'.
Generating RTLIL representation for module `\OFDDRCPE'.
Generating RTLIL representation for module `\OFDDRRSE'.
Generating RTLIL representation for module `\OFDDRTCPE'.
Generating RTLIL representation for module `\OFDDRTRSE'.
Generating RTLIL representation for module `\IDDR2'.
Generating RTLIL representation for module `\ODDR2'.
Generating RTLIL representation for module `\IDDR'.
Generating RTLIL representation for module `\IDDR_2CLK'.
Generating RTLIL representation for module `\ODDR'.
Generating RTLIL representation for module `\IDELAYCTRL'.
Generating RTLIL representation for module `\IDELAY'.
Generating RTLIL representation for module `\ISERDES'.
Generating RTLIL representation for module `\OSERDES'.
Generating RTLIL representation for module `\IODELAY'.
Generating RTLIL representation for module `\ISERDES_NODELAY'.
Generating RTLIL representation for module `\IODELAYE1'.
Generating RTLIL representation for module `\ISERDESE1'.
Generating RTLIL representation for module `\OSERDESE1'.
Generating RTLIL representation for module `\IDELAYE2'.
Generating RTLIL representation for module `\ODELAYE2'.
Generating RTLIL representation for module `\ISERDESE2'.
Generating RTLIL representation for module `\OSERDESE2'.
Generating RTLIL representation for module `\PHASER_IN'.
Generating RTLIL representation for module `\PHASER_IN_PHY'.
Generating RTLIL representation for module `\PHASER_OUT'.
Generating RTLIL representation for module `\PHASER_OUT_PHY'.
Generating RTLIL representation for module `\PHASER_REF'.
Generating RTLIL representation for module `\PHY_CONTROL'.
Generating RTLIL representation for module `\IDDRE1'.
Generating RTLIL representation for module `\ODDRE1'.
Generating RTLIL representation for module `\IDELAYE3'.
Generating RTLIL representation for module `\ODELAYE3'.
Generating RTLIL representation for module `\ISERDESE3'.
Generating RTLIL representation for module `\OSERDESE3'.
Generating RTLIL representation for module `\BITSLICE_CONTROL'.
Generating RTLIL representation for module `\RIU_OR'.
Generating RTLIL representation for module `\RX_BITSLICE'.
Generating RTLIL representation for module `\RXTX_BITSLICE'.
Generating RTLIL representation for module `\TX_BITSLICE'.
Generating RTLIL representation for module `\TX_BITSLICE_TRI'.
Generating RTLIL representation for module `\IODELAY2'.
Generating RTLIL representation for module `\IODRP2'.
Generating RTLIL representation for module `\IODRP2_MCB'.
Generating RTLIL representation for module `\ISERDES2'.
Generating RTLIL representation for module `\OSERDES2'.
Generating RTLIL representation for module `\IBUF_DLY_ADJ'.
Generating RTLIL representation for module `\IBUF_IBUFDISABLE'.
Generating RTLIL representation for module `\IBUF_INTERMDISABLE'.
Generating RTLIL representation for module `\IBUF_ANALOG'.
Generating RTLIL representation for module `\IBUFE3'.
Generating RTLIL representation for module `\IBUFDS'.
Generating RTLIL representation for module `\IBUFDS_DLY_ADJ'.
Generating RTLIL representation for module `\IBUFDS_IBUFDISABLE'.
Generating RTLIL representation for module `\IBUFDS_INTERMDISABLE'.
Generating RTLIL representation for module `\IBUFDS_DIFF_OUT'.
Generating RTLIL representation for module `\IBUFDS_DIFF_OUT_IBUFDISABLE'.
Generating RTLIL representation for module `\IBUFDS_DIFF_OUT_INTERMDISABLE'.
Generating RTLIL representation for module `\IBUFDSE3'.
Generating RTLIL representation for module `\IBUFDS_DPHY'.
Generating RTLIL representation for module `\IBUFGDS'.
Generating RTLIL representation for module `\IBUFGDS_DIFF_OUT'.
Generating RTLIL representation for module `\IOBUF_DCIEN'.
Generating RTLIL representation for module `\IOBUF_INTERMDISABLE'.
Generating RTLIL representation for module `\IOBUFE3'.
Generating RTLIL representation for module `\IOBUFDS'.
Generating RTLIL representation for module `\IOBUFDS_DCIEN'.
Generating RTLIL representation for module `\IOBUFDS_INTERMDISABLE'.
Generating RTLIL representation for module `\IOBUFDS_DIFF_OUT'.
Generating RTLIL representation for module `\IOBUFDS_DIFF_OUT_DCIEN'.
Generating RTLIL representation for module `\IOBUFDS_DIFF_OUT_INTERMDISABLE'.
Generating RTLIL representation for module `\IOBUFDSE3'.
Generating RTLIL representation for module `\OBUFDS'.
Generating RTLIL representation for module `\OBUFDS_DPHY'.
Generating RTLIL representation for module `\OBUFTDS'.
Generating RTLIL representation for module `\KEEPER'.
Generating RTLIL representation for module `\PULLDOWN'.
Generating RTLIL representation for module `\PULLUP'.
Generating RTLIL representation for module `\DCIRESET'.
Generating RTLIL representation for module `\HPIO_VREF'.
Generating RTLIL representation for module `\BUFGCE'.
Generating RTLIL representation for module `\BUFGCE_1'.
Generating RTLIL representation for module `\BUFGMUX'.
Generating RTLIL representation for module `\BUFGMUX_1'.
Generating RTLIL representation for module `\BUFGMUX_CTRL'.
Generating RTLIL representation for module `\BUFGMUX_VIRTEX4'.
Generating RTLIL representation for module `\BUFG_GT'.
Generating RTLIL representation for module `\BUFG_GT_SYNC'.
Generating RTLIL representation for module `\BUFG_PS'.
Generating RTLIL representation for module `\BUFGCE_DIV'.
Generating RTLIL representation for module `\BUFH'.
Generating RTLIL representation for module `\BUFIO2'.
Generating RTLIL representation for module `\BUFIO2_2CLK'.
Generating RTLIL representation for module `\BUFIO2FB'.
Generating RTLIL representation for module `\BUFPLL'.
Generating RTLIL representation for module `\BUFPLL_MCB'.
Generating RTLIL representation for module `\BUFIO'.
Generating RTLIL representation for module `\BUFIODQS'.
Generating RTLIL representation for module `\BUFR'.
Generating RTLIL representation for module `\BUFMR'.
Generating RTLIL representation for module `\BUFMRCE'.
Generating RTLIL representation for module `\DCM'.
Generating RTLIL representation for module `\DCM_SP'.
Generating RTLIL representation for module `\DCM_CLKGEN'.
Generating RTLIL representation for module `\DCM_ADV'.
Generating RTLIL representation for module `\DCM_BASE'.
Generating RTLIL representation for module `\DCM_PS'.
Generating RTLIL representation for module `\PMCD'.
Generating RTLIL representation for module `\PLL_ADV'.
Generating RTLIL representation for module `\PLL_BASE'.
Generating RTLIL representation for module `\MMCM_ADV'.
Generating RTLIL representation for module `\MMCM_BASE'.
Generating RTLIL representation for module `\MMCME2_ADV'.
Generating RTLIL representation for module `\MMCME2_BASE'.
Generating RTLIL representation for module `\PLLE2_ADV'.
Generating RTLIL representation for module `\PLLE2_BASE'.
Generating RTLIL representation for module `\MMCME3_ADV'.
Generating RTLIL representation for module `\MMCME3_BASE'.
Generating RTLIL representation for module `\PLLE3_ADV'.
Generating RTLIL representation for module `\PLLE3_BASE'.
Generating RTLIL representation for module `\MMCME4_ADV'.
Generating RTLIL representation for module `\MMCME4_BASE'.
Generating RTLIL representation for module `\PLLE4_ADV'.
Generating RTLIL representation for module `\PLLE4_BASE'.
Generating RTLIL representation for module `\BUFT'.
Generating RTLIL representation for module `\IN_FIFO'.
Generating RTLIL representation for module `\OUT_FIFO'.
Generating RTLIL representation for module `\HARD_SYNC'.
Generating RTLIL representation for module `\STARTUP_SPARTAN3'.
Generating RTLIL representation for module `\STARTUP_SPARTAN3E'.
Generating RTLIL representation for module `\STARTUP_SPARTAN3A'.
Generating RTLIL representation for module `\STARTUP_SPARTAN6'.
Generating RTLIL representation for module `\STARTUP_VIRTEX4'.
Generating RTLIL representation for module `\STARTUP_VIRTEX5'.
Generating RTLIL representation for module `\STARTUP_VIRTEX6'.
Generating RTLIL representation for module `\STARTUPE2'.
Generating RTLIL representation for module `\STARTUPE3'.
Generating RTLIL representation for module `\CAPTURE_SPARTAN3'.
Generating RTLIL representation for module `\CAPTURE_SPARTAN3A'.
Generating RTLIL representation for module `\CAPTURE_VIRTEX4'.
Generating RTLIL representation for module `\CAPTURE_VIRTEX5'.
Generating RTLIL representation for module `\CAPTURE_VIRTEX6'.
Generating RTLIL representation for module `\CAPTUREE2'.
Generating RTLIL representation for module `\ICAP_SPARTAN3A'.
Generating RTLIL representation for module `\ICAP_SPARTAN6'.
Generating RTLIL representation for module `\ICAP_VIRTEX4'.
Generating RTLIL representation for module `\ICAP_VIRTEX5'.
Generating RTLIL representation for module `\ICAP_VIRTEX6'.
Generating RTLIL representation for module `\ICAPE2'.
Generating RTLIL representation for module `\ICAPE3'.
Generating RTLIL representation for module `\BSCAN_SPARTAN3'.
Generating RTLIL representation for module `\BSCAN_SPARTAN3A'.
Generating RTLIL representation for module `\BSCAN_SPARTAN6'.
Generating RTLIL representation for module `\BSCAN_VIRTEX4'.
Generating RTLIL representation for module `\BSCAN_VIRTEX5'.
Generating RTLIL representation for module `\BSCAN_VIRTEX6'.
Generating RTLIL representation for module `\BSCANE2'.
Generating RTLIL representation for module `\DNA_PORT'.
Generating RTLIL representation for module `\DNA_PORTE2'.
Generating RTLIL representation for module `\FRAME_ECC_VIRTEX4'.
Generating RTLIL representation for module `\FRAME_ECC_VIRTEX5'.
Generating RTLIL representation for module `\FRAME_ECC_VIRTEX6'.
Generating RTLIL representation for module `\FRAME_ECCE2'.
Generating RTLIL representation for module `\FRAME_ECCE3'.
Generating RTLIL representation for module `\FRAME_ECCE4'.
Generating RTLIL representation for module `\USR_ACCESS_VIRTEX4'.
Generating RTLIL representation for module `\USR_ACCESS_VIRTEX5'.
Generating RTLIL representation for module `\USR_ACCESS_VIRTEX6'.
Generating RTLIL representation for module `\USR_ACCESSE2'.
Generating RTLIL representation for module `\POST_CRC_INTERNAL'.
Generating RTLIL representation for module `\SUSPEND_SYNC'.
Generating RTLIL representation for module `\KEY_CLEAR'.
Generating RTLIL representation for module `\MASTER_JTAG'.
Generating RTLIL representation for module `\SPI_ACCESS'.
Generating RTLIL representation for module `\EFUSE_USR'.
Generating RTLIL representation for module `\SYSMON'.
Generating RTLIL representation for module `\XADC'.
Generating RTLIL representation for module `\SYSMONE1'.
Generating RTLIL representation for module `\SYSMONE4'.
Generating RTLIL representation for module `\GTPA1_DUAL'.
Generating RTLIL representation for module `\GT11_CUSTOM'.
Generating RTLIL representation for module `\GT11_DUAL'.
Generating RTLIL representation for module `\GT11CLK'.
Generating RTLIL representation for module `\GT11CLK_MGT'.
Generating RTLIL representation for module `\GTP_DUAL'.
Generating RTLIL representation for module `\GTX_DUAL'.
Generating RTLIL representation for module `\CRC32'.
Generating RTLIL representation for module `\CRC64'.
Generating RTLIL representation for module `\GTHE1_QUAD'.
Generating RTLIL representation for module `\GTXE1'.
Generating RTLIL representation for module `\IBUFDS_GTXE1'.
Generating RTLIL representation for module `\IBUFDS_GTHE1'.
Generating RTLIL representation for module `\GTHE2_CHANNEL'.
Generating RTLIL representation for module `\GTHE2_COMMON'.
Generating RTLIL representation for module `\GTPE2_CHANNEL'.
Generating RTLIL representation for module `\GTPE2_COMMON'.
Generating RTLIL representation for module `\GTXE2_CHANNEL'.
Generating RTLIL representation for module `\GTXE2_COMMON'.
Generating RTLIL representation for module `\IBUFDS_GTE2'.
Generating RTLIL representation for module `\GTHE3_CHANNEL'.
Generating RTLIL representation for module `\GTHE3_COMMON'.
Generating RTLIL representation for module `\GTYE3_CHANNEL'.
Generating RTLIL representation for module `\GTYE3_COMMON'.
Generating RTLIL representation for module `\IBUFDS_GTE3'.
Generating RTLIL representation for module `\OBUFDS_GTE3'.
Generating RTLIL representation for module `\OBUFDS_GTE3_ADV'.
Generating RTLIL representation for module `\GTHE4_CHANNEL'.
Generating RTLIL representation for module `\GTHE4_COMMON'.
Generating RTLIL representation for module `\GTYE4_CHANNEL'.
Generating RTLIL representation for module `\GTYE4_COMMON'.
Generating RTLIL representation for module `\IBUFDS_GTE4'.
Generating RTLIL representation for module `\OBUFDS_GTE4'.
Generating RTLIL representation for module `\OBUFDS_GTE4_ADV'.
Generating RTLIL representation for module `\GTM_DUAL'.
Generating RTLIL representation for module `\IBUFDS_GTM'.
Generating RTLIL representation for module `\OBUFDS_GTM'.
Generating RTLIL representation for module `\OBUFDS_GTM_ADV'.
Generating RTLIL representation for module `\HSDAC'.
Generating RTLIL representation for module `\HSADC'.
Generating RTLIL representation for module `\RFDAC'.
Generating RTLIL representation for module `\RFADC'.
Generating RTLIL representation for module `\PCIE_A1'.
Generating RTLIL representation for module `\PCIE_EP'.
Generating RTLIL representation for module `\PCIE_2_0'.
Generating RTLIL representation for module `\PCIE_2_1'.
Generating RTLIL representation for module `\PCIE_3_0'.
Generating RTLIL representation for module `\PCIE_3_1'.
Generating RTLIL representation for module `\PCIE40E4'.
Generating RTLIL representation for module `\PCIE4CE4'.
Generating RTLIL representation for module `\EMAC'.
Generating RTLIL representation for module `\TEMAC'.
Generating RTLIL representation for module `\TEMAC_SINGLE'.
Generating RTLIL representation for module `\CMAC'.
Generating RTLIL representation for module `\CMACE4'.
Generating RTLIL representation for module `\MCB'.
Generating RTLIL representation for module `\HBM_REF_CLK'.
Generating RTLIL representation for module `\HBM_SNGLBLI_INTF_APB'.
Generating RTLIL representation for module `\HBM_SNGLBLI_INTF_AXI'.
Generating RTLIL representation for module `\HBM_ONE_STACK_INTF'.
Generating RTLIL representation for module `\HBM_TWO_STACK_INTF'.
Generating RTLIL representation for module `\PPC405_ADV'.
Generating RTLIL representation for module `\PPC440'.
Generating RTLIL representation for module `\PS7'.
Generating RTLIL representation for module `\PS8'.
Generating RTLIL representation for module `\ILKN'.
Generating RTLIL representation for module `\ILKNE4'.
Generating RTLIL representation for module `\VCU'.
Generating RTLIL representation for module `\FE'.
Successfully finished Verilog frontend.

5.3. Executing HIERARCHY pass (managing design hierarchy).

5.3.1. Analyzing design hierarchy..
Top module:  \B4Processor
Used module:     \BranchOutputCollector
Used module:         \FIFO_3
Used module:     \DataMemoryBuffer
Used module:         \FIFO
Used module:         \RRArbiter
Used module:     \Decoder
Used module:         \OpcodeFormatChecker
Used module:         \SourceTagSelector
Used module:         \ValueSelector1
Used module:         \ValueSelector2
Used module:     \Decoder_1
Used module:         \SourceTagSelector_2
Used module:     \Decoder_2
Used module:     \Decoder_3
Used module:     \Executor
Used module:         \InstructionChecker
Used module:     \ExternalMemoryInterface
Used module:         \FIFO_5
Used module:         \Arbiter
Used module:         \RRArbiter_2
Used module:         \FIFO_4
Used module:         \FIFO_6
Used module:     \FetchBuffer
Used module:     \Fetch
Used module:         \CheckBranch
Used module:     \Fetch_1
Used module:     \InstructionMemoryCache
Used module:     \InstructionMemoryCache_1
Used module:     \LoadStoreQueue
Used module:     \OutputCollector
Used module:         \FIFO_1
Used module:         \RRArbiter_1
Used module:     \RegisterFile
Used module:     \RegisterFile_1
Used module:     \ReorderBuffer
Used module:     \ReorderBuffer_1
Used module:     \ReservationStation

5.3.2. Analyzing design hierarchy..
Top module:  \B4Processor
Used module:     \BranchOutputCollector
Used module:         \FIFO_3
Used module:     \DataMemoryBuffer
Used module:         \FIFO
Used module:         \RRArbiter
Used module:     \Decoder
Used module:         \OpcodeFormatChecker
Used module:         \SourceTagSelector
Used module:         \ValueSelector1
Used module:         \ValueSelector2
Used module:     \Decoder_1
Used module:         \SourceTagSelector_2
Used module:     \Decoder_2
Used module:     \Decoder_3
Used module:     \Executor
Used module:         \InstructionChecker
Used module:     \ExternalMemoryInterface
Used module:         \FIFO_5
Used module:         \Arbiter
Used module:         \RRArbiter_2
Used module:         \FIFO_4
Used module:         \FIFO_6
Used module:     \FetchBuffer
Used module:     \Fetch
Used module:         \CheckBranch
Used module:     \Fetch_1
Used module:     \InstructionMemoryCache
Used module:     \InstructionMemoryCache_1
Used module:     \LoadStoreQueue
Used module:     \OutputCollector
Used module:         \FIFO_1
Used module:         \RRArbiter_1
Used module:     \RegisterFile
Used module:     \RegisterFile_1
Used module:     \ReorderBuffer
Used module:     \ReorderBuffer_1
Used module:     \ReservationStation
Removed 0 unused modules.

5.4. Executing PROC pass (convert processes to netlists).

5.4.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

5.4.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348 in module RAM64M.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176 in module RAM32M.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1711$26106 in module RAM128X1D.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1606$26058 in module RAM64X1D.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1560$26031 in module RAM32X1D_1.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1501$25992 in module RAM32X1D.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:810$25855 in module FDPE_1.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:769$25852 in module FDPE.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:731$25837 in module FDCE_1.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:690$25834 in module FDCE.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:587$25819 in module FDSE_1.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:554$25815 in module FDSE.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:522$25797 in module FDRE_1.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:489$25793 in module FDRE.
Removed a total of 0 dead cases.

5.4.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 87 assignments to connections.

5.4.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SRLC32E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2400$26553'.
  Set init value: \r = 0
Found init rule in `\SRLC16E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2356$26546'.
  Set init value: \r = 16'0000000000000000
Found init rule in `\SRLC16.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2324$26539'.
  Set init value: \r = 16'0000000000000000
Found init rule in `\SRL16E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2287$26536'.
  Set init value: \r = 16'0000000000000000
Found init rule in `\SRL16.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2259$26529'.
  Set init value: \r = 16'0000000000000000
Found init rule in `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1975$26454'.
  Set init value: \mem_d = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1974$26453'.
  Set init value: \mem_c = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1973$26452'.
  Set init value: \mem_b = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1972$26451'.
  Set init value: \mem_a = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1801$26302'.
  Set init value: \mem_d = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1800$26301'.
  Set init value: \mem_c = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1799$26300'.
  Set init value: \mem_b = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1798$26299'.
  Set init value: \mem_a = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM128X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1707$26143'.
  Set init value: \mem = 128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM64X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1602$26095'.
  Set init value: \mem = 64'0000000000000000000000000000000000000000000000000000000000000000
Found init rule in `\RAM32X1D_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1556$26050'.
  Set init value: \mem = 0
Found init rule in `\RAM32X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1497$26023'.
  Set init value: \mem = 0
Found init rule in `\FDPE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25858'.
  Set init value: \Q = 1'1
Found init rule in `\FDPE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25854'.
  Set init value: \Q = 1'1
Found init rule in `\FDCE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25840'.
  Set init value: \Q = 1'0
Found init rule in `\FDCE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25836'.
  Set init value: \Q = 1'0
Found init rule in `\FDSE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25822'.
  Set init value: \Q = 1'1
Found init rule in `\FDSE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25818'.
  Set init value: \Q = 1'1
Found init rule in `\FDRE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25800'.
  Set init value: \Q = 1'0
Found init rule in `\FDRE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25796'.
  Set init value: \Q = 1'0

5.4.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \PRE in `\FDPE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:810$25855'.
Found async reset \PRE in `\FDPE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:769$25852'.
Found async reset \CLR in `\FDCE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:731$25837'.
Found async reset \CLR in `\FDCE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:690$25834'.

5.4.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~21 debug messages>

5.4.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SRLC32E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2400$26553'.
Creating decoders for process `\SRLC32E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2408$26552'.
     1/1: $0\r[31:0]
Creating decoders for process `\SRLC16E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2356$26546'.
Creating decoders for process `\SRLC16E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2364$26545'.
     1/1: $0\r[15:0]
Creating decoders for process `\SRLC16.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2324$26539'.
Creating decoders for process `\SRLC16.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2327$26538'.
Creating decoders for process `\SRL16E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2287$26536'.
Creating decoders for process `\SRL16E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2294$26535'.
     1/1: $0\r[15:0]
Creating decoders for process `\SRL16.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2259$26529'.
Creating decoders for process `\SRL16.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2261$26528'.
Creating decoders for process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1975$26454'.
Creating decoders for process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1974$26453'.
Creating decoders for process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1973$26452'.
Creating decoders for process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1972$26451'.
Creating decoders for process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
     1/16: $1$lookahead\mem_d$26347[63:0]$26365
     2/16: $1$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1986$26337[63:0]$26370
     3/16: $1$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1986$26336[63:0]$26371
     4/16: $1$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1986$26338[5:0]$26369
     5/16: $1$lookahead\mem_c$26346[63:0]$26366
     6/16: $1$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1985$26334[63:0]$26373
     7/16: $1$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1985$26333[63:0]$26374
     8/16: $1$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1985$26335[5:0]$26372
     9/16: $1$lookahead\mem_b$26345[63:0]$26367
    10/16: $1$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1984$26331[63:0]$26376
    11/16: $1$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1984$26330[63:0]$26377
    12/16: $1$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1984$26332[5:0]$26375
    13/16: $1$lookahead\mem_a$26344[63:0]$26368
    14/16: $1$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1983$26328[63:0]$26379
    15/16: $1$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1983$26327[63:0]$26380
    16/16: $1$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1983$26329[5:0]$26378
Creating decoders for process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1801$26302'.
Creating decoders for process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1800$26301'.
Creating decoders for process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1799$26300'.
Creating decoders for process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1798$26299'.
Creating decoders for process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
     1/16: $1$lookahead\mem_d$26175[63:0]$26193
     2/16: $1$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1812$26157[63:0]$26198
     3/16: $1$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1812$26156[63:0]$26199
     4/16: $1$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1812$26158[31:0]$26197
     5/16: $1$lookahead\mem_c$26174[63:0]$26194
     6/16: $1$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1811$26154[63:0]$26201
     7/16: $1$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1811$26153[63:0]$26202
     8/16: $1$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1811$26155[31:0]$26200
     9/16: $1$lookahead\mem_b$26173[63:0]$26195
    10/16: $1$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1810$26151[63:0]$26204
    11/16: $1$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1810$26150[63:0]$26205
    12/16: $1$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1810$26152[31:0]$26203
    13/16: $1$lookahead\mem_a$26172[63:0]$26196
    14/16: $1$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1809$26148[63:0]$26207
    15/16: $1$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1809$26147[63:0]$26208
    16/16: $1$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1809$26149[31:0]$26206
Creating decoders for process `\RAM128X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1707$26143'.
Creating decoders for process `\RAM128X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1711$26106'.
     1/4: $1$lookahead\mem$26105[127:0]$26111
     2/4: $1$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1711$26100[127:0]$26113
     3/4: $1$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1711$26099[127:0]$26114
     4/4: $1$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1711$26101[6:0]$26112
Creating decoders for process `\RAM64X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1602$26095'.
Creating decoders for process `\RAM64X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1606$26058'.
     1/4: $1$lookahead\mem$26057[63:0]$26063
     2/4: $1$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1606$26052[63:0]$26065
     3/4: $1$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1606$26051[63:0]$26066
     4/4: $1$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1606$26053[5:0]$26064
Creating decoders for process `\RAM32X1D_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1556$26050'.
Creating decoders for process `\RAM32X1D_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1560$26031'.
     1/4: $1$lookahead\mem$26030[31:0]$26039
     2/4: $1$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1560$26025[31:0]$26037
     3/4: $1$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1560$26024[31:0]$26038
     4/4: $1$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1560$26026[4:0]$26036
Creating decoders for process `\RAM32X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1497$26023'.
Creating decoders for process `\RAM32X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1501$25992'.
     1/4: $1$lookahead\mem$25991[31:0]$25999
     2/4: $1$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1501$25986[31:0]$26000
     3/4: $1$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1501$25985[31:0]$25998
     4/4: $1$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1501$25987[4:0]$25997
Creating decoders for process `\FDPE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25858'.
Creating decoders for process `\FDPE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:810$25855'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDPE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25854'.
Creating decoders for process `\FDPE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:769$25852'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDCE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25840'.
Creating decoders for process `\FDCE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:731$25837'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDCE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25836'.
Creating decoders for process `\FDCE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:690$25834'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDSE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25822'.
Creating decoders for process `\FDSE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:587$25819'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDSE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25818'.
Creating decoders for process `\FDSE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:554$25815'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDRE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25800'.
Creating decoders for process `\FDRE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:522$25797'.
     1/1: $0\Q[0:0]
Creating decoders for process `\FDRE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25796'.
Creating decoders for process `\FDRE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:489$25793'.
     1/1: $0\Q[0:0]

5.4.8. Executing PROC_DLATCH pass (convert process syncs to latches).

5.4.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SRLC32E.\r' using process `\SRLC32E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2408$26552'.
  created $dff cell `$procdff$26784' with positive edge clock.
Creating register for signal `\SRLC16E.\r' using process `\SRLC16E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2364$26545'.
  created $dff cell `$procdff$26785' with positive edge clock.
Creating register for signal `\SRLC16.\r' using process `\SRLC16.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2327$26538'.
  created $dff cell `$procdff$26786' with positive edge clock.
Creating register for signal `\SRL16E.\r' using process `\SRL16E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2294$26535'.
  created $dff cell `$procdff$26787' with positive edge clock.
Creating register for signal `\SRL16.\r' using process `\SRL16.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2261$26528'.
  created $dff cell `$procdff$26788' with positive edge clock.
Creating register for signal `\RAM64M.\mem_d' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26789' with positive edge clock.
Creating register for signal `\RAM64M.\mem_c' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26790' with positive edge clock.
Creating register for signal `\RAM64M.\mem_b' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26791' with positive edge clock.
Creating register for signal `\RAM64M.\mem_a' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26792' with positive edge clock.
Creating register for signal `\RAM64M.$lookahead\mem_d$26347' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26793' with positive edge clock.
Creating register for signal `\RAM64M.$lookahead\mem_c$26346' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26794' with positive edge clock.
Creating register for signal `\RAM64M.$lookahead\mem_b$26345' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26795' with positive edge clock.
Creating register for signal `\RAM64M.$lookahead\mem_a$26344' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26796' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1986$26338' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26797' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1986$26337' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26798' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1986$26336' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26799' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1985$26335' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26800' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1985$26334' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26801' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1985$26333' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26802' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1984$26332' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26803' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1984$26331' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26804' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1984$26330' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26805' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1983$26329' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26806' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1983$26328' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26807' with positive edge clock.
Creating register for signal `\RAM64M.$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1983$26327' using process `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
  created $dff cell `$procdff$26808' with positive edge clock.
Creating register for signal `\RAM32M.$lookahead\mem_d$26175' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26809' with positive edge clock.
Creating register for signal `\RAM32M.$lookahead\mem_c$26174' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26810' with positive edge clock.
Creating register for signal `\RAM32M.$lookahead\mem_b$26173' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26811' with positive edge clock.
Creating register for signal `\RAM32M.$lookahead\mem_a$26172' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26812' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1812$26158' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26813' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1812$26157' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26814' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1812$26156' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26815' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1811$26155' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26816' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1811$26154' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26817' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1811$26153' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26818' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1810$26152' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26819' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1810$26151' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26820' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1810$26150' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26821' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1809$26149' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26822' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1809$26148' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26823' with positive edge clock.
Creating register for signal `\RAM32M.$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1809$26147' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26824' with positive edge clock.
Creating register for signal `\RAM32M.\mem_d' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26825' with positive edge clock.
Creating register for signal `\RAM32M.\mem_c' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26826' with positive edge clock.
Creating register for signal `\RAM32M.\mem_b' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26827' with positive edge clock.
Creating register for signal `\RAM32M.\mem_a' using process `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
  created $dff cell `$procdff$26828' with positive edge clock.
Creating register for signal `\RAM128X1D.$lookahead\mem$26105' using process `\RAM128X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1711$26106'.
  created $dff cell `$procdff$26829' with positive edge clock.
Creating register for signal `\RAM128X1D.\mem' using process `\RAM128X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1711$26106'.
  created $dff cell `$procdff$26830' with positive edge clock.
Creating register for signal `\RAM128X1D.$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1711$26101' using process `\RAM128X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1711$26106'.
  created $dff cell `$procdff$26831' with positive edge clock.
Creating register for signal `\RAM128X1D.$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1711$26100' using process `\RAM128X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1711$26106'.
  created $dff cell `$procdff$26832' with positive edge clock.
Creating register for signal `\RAM128X1D.$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1711$26099' using process `\RAM128X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1711$26106'.
  created $dff cell `$procdff$26833' with positive edge clock.
Creating register for signal `\RAM64X1D.$lookahead\mem$26057' using process `\RAM64X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1606$26058'.
  created $dff cell `$procdff$26834' with positive edge clock.
Creating register for signal `\RAM64X1D.$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1606$26053' using process `\RAM64X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1606$26058'.
  created $dff cell `$procdff$26835' with positive edge clock.
Creating register for signal `\RAM64X1D.$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1606$26052' using process `\RAM64X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1606$26058'.
  created $dff cell `$procdff$26836' with positive edge clock.
Creating register for signal `\RAM64X1D.$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1606$26051' using process `\RAM64X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1606$26058'.
  created $dff cell `$procdff$26837' with positive edge clock.
Creating register for signal `\RAM64X1D.\mem' using process `\RAM64X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1606$26058'.
  created $dff cell `$procdff$26838' with positive edge clock.
Creating register for signal `\RAM32X1D_1.$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1560$26026' using process `\RAM32X1D_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1560$26031'.
  created $dff cell `$procdff$26839' with negative edge clock.
Creating register for signal `\RAM32X1D_1.$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1560$26025' using process `\RAM32X1D_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1560$26031'.
  created $dff cell `$procdff$26840' with negative edge clock.
Creating register for signal `\RAM32X1D_1.$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1560$26024' using process `\RAM32X1D_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1560$26031'.
  created $dff cell `$procdff$26841' with negative edge clock.
Creating register for signal `\RAM32X1D_1.\mem' using process `\RAM32X1D_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1560$26031'.
  created $dff cell `$procdff$26842' with negative edge clock.
Creating register for signal `\RAM32X1D_1.$lookahead\mem$26030' using process `\RAM32X1D_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1560$26031'.
  created $dff cell `$procdff$26843' with negative edge clock.
Creating register for signal `\RAM32X1D.$bitselwrite$sel$/usr/bin/../share/yosys/xilinx/cells_sim.v:1501$25987' using process `\RAM32X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1501$25992'.
  created $dff cell `$procdff$26844' with positive edge clock.
Creating register for signal `\RAM32X1D.$bitselwrite$mask$/usr/bin/../share/yosys/xilinx/cells_sim.v:1501$25985' using process `\RAM32X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1501$25992'.
  created $dff cell `$procdff$26845' with positive edge clock.
Creating register for signal `\RAM32X1D.$lookahead\mem$25991' using process `\RAM32X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1501$25992'.
  created $dff cell `$procdff$26846' with positive edge clock.
Creating register for signal `\RAM32X1D.$bitselwrite$data$/usr/bin/../share/yosys/xilinx/cells_sim.v:1501$25986' using process `\RAM32X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1501$25992'.
  created $dff cell `$procdff$26847' with positive edge clock.
Creating register for signal `\RAM32X1D.\mem' using process `\RAM32X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1501$25992'.
  created $dff cell `$procdff$26848' with positive edge clock.
Creating register for signal `\FDPE_1.\Q' using process `\FDPE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:810$25855'.
  created $adff cell `$procdff$26849' with negative edge clock and positive level reset.
Creating register for signal `\FDPE.\Q' using process `\FDPE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:769$25852'.
  created $adff cell `$procdff$26850' with positive edge clock and positive level reset.
Creating register for signal `\FDCE_1.\Q' using process `\FDCE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:731$25837'.
  created $adff cell `$procdff$26851' with negative edge clock and positive level reset.
Creating register for signal `\FDCE.\Q' using process `\FDCE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:690$25834'.
  created $adff cell `$procdff$26852' with positive edge clock and positive level reset.
Creating register for signal `\FDSE_1.\Q' using process `\FDSE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:587$25819'.
  created $dff cell `$procdff$26853' with negative edge clock.
Creating register for signal `\FDSE.\Q' using process `\FDSE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:554$25815'.
  created $dff cell `$procdff$26854' with positive edge clock.
Creating register for signal `\FDRE_1.\Q' using process `\FDRE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:522$25797'.
  created $dff cell `$procdff$26855' with negative edge clock.
Creating register for signal `\FDRE.\Q' using process `\FDRE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:489$25793'.
  created $dff cell `$procdff$26856' with positive edge clock.

5.4.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

5.4.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SRLC32E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2400$26553'.
Found and cleaned up 1 empty switch in `\SRLC32E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2408$26552'.
Removing empty process `SRLC32E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2408$26552'.
Removing empty process `SRLC16E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2356$26546'.
Found and cleaned up 1 empty switch in `\SRLC16E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2364$26545'.
Removing empty process `SRLC16E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2364$26545'.
Removing empty process `SRLC16.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2324$26539'.
Removing empty process `SRLC16.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2327$26538'.
Removing empty process `SRL16E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2287$26536'.
Found and cleaned up 1 empty switch in `\SRL16E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2294$26535'.
Removing empty process `SRL16E.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2294$26535'.
Removing empty process `SRL16.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2259$26529'.
Removing empty process `SRL16.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:2261$26528'.
Removing empty process `RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1975$26454'.
Removing empty process `RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1974$26453'.
Removing empty process `RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1973$26452'.
Removing empty process `RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1972$26451'.
Found and cleaned up 1 empty switch in `\RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
Removing empty process `RAM64M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1981$26348'.
Removing empty process `RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1801$26302'.
Removing empty process `RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1800$26301'.
Removing empty process `RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1799$26300'.
Removing empty process `RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1798$26299'.
Found and cleaned up 1 empty switch in `\RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
Removing empty process `RAM32M.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1807$26176'.
Removing empty process `RAM128X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1707$26143'.
Found and cleaned up 1 empty switch in `\RAM128X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1711$26106'.
Removing empty process `RAM128X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1711$26106'.
Removing empty process `RAM64X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1602$26095'.
Found and cleaned up 1 empty switch in `\RAM64X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1606$26058'.
Removing empty process `RAM64X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1606$26058'.
Removing empty process `RAM32X1D_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1556$26050'.
Found and cleaned up 1 empty switch in `\RAM32X1D_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1560$26031'.
Removing empty process `RAM32X1D_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1560$26031'.
Removing empty process `RAM32X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1497$26023'.
Found and cleaned up 1 empty switch in `\RAM32X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1501$25992'.
Removing empty process `RAM32X1D.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:1501$25992'.
Removing empty process `FDPE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25858'.
Found and cleaned up 1 empty switch in `\FDPE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:810$25855'.
Removing empty process `FDPE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:810$25855'.
Removing empty process `FDPE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25854'.
Found and cleaned up 1 empty switch in `\FDPE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:769$25852'.
Removing empty process `FDPE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:769$25852'.
Removing empty process `FDCE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25840'.
Found and cleaned up 1 empty switch in `\FDCE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:731$25837'.
Removing empty process `FDCE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:731$25837'.
Removing empty process `FDCE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25836'.
Found and cleaned up 1 empty switch in `\FDCE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:690$25834'.
Removing empty process `FDCE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:690$25834'.
Removing empty process `FDSE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25822'.
Found and cleaned up 2 empty switches in `\FDSE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:587$25819'.
Removing empty process `FDSE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:587$25819'.
Removing empty process `FDSE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25818'.
Found and cleaned up 2 empty switches in `\FDSE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:554$25815'.
Removing empty process `FDSE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:554$25815'.
Removing empty process `FDRE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25800'.
Found and cleaned up 2 empty switches in `\FDRE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:522$25797'.
Removing empty process `FDRE_1.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:522$25797'.
Removing empty process `FDRE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:0$25796'.
Found and cleaned up 2 empty switches in `\FDRE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:489$25793'.
Removing empty process `FDRE.$proc$/usr/bin/../share/yosys/xilinx/cells_sim.v:489$25793'.
Cleaned up 21 empty switches.

5.4.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.5. Executing TRIBUF pass.

5.6. Executing DEMINOUT pass (demote inout ports to input or output).

5.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..

5.9. Executing CHECK pass (checking for obvious problems).
Checking module Arbiter...
Checking module B4Processor...
Checking module BranchOutputCollector...
Checking module CheckBranch...
Checking module DataMemoryBuffer...
Checking module Decoder...
Checking module Decoder_1...
Checking module Decoder_2...
Checking module Decoder_3...
Checking module Executor...
Checking module ExternalMemoryInterface...
Checking module FIFO...
Checking module FIFO_1...
Checking module FIFO_3...
Checking module FIFO_4...
Checking module FIFO_5...
Checking module FIFO_6...
Checking module Fetch...
Checking module FetchBuffer...
Checking module Fetch_1...
Checking module InstructionChecker...
Checking module InstructionMemoryCache...
Checking module InstructionMemoryCache_1...
Checking module LoadStoreQueue...
Checking module OpcodeFormatChecker...
Checking module OutputCollector...
Checking module RRArbiter...
Checking module RRArbiter_1...
Checking module RRArbiter_2...
Checking module RegisterFile...
Checking module RegisterFile_1...
Checking module ReorderBuffer...
Checking module ReorderBuffer_1...
Checking module ReservationStation...
Checking module SourceTagSelector...
Checking module SourceTagSelector_2...
Checking module ValueSelector1...
Checking module ValueSelector2...
Found and reported 0 problems.

5.10. Executing OPT pass (performing simple optimizations).

5.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Executor'.
Finding identical cells in module `\ExternalMemoryInterface'.
Finding identical cells in module `\FIFO'.
Finding identical cells in module `\FIFO_1'.
Finding identical cells in module `\FIFO_3'.
Finding identical cells in module `\FIFO_4'.
Finding identical cells in module `\FIFO_5'.
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\FetchBuffer'.
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\InstructionChecker'.
Finding identical cells in module `\InstructionMemoryCache'.
Finding identical cells in module `\InstructionMemoryCache_1'.
Finding identical cells in module `\LoadStoreQueue'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\ReorderBuffer'.
Finding identical cells in module `\ReorderBuffer_1'.
Finding identical cells in module `\ReservationStation'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 0 cells.

5.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Arbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \B4Processor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \BranchOutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \CheckBranch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \DataMemoryBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Executor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ExternalMemoryInterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Fetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FetchBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LoadStoreQueue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OpcodeFormatChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RRArbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReservationStation..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3327 debug messages>

5.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Arbiter.
  Optimizing cells in module \B4Processor.
  Optimizing cells in module \BranchOutputCollector.
  Optimizing cells in module \CheckBranch.
  Optimizing cells in module \DataMemoryBuffer.
  Optimizing cells in module \Decoder.
  Optimizing cells in module \Decoder_1.
  Optimizing cells in module \Decoder_2.
  Optimizing cells in module \Decoder_3.
  Optimizing cells in module \Executor.
  Optimizing cells in module \ExternalMemoryInterface.
  Optimizing cells in module \FIFO.
  Optimizing cells in module \FIFO_1.
  Optimizing cells in module \FIFO_3.
  Optimizing cells in module \FIFO_4.
  Optimizing cells in module \FIFO_5.
  Optimizing cells in module \FIFO_6.
  Optimizing cells in module \Fetch.
  Optimizing cells in module \FetchBuffer.
  Optimizing cells in module \Fetch_1.
  Optimizing cells in module \InstructionChecker.
  Optimizing cells in module \InstructionMemoryCache.
  Optimizing cells in module \InstructionMemoryCache_1.
  Optimizing cells in module \LoadStoreQueue.
  Optimizing cells in module \OpcodeFormatChecker.
  Optimizing cells in module \OutputCollector.
  Optimizing cells in module \RRArbiter.
  Optimizing cells in module \RRArbiter_1.
  Optimizing cells in module \RRArbiter_2.
  Optimizing cells in module \RegisterFile.
  Optimizing cells in module \RegisterFile_1.
  Optimizing cells in module \ReorderBuffer.
  Optimizing cells in module \ReorderBuffer_1.
  Optimizing cells in module \ReservationStation.
  Optimizing cells in module \SourceTagSelector.
  Optimizing cells in module \SourceTagSelector_2.
  Optimizing cells in module \ValueSelector1.
  Optimizing cells in module \ValueSelector2.
Performed a total of 0 changes.

5.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Executor'.
Finding identical cells in module `\ExternalMemoryInterface'.
Finding identical cells in module `\FIFO'.
Finding identical cells in module `\FIFO_1'.
Finding identical cells in module `\FIFO_3'.
Finding identical cells in module `\FIFO_4'.
Finding identical cells in module `\FIFO_5'.
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\FetchBuffer'.
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\InstructionChecker'.
Finding identical cells in module `\InstructionMemoryCache'.
Finding identical cells in module `\InstructionMemoryCache_1'.
Finding identical cells in module `\LoadStoreQueue'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\ReorderBuffer'.
Finding identical cells in module `\ReorderBuffer_1'.
Finding identical cells in module `\ReservationStation'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 0 cells.

5.10.6. Executing OPT_DFF pass (perform DFF optimizations).

5.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..

5.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.10.9. Finished OPT passes. (There is nothing left to do.)

5.11. Executing FSM pass (extract and optimize FSM).

5.11.1. Executing FSM_DETECT pass (finding FSMs in design).

5.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

5.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

5.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..

5.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

5.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

5.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

5.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

5.12. Executing OPT pass (performing simple optimizations).

5.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Executor'.
Finding identical cells in module `\ExternalMemoryInterface'.
Finding identical cells in module `\FIFO'.
Finding identical cells in module `\FIFO_1'.
Finding identical cells in module `\FIFO_3'.
Finding identical cells in module `\FIFO_4'.
Finding identical cells in module `\FIFO_5'.
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\FetchBuffer'.
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\InstructionChecker'.
Finding identical cells in module `\InstructionMemoryCache'.
Finding identical cells in module `\InstructionMemoryCache_1'.
Finding identical cells in module `\LoadStoreQueue'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\ReorderBuffer'.
Finding identical cells in module `\ReorderBuffer_1'.
Finding identical cells in module `\ReservationStation'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 0 cells.

5.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Arbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \B4Processor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \BranchOutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \CheckBranch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \DataMemoryBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Executor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ExternalMemoryInterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Fetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FetchBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LoadStoreQueue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OpcodeFormatChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RRArbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReservationStation..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3327 debug messages>

5.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Arbiter.
  Optimizing cells in module \B4Processor.
  Optimizing cells in module \BranchOutputCollector.
  Optimizing cells in module \CheckBranch.
  Optimizing cells in module \DataMemoryBuffer.
  Optimizing cells in module \Decoder.
  Optimizing cells in module \Decoder_1.
  Optimizing cells in module \Decoder_2.
  Optimizing cells in module \Decoder_3.
  Optimizing cells in module \Executor.
  Optimizing cells in module \ExternalMemoryInterface.
  Optimizing cells in module \FIFO.
  Optimizing cells in module \FIFO_1.
  Optimizing cells in module \FIFO_3.
  Optimizing cells in module \FIFO_4.
  Optimizing cells in module \FIFO_5.
  Optimizing cells in module \FIFO_6.
  Optimizing cells in module \Fetch.
  Optimizing cells in module \FetchBuffer.
  Optimizing cells in module \Fetch_1.
  Optimizing cells in module \InstructionChecker.
  Optimizing cells in module \InstructionMemoryCache.
  Optimizing cells in module \InstructionMemoryCache_1.
  Optimizing cells in module \LoadStoreQueue.
  Optimizing cells in module \OpcodeFormatChecker.
  Optimizing cells in module \OutputCollector.
  Optimizing cells in module \RRArbiter.
  Optimizing cells in module \RRArbiter_1.
  Optimizing cells in module \RRArbiter_2.
  Optimizing cells in module \RegisterFile.
  Optimizing cells in module \RegisterFile_1.
  Optimizing cells in module \ReorderBuffer.
  Optimizing cells in module \ReorderBuffer_1.
  Optimizing cells in module \ReservationStation.
  Optimizing cells in module \SourceTagSelector.
  Optimizing cells in module \SourceTagSelector_2.
  Optimizing cells in module \ValueSelector1.
  Optimizing cells in module \ValueSelector2.
Performed a total of 0 changes.

5.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Executor'.
Finding identical cells in module `\ExternalMemoryInterface'.
Finding identical cells in module `\FIFO'.
Finding identical cells in module `\FIFO_1'.
Finding identical cells in module `\FIFO_3'.
Finding identical cells in module `\FIFO_4'.
Finding identical cells in module `\FIFO_5'.
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\FetchBuffer'.
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\InstructionChecker'.
Finding identical cells in module `\InstructionMemoryCache'.
Finding identical cells in module `\InstructionMemoryCache_1'.
Finding identical cells in module `\LoadStoreQueue'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\ReorderBuffer'.
Finding identical cells in module `\ReorderBuffer_1'.
Finding identical cells in module `\ReservationStation'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 0 cells.

5.12.6. Executing OPT_DFF pass (perform DFF optimizations).

5.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..

5.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.12.9. Finished OPT passes. (There is nothing left to do.)

5.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 7 bits (of 8) from mux cell Arbiter.$ternary$B4Processor.v:22650$16482 ($mux).
Removed top 2 bits (of 3) from mux cell CheckBranch.$ternary$B4Processor.v:1999$1589 ($mux).
Removed top 3 bits (of 7) from port A of cell CheckBranch.$eq$B4Processor.v:2004$1598 ($eq).
Removed top 2 bits (of 3) from wire CheckBranch._io_branchType_T_1.
Removed top 2 bits (of 3) from port B of cell DataMemoryBuffer.$eq$B4Processor.v:15976$12699 ($eq).
Removed top 1 bits (of 3) from port B of cell DataMemoryBuffer.$eq$B4Processor.v:15978$12700 ($eq).
Removed top 1 bits (of 3) from port B of cell DataMemoryBuffer.$eq$B4Processor.v:15980$12701 ($eq).
Removed top 8 bits (of 16) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16007$12714 ($or).
Removed top 8 bits (of 24) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16009$12715 ($or).
Removed top 8 bits (of 32) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16011$12716 ($or).
Removed top 8 bits (of 40) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16013$12717 ($or).
Removed top 8 bits (of 48) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16015$12718 ($or).
Removed top 8 bits (of 56) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16017$12719 ($or).
Removed top 8 bits (of 64) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16019$12720 ($or).
Removed top 1 bits (of 2) from port B of cell DataMemoryBuffer.$eq$B4Processor.v:16021$12722 ($eq).
Removed top 16 bits (of 32) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16036$12729 ($or).
Removed top 16 bits (of 48) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16038$12730 ($or).
Removed top 16 bits (of 64) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16040$12731 ($or).
Removed top 32 bits (of 64) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16047$12735 ($or).
Removed top 1 bits (of 2) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16062$12749 ($or).
Removed top 1 bits (of 3) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16064$12750 ($or).
Removed top 1 bits (of 4) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16066$12751 ($or).
Removed top 1 bits (of 5) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16068$12752 ($or).
Removed top 1 bits (of 6) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16070$12753 ($or).
Removed top 1 bits (of 7) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16072$12754 ($or).
Removed top 1 bits (of 8) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16074$12755 ($or).
Removed top 2 bits (of 4) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16080$12760 ($or).
Removed top 2 bits (of 6) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16082$12761 ($or).
Removed top 2 bits (of 8) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16084$12762 ($or).
Removed top 4 bits (of 8) from port A of cell DataMemoryBuffer.$or$B4Processor.v:16088$12765 ($or).
Removed top 1 bits (of 2) from port A of cell DataMemoryBuffer.$eq$B4Processor.v:16091$12768 ($eq).
Removed top 2 bits (of 3) from port B of cell Decoder.$eq$B4Processor.v:17000$12911 ($eq).
Removed top 1 bits (of 3) from port B of cell Decoder.$eq$B4Processor.v:17004$12916 ($eq).
Removed top 1 bits (of 3) from port B of cell Decoder.$eq$B4Processor.v:17006$12918 ($eq).
Removed top 2 bits (of 3) from port A of cell Decoder.$eq$B4Processor.v:17014$12925 ($eq).
Removed top 1 bits (of 3) from port A of cell Decoder.$eq$B4Processor.v:17018$12929 ($eq).
Removed top 5 bits (of 7) from port A of cell Decoder.$eq$B4Processor.v:17023$12934 ($eq).
Removed top 2 bits (of 7) from port A of cell Decoder.$eq$B4Processor.v:17026$12938 ($eq).
Removed top 1 bits (of 8) from mux cell Decoder.$ternary$B4Processor.v:17032$12942 ($mux).
Removed top 1 bits (of 3) from port A of cell Decoder.$eq$B4Processor.v:17034$12943 ($eq).
Removed top 1 bits (of 2) from port B of cell Decoder.$eq$B4Processor.v:17039$12948 ($eq).
Removed top 1 bits (of 2) from port A of cell Decoder.$or$B4Processor.v:17047$12953 ($or).
Removed top 7 bits (of 12) from mux cell Decoder.$ternary$B4Processor.v:17050$12954 ($mux).
Removed top 1 bits (of 7) from port B of cell Decoder.$eq$B4Processor.v:17111$12960 ($eq).
Removed top 52 bits (of 64) from port B of cell Decoder.$add$B4Processor.v:17148$12984 ($add).
Removed top 1 bits (of 8) from wire Decoder._io_reservationStation_entry_immediateOrFunction7_T_12.
Removed top 2 bits (of 3) from port B of cell Decoder_1.$eq$B4Processor.v:17346$12999 ($eq).
Removed top 1 bits (of 3) from port B of cell Decoder_1.$eq$B4Processor.v:17350$13004 ($eq).
Removed top 1 bits (of 3) from port B of cell Decoder_1.$eq$B4Processor.v:17352$13006 ($eq).
Removed top 2 bits (of 3) from port A of cell Decoder_1.$eq$B4Processor.v:17360$13013 ($eq).
Removed top 1 bits (of 3) from port A of cell Decoder_1.$eq$B4Processor.v:17364$13017 ($eq).
Removed top 5 bits (of 7) from port A of cell Decoder_1.$eq$B4Processor.v:17369$13022 ($eq).
Removed top 2 bits (of 7) from port A of cell Decoder_1.$eq$B4Processor.v:17372$13026 ($eq).
Removed top 1 bits (of 8) from mux cell Decoder_1.$ternary$B4Processor.v:17378$13030 ($mux).
Removed top 1 bits (of 3) from port A of cell Decoder_1.$eq$B4Processor.v:17380$13031 ($eq).
Removed top 1 bits (of 2) from port B of cell Decoder_1.$eq$B4Processor.v:17385$13036 ($eq).
Removed top 1 bits (of 2) from port A of cell Decoder_1.$or$B4Processor.v:17393$13041 ($or).
Removed top 7 bits (of 12) from mux cell Decoder_1.$ternary$B4Processor.v:17396$13042 ($mux).
Removed top 1 bits (of 7) from port B of cell Decoder_1.$eq$B4Processor.v:17465$13048 ($eq).
Removed top 52 bits (of 64) from port B of cell Decoder_1.$add$B4Processor.v:17497$13061 ($add).
Removed top 1 bits (of 8) from wire Decoder_1._io_reservationStation_entry_immediateOrFunction7_T_12.
Removed top 2 bits (of 3) from port B of cell Decoder_2.$eq$B4Processor.v:17671$13071 ($eq).
Removed top 1 bits (of 3) from port B of cell Decoder_2.$eq$B4Processor.v:17675$13076 ($eq).
Removed top 1 bits (of 3) from port B of cell Decoder_2.$eq$B4Processor.v:17677$13078 ($eq).
Removed top 2 bits (of 3) from port A of cell Decoder_2.$eq$B4Processor.v:17685$13085 ($eq).
Removed top 1 bits (of 3) from port A of cell Decoder_2.$eq$B4Processor.v:17689$13089 ($eq).
Removed top 5 bits (of 7) from port A of cell Decoder_2.$eq$B4Processor.v:17694$13094 ($eq).
Removed top 2 bits (of 7) from port A of cell Decoder_2.$eq$B4Processor.v:17697$13098 ($eq).
Removed top 1 bits (of 8) from mux cell Decoder_2.$ternary$B4Processor.v:17703$13102 ($mux).
Removed top 1 bits (of 3) from port A of cell Decoder_2.$eq$B4Processor.v:17705$13103 ($eq).
Removed top 1 bits (of 2) from port B of cell Decoder_2.$eq$B4Processor.v:17710$13108 ($eq).
Removed top 1 bits (of 2) from port A of cell Decoder_2.$or$B4Processor.v:17718$13113 ($or).
Removed top 7 bits (of 12) from mux cell Decoder_2.$ternary$B4Processor.v:17721$13114 ($mux).
Removed top 1 bits (of 7) from port B of cell Decoder_2.$eq$B4Processor.v:17782$13120 ($eq).
Removed top 52 bits (of 64) from port B of cell Decoder_2.$add$B4Processor.v:17819$13144 ($add).
Removed top 1 bits (of 8) from wire Decoder_2._io_reservationStation_entry_immediateOrFunction7_T_12.
Removed top 2 bits (of 3) from port B of cell Decoder_3.$eq$B4Processor.v:17993$13150 ($eq).
Removed top 1 bits (of 3) from port B of cell Decoder_3.$eq$B4Processor.v:17997$13155 ($eq).
Removed top 1 bits (of 3) from port B of cell Decoder_3.$eq$B4Processor.v:17999$13157 ($eq).
Removed top 2 bits (of 3) from port A of cell Decoder_3.$eq$B4Processor.v:18007$13164 ($eq).
Removed top 1 bits (of 3) from port A of cell Decoder_3.$eq$B4Processor.v:18011$13168 ($eq).
Removed top 5 bits (of 7) from port A of cell Decoder_3.$eq$B4Processor.v:18016$13173 ($eq).
Removed top 2 bits (of 7) from port A of cell Decoder_3.$eq$B4Processor.v:18019$13177 ($eq).
Removed top 1 bits (of 8) from mux cell Decoder_3.$ternary$B4Processor.v:18025$13181 ($mux).
Removed top 1 bits (of 3) from port A of cell Decoder_3.$eq$B4Processor.v:18027$13182 ($eq).
Removed top 1 bits (of 2) from port B of cell Decoder_3.$eq$B4Processor.v:18032$13187 ($eq).
Removed top 1 bits (of 2) from port A of cell Decoder_3.$or$B4Processor.v:18040$13192 ($or).
Removed top 7 bits (of 12) from mux cell Decoder_3.$ternary$B4Processor.v:18043$13193 ($mux).
Removed top 1 bits (of 7) from port B of cell Decoder_3.$eq$B4Processor.v:18112$13199 ($eq).
Removed top 52 bits (of 64) from port B of cell Decoder_3.$add$B4Processor.v:18144$13212 ($add).
Removed top 1 bits (of 8) from wire Decoder_3._io_reservationStation_entry_immediateOrFunction7_T_12.
Removed top 51 bits (of 64) from port B of cell Executor.$add$B4Processor.v:22216$16334 ($add).
Removed top 61 bits (of 64) from port B of cell Executor.$add$B4Processor.v:22217$16335 ($add).
Removed top 1 bits (of 4) from port B of cell Executor.$eq$B4Processor.v:22218$16336 ($eq).
Removed top 52 bits (of 64) from port B of cell Executor.$add$B4Processor.v:22221$16337 ($add).
Removed top 1 bits (of 4) from port B of cell Executor.$eq$B4Processor.v:22224$16340 ($eq).
Removed top 3 bits (of 4) from port B of cell Executor.$eq$B4Processor.v:22226$16343 ($eq).
Removed top 1 bits (of 4) from port B of cell Executor.$eq$B4Processor.v:22232$16349 ($eq).
Removed top 2 bits (of 4) from port B of cell Executor.$eq$B4Processor.v:22234$16351 ($eq).
Removed top 1 bits (of 3) from port B of cell Executor.$eq$B4Processor.v:22235$16352 ($eq).
Removed top 31 bits (of 63) from port A of cell Executor.$shl$B4Processor.v:22237$16353 ($shl).
Removed top 63 bits (of 127) from port A of cell Executor.$shl$B4Processor.v:22239$16354 ($shl).
Removed top 1 bits (of 4) from port B of cell Executor.$eq$B4Processor.v:22242$16356 ($eq).
Removed top 1 bits (of 4) from port B of cell Executor.$eq$B4Processor.v:22248$16360 ($eq).
Removed top 2 bits (of 4) from port B of cell Executor.$eq$B4Processor.v:22256$16364 ($eq).
Removed top 1 bits (of 4) from port B of cell Executor.$eq$B4Processor.v:22259$16366 ($eq).
Removed top 2 bits (of 4) from port B of cell Executor.$eq$B4Processor.v:22263$16370 ($eq).
Removed top 2 bits (of 4) from port B of cell Executor.$eq$B4Processor.v:22264$16371 ($eq).
Removed top 3 bits (of 4) from port B of cell Executor.$eq$B4Processor.v:22266$16374 ($eq).
Removed top 2 bits (of 3) from port B of cell Executor.$eq$B4Processor.v:22271$16378 ($eq).
Removed top 1 bits (of 3) from port B of cell Executor.$eq$B4Processor.v:22273$16380 ($eq).
Removed top 1 bits (of 3) from port B of cell Executor.$eq$B4Processor.v:22275$16382 ($eq).
Removed top 63 bits (of 127) from mux cell Executor.$ternary$B4Processor.v:22315$16405 ($mux).
Removed top 1 bits (of 4) from port B of cell Executor.$ne$B4Processor.v:22361$16431 ($ne).
Removed top 1 bits (of 4) from port B of cell Executor.$ne$B4Processor.v:22363$16433 ($ne).
Removed top 1 bits (of 4) from port B of cell Executor.$eq$B4Processor.v:22380$16438 ($eq).
Removed top 63 bits (of 127) from mux cell Executor.$ternary$B4Processor.v:22313$16404 ($mux).
Removed top 63 bits (of 127) from mux cell Executor.$ternary$B4Processor.v:22311$16403 ($mux).
Removed top 63 bits (of 127) from mux cell Executor.$ternary$B4Processor.v:22309$16402 ($mux).
Removed top 63 bits (of 127) from mux cell Executor.$ternary$B4Processor.v:22307$16401 ($mux).
Removed top 63 bits (of 127) from mux cell Executor.$ternary$B4Processor.v:22305$16400 ($mux).
Removed top 63 bits (of 127) from mux cell Executor.$ternary$B4Processor.v:22303$16399 ($mux).
Removed top 63 bits (of 127) from mux cell Executor.$ternary$B4Processor.v:22240$16355 ($mux).
Removed top 63 bits (of 127) from port Y of cell Executor.$shl$B4Processor.v:22239$16354 ($shl).
Removed top 63 bits (of 127) from wire Executor._executionResult64bit_T_100.
Removed top 63 bits (of 127) from wire Executor._executionResult64bit_T_27.
Removed top 63 bits (of 127) from wire Executor._executionResult64bit_T_28.
Removed top 63 bits (of 127) from wire Executor._executionResult64bit_T_95.
Removed top 63 bits (of 127) from wire Executor._executionResult64bit_T_96.
Removed top 63 bits (of 127) from wire Executor._executionResult64bit_T_97.
Removed top 63 bits (of 127) from wire Executor._executionResult64bit_T_98.
Removed top 84 bits (of 127) from wire Executor._executionResult64bit_T_99.
Removed top 7 bits (of 8) from port B of cell ExternalMemoryInterface.$add$B4Processor.v:23012$16517 ($add).
Removed top 2 bits (of 3) from port B of cell ExternalMemoryInterface.$eq$B4Processor.v:23024$16528 ($eq).
Removed top 1 bits (of 3) from port B of cell ExternalMemoryInterface.$eq$B4Processor.v:23028$16531 ($eq).
Removed top 1 bits (of 3) from port B of cell ExternalMemoryInterface.$eq$B4Processor.v:23032$16534 ($eq).
Removed top 1 bits (of 2) from port B of cell ExternalMemoryInterface.$eq$B4Processor.v:23074$16564 ($eq).
Removed top 2 bits (of 3) from port B of cell FIFO.$add$B4Processor.v:15774$12677 ($add).
Removed top 2 bits (of 3) from port B of cell FIFO.$add$B4Processor.v:15779$12680 ($add).
Removed top 1 bits (of 2) from port B of cell FIFO_1.$add$B4Processor.v:16243$12789 ($add).
Removed top 1 bits (of 2) from port B of cell FIFO_1.$add$B4Processor.v:16248$12792 ($add).
Removed top 1 bits (of 2) from port B of cell FIFO_3.$add$B4Processor.v:16641$12824 ($add).
Removed top 1 bits (of 2) from port B of cell FIFO_3.$add$B4Processor.v:16643$12826 ($add).
Removed top 2 bits (of 3) from port B of cell FIFO_4.$add$B4Processor.v:22432$16444 ($add).
Removed top 2 bits (of 3) from port B of cell FIFO_4.$add$B4Processor.v:22437$16447 ($add).
Removed top 2 bits (of 3) from port B of cell FIFO_5.$add$B4Processor.v:22693$16488 ($add).
Removed top 2 bits (of 3) from port B of cell FIFO_5.$add$B4Processor.v:22698$16491 ($add).
Removed top 2 bits (of 3) from port B of cell FIFO_6.$add$B4Processor.v:22810$16507 ($add).
Removed top 2 bits (of 3) from port B of cell FIFO_6.$add$B4Processor.v:22811$16508 ($add).
Removed top 2 bits (of 3) from port A of cell Fetch.$eq$B4Processor.v:2050$1610 ($eq).
Removed top 1 bits (of 3) from port A of cell Fetch.$eq$B4Processor.v:2051$1612 ($eq).
Removed top 1 bits (of 3) from port A of cell Fetch.$eq$B4Processor.v:2054$1618 ($eq).
Removed top 1 bits (of 3) from port B of cell Fetch.$eq$B4Processor.v:2057$1622 ($eq).
Removed top 1 bits (of 4) from mux cell Fetch.$ternary$B4Processor.v:2059$1624 ($mux).
Removed top 2 bits (of 3) from port A of cell Fetch.$eq$B4Processor.v:2069$1635 ($eq).
Removed top 1 bits (of 3) from port A of cell Fetch.$eq$B4Processor.v:2070$1637 ($eq).
Removed top 1 bits (of 3) from port A of cell Fetch.$eq$B4Processor.v:2073$1643 ($eq).
Removed top 1 bits (of 3) from port B of cell Fetch.$eq$B4Processor.v:2077$1648 ($eq).
Removed top 1 bits (of 4) from mux cell Fetch.$ternary$B4Processor.v:2079$1650 ($mux).
Removed top 43 bits (of 64) from port B of cell Fetch.$add$B4Processor.v:2083$1653 ($add).
Removed top 2 bits (of 3) from port B of cell Fetch.$eq$B4Processor.v:2090$1664 ($eq).
Removed top 1 bits (of 3) from port B of cell Fetch.$eq$B4Processor.v:2090$1665 ($eq).
Removed top 61 bits (of 64) from port B of cell Fetch.$add$B4Processor.v:2091$1668 ($add).
Removed top 43 bits (of 64) from port B of cell Fetch.$add$B4Processor.v:2111$1676 ($add).
Removed top 1 bits (of 3) from port B of cell Fetch.$eq$B4Processor.v:2133$1682 ($eq).
Removed top 1 bits (of 4) from wire Fetch._T_30.
Removed top 1 bits (of 4) from wire Fetch._T_66.
Removed top 2 bits (of 3) from port B of cell FetchBuffer.$add$B4Processor.v:2439$1770 ($add).
Removed top 2 bits (of 3) from port A of cell FetchBuffer.$eq$B4Processor.v:2451$1791 ($eq).
Removed top 1 bits (of 3) from port A of cell FetchBuffer.$eq$B4Processor.v:2452$1793 ($eq).
Removed top 1 bits (of 3) from port A of cell FetchBuffer.$eq$B4Processor.v:2453$1795 ($eq).
Removed top 2 bits (of 3) from port B of cell FetchBuffer.$add$B4Processor.v:2475$1822 ($add).
Removed top 2 bits (of 3) from port A of cell FetchBuffer.$eq$B4Processor.v:2487$1841 ($eq).
Removed top 1 bits (of 3) from port A of cell FetchBuffer.$eq$B4Processor.v:2488$1843 ($eq).
Removed top 1 bits (of 3) from port A of cell FetchBuffer.$eq$B4Processor.v:2489$1845 ($eq).
Removed top 2 bits (of 3) from port B of cell FetchBuffer.$add$B4Processor.v:2494$1855 ($add).
Removed top 2 bits (of 3) from port A of cell FetchBuffer.$eq$B4Processor.v:2505$1873 ($eq).
Removed top 1 bits (of 3) from port A of cell FetchBuffer.$eq$B4Processor.v:2506$1875 ($eq).
Removed top 1 bits (of 3) from port A of cell FetchBuffer.$eq$B4Processor.v:2507$1877 ($eq).
Removed top 2 bits (of 3) from port B of cell FetchBuffer.$add$B4Processor.v:2512$1887 ($add).
Removed top 2 bits (of 3) from port A of cell FetchBuffer.$eq$B4Processor.v:2550$1900 ($eq).
Removed top 1 bits (of 3) from port A of cell FetchBuffer.$eq$B4Processor.v:2568$1902 ($eq).
Removed top 1 bits (of 3) from port A of cell FetchBuffer.$eq$B4Processor.v:2586$1904 ($eq).
Removed top 2 bits (of 3) from port A of cell Fetch_1.$eq$B4Processor.v:2238$1696 ($eq).
Removed top 1 bits (of 3) from port A of cell Fetch_1.$eq$B4Processor.v:2239$1698 ($eq).
Removed top 1 bits (of 3) from port A of cell Fetch_1.$eq$B4Processor.v:2242$1704 ($eq).
Removed top 1 bits (of 3) from port B of cell Fetch_1.$eq$B4Processor.v:2245$1708 ($eq).
Removed top 1 bits (of 4) from mux cell Fetch_1.$ternary$B4Processor.v:2247$1710 ($mux).
Removed top 2 bits (of 3) from port A of cell Fetch_1.$eq$B4Processor.v:2257$1721 ($eq).
Removed top 1 bits (of 3) from port A of cell Fetch_1.$eq$B4Processor.v:2258$1723 ($eq).
Removed top 1 bits (of 3) from port A of cell Fetch_1.$eq$B4Processor.v:2261$1729 ($eq).
Removed top 1 bits (of 3) from port B of cell Fetch_1.$eq$B4Processor.v:2265$1734 ($eq).
Removed top 1 bits (of 4) from mux cell Fetch_1.$ternary$B4Processor.v:2267$1736 ($mux).
Removed top 43 bits (of 64) from port B of cell Fetch_1.$add$B4Processor.v:2271$1739 ($add).
Removed top 2 bits (of 3) from port B of cell Fetch_1.$eq$B4Processor.v:2277$1748 ($eq).
Removed top 1 bits (of 3) from port B of cell Fetch_1.$eq$B4Processor.v:2277$1749 ($eq).
Removed top 61 bits (of 64) from port B of cell Fetch_1.$add$B4Processor.v:2278$1752 ($add).
Removed top 43 bits (of 64) from port B of cell Fetch_1.$add$B4Processor.v:2298$1760 ($add).
Removed top 1 bits (of 3) from port B of cell Fetch_1.$eq$B4Processor.v:2320$1766 ($eq).
Removed top 1 bits (of 4) from wire Fetch_1._T_30.
Removed top 1 bits (of 4) from wire Fetch_1._T_66.
Removed top 2 bits (of 4) from mux cell InstructionChecker.$ternary$B4Processor.v:22135$16251 ($mux).
Removed top 2 bits (of 4) from mux cell InstructionChecker.$ternary$B4Processor.v:22137$16253 ($mux).
Removed top 1 bits (of 4) from mux cell InstructionChecker.$ternary$B4Processor.v:22138$16254 ($mux).
Removed top 1 bits (of 4) from mux cell InstructionChecker.$ternary$B4Processor.v:22139$16255 ($mux).
Removed top 5 bits (of 7) from port A of cell InstructionChecker.$eq$B4Processor.v:22140$16256 ($eq).
Removed top 3 bits (of 7) from port A of cell InstructionChecker.$eq$B4Processor.v:22141$16258 ($eq).
Removed top 2 bits (of 7) from port A of cell InstructionChecker.$eq$B4Processor.v:22143$16262 ($eq).
Removed top 2 bits (of 7) from port A of cell InstructionChecker.$eq$B4Processor.v:22144$16264 ($eq).
Removed top 1 bits (of 7) from port A of cell InstructionChecker.$eq$B4Processor.v:22147$16270 ($eq).
Removed top 2 bits (of 7) from port A of cell InstructionChecker.$eq$B4Processor.v:22148$16272 ($eq).
Removed top 1 bits (of 7) from port A of cell InstructionChecker.$eq$B4Processor.v:22150$16276 ($eq).
Removed top 1 bits (of 7) from port A of cell InstructionChecker.$eq$B4Processor.v:22151$16278 ($eq).
Removed top 1 bits (of 4) from port B of cell InstructionChecker.$eq$B4Processor.v:22152$16280 ($eq).
Removed top 1 bits (of 4) from port B of cell InstructionChecker.$eq$B4Processor.v:22159$16293 ($eq).
Removed top 1 bits (of 4) from port B of cell InstructionChecker.$eq$B4Processor.v:22159$16294 ($eq).
Removed top 2 bits (of 7) from port A of cell InstructionChecker.$eq$B4Processor.v:22165$16305 ($eq).
Removed top 2 bits (of 7) from port A of cell InstructionChecker.$eq$B4Processor.v:22166$16306 ($eq).
Removed top 1 bits (of 4) from port B of cell InstructionChecker.$eq$B4Processor.v:22170$16311 ($eq).
Removed top 2 bits (of 3) from mux cell InstructionChecker.$ternary$B4Processor.v:22172$16314 ($mux).
Removed top 2 bits (of 3) from port A of cell InstructionChecker.$eq$B4Processor.v:22173$16315 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionChecker.$eq$B4Processor.v:22174$16317 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionChecker.$eq$B4Processor.v:22175$16319 ($eq).
Removed top 1 bits (of 7) from port A of cell InstructionChecker.$eq$B4Processor.v:22180$16329 ($eq).
Removed top 2 bits (of 3) from wire InstructionChecker._output_arithmetic_T_8.
Removed top 2 bits (of 4) from wire InstructionChecker._output_instruction_T_1.
Removed top 2 bits (of 4) from wire InstructionChecker._output_instruction_T_4.
Removed top 1 bits (of 4) from wire InstructionChecker._output_instruction_T_6.
Removed top 1 bits (of 4) from wire InstructionChecker._output_instruction_T_7.
Removed top 62 bits (of 63) from port B of cell InstructionMemoryCache.$add$B4Processor.v:106$1 ($add).
Removed top 2 bits (of 3) from port A of cell InstructionMemoryCache.$eq$B4Processor.v:138$70 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionMemoryCache.$eq$B4Processor.v:139$72 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionMemoryCache.$eq$B4Processor.v:140$74 ($eq).
Removed top 2 bits (of 3) from port A of cell InstructionMemoryCache.$eq$B4Processor.v:178$163 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionMemoryCache.$eq$B4Processor.v:179$165 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionMemoryCache.$eq$B4Processor.v:180$167 ($eq).
Removed top 62 bits (of 63) from port B of cell InstructionMemoryCache.$add$B4Processor.v:194$197 ($add).
Removed top 2 bits (of 3) from port A of cell InstructionMemoryCache.$eq$B4Processor.v:226$266 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionMemoryCache.$eq$B4Processor.v:227$268 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionMemoryCache.$eq$B4Processor.v:228$270 ($eq).
Removed top 2 bits (of 3) from port A of cell InstructionMemoryCache.$eq$B4Processor.v:266$359 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionMemoryCache.$eq$B4Processor.v:267$361 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionMemoryCache.$eq$B4Processor.v:268$363 ($eq).
Removed top 1 bits (of 2) from port B of cell InstructionMemoryCache.$add$B4Processor.v:373$651 ($add).
Removed top 1 bits (of 2) from port A of cell InstructionMemoryCache.$eq$B4Processor.v:503$689 ($eq).
Removed top 62 bits (of 63) from port B of cell InstructionMemoryCache_1.$add$B4Processor.v:1098$792 ($add).
Removed top 2 bits (of 3) from port A of cell InstructionMemoryCache_1.$eq$B4Processor.v:1130$861 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionMemoryCache_1.$eq$B4Processor.v:1131$863 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionMemoryCache_1.$eq$B4Processor.v:1132$865 ($eq).
Removed top 2 bits (of 3) from port A of cell InstructionMemoryCache_1.$eq$B4Processor.v:1170$954 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionMemoryCache_1.$eq$B4Processor.v:1171$956 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionMemoryCache_1.$eq$B4Processor.v:1172$958 ($eq).
Removed top 62 bits (of 63) from port B of cell InstructionMemoryCache_1.$add$B4Processor.v:1186$988 ($add).
Removed top 2 bits (of 3) from port A of cell InstructionMemoryCache_1.$eq$B4Processor.v:1218$1057 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionMemoryCache_1.$eq$B4Processor.v:1219$1059 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionMemoryCache_1.$eq$B4Processor.v:1220$1061 ($eq).
Removed top 2 bits (of 3) from port A of cell InstructionMemoryCache_1.$eq$B4Processor.v:1258$1150 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionMemoryCache_1.$eq$B4Processor.v:1259$1152 ($eq).
Removed top 1 bits (of 3) from port A of cell InstructionMemoryCache_1.$eq$B4Processor.v:1260$1154 ($eq).
Removed top 1 bits (of 2) from port B of cell InstructionMemoryCache_1.$add$B4Processor.v:1365$1442 ($add).
Removed top 1 bits (of 2) from port A of cell InstructionMemoryCache_1.$eq$B4Processor.v:1495$1480 ($eq).
Removed top 2 bits (of 3) from port B of cell LoadStoreQueue.$add$B4Processor.v:11782$9354 ($add).
Removed top 2 bits (of 3) from port A of cell LoadStoreQueue.$eq$B4Processor.v:11897$9550 ($eq).
Removed top 1 bits (of 3) from port A of cell LoadStoreQueue.$eq$B4Processor.v:11898$9552 ($eq).
Removed top 1 bits (of 3) from port A of cell LoadStoreQueue.$eq$B4Processor.v:11899$9554 ($eq).
Removed top 2 bits (of 3) from port B of cell LoadStoreQueue.$add$B4Processor.v:12009$9668 ($add).
Removed top 2 bits (of 3) from port B of cell LoadStoreQueue.$add$B4Processor.v:12010$9669 ($add).
Removed top 2 bits (of 3) from port A of cell LoadStoreQueue.$eq$B4Processor.v:12109$9865 ($eq).
Removed top 1 bits (of 3) from port A of cell LoadStoreQueue.$eq$B4Processor.v:12110$9867 ($eq).
Removed top 1 bits (of 3) from port A of cell LoadStoreQueue.$eq$B4Processor.v:12111$9869 ($eq).
Removed top 2 bits (of 3) from port B of cell LoadStoreQueue.$add$B4Processor.v:12221$9983 ($add).
Removed top 2 bits (of 3) from port B of cell LoadStoreQueue.$add$B4Processor.v:13024$11103 ($add).
Removed top 2 bits (of 3) from port A of cell LoadStoreQueue.$eq$B4Processor.v:13211$11469 ($eq).
Removed top 1 bits (of 3) from port A of cell LoadStoreQueue.$eq$B4Processor.v:13212$11471 ($eq).
Removed top 1 bits (of 3) from port A of cell LoadStoreQueue.$eq$B4Processor.v:13213$11473 ($eq).
Removed top 1 bits (of 3) from port B of cell LoadStoreQueue.$add$B4Processor.v:13548$12036 ($add).
Removed top 2 bits (of 3) from port A of cell LoadStoreQueue.$eq$B4Processor.v:13729$12395 ($eq).
Removed top 1 bits (of 3) from port A of cell LoadStoreQueue.$eq$B4Processor.v:13730$12397 ($eq).
Removed top 1 bits (of 3) from port A of cell LoadStoreQueue.$eq$B4Processor.v:13731$12399 ($eq).
Removed top 2 bits (of 3) from port A of cell LoadStoreQueue.$eq$B4Processor.v:14026$12465 ($eq).
Removed top 1 bits (of 3) from port A of cell LoadStoreQueue.$eq$B4Processor.v:14227$12494 ($eq).
Removed top 1 bits (of 3) from port A of cell LoadStoreQueue.$eq$B4Processor.v:14428$12523 ($eq).
Removed top 5 bits (of 7) from port A of cell OpcodeFormatChecker.$eq$B4Processor.v:16789$12843 ($eq).
Removed top 3 bits (of 7) from port A of cell OpcodeFormatChecker.$eq$B4Processor.v:16790$12845 ($eq).
Removed top 2 bits (of 7) from port A of cell OpcodeFormatChecker.$eq$B4Processor.v:16792$12849 ($eq).
Removed top 2 bits (of 7) from port A of cell OpcodeFormatChecker.$eq$B4Processor.v:16793$12851 ($eq).
Removed top 1 bits (of 7) from port A of cell OpcodeFormatChecker.$eq$B4Processor.v:16796$12857 ($eq).
Removed top 2 bits (of 7) from port A of cell OpcodeFormatChecker.$eq$B4Processor.v:16797$12859 ($eq).
Removed top 1 bits (of 7) from port A of cell OpcodeFormatChecker.$eq$B4Processor.v:16799$12863 ($eq).
Removed top 1 bits (of 7) from port A of cell OpcodeFormatChecker.$eq$B4Processor.v:16800$12865 ($eq).
Removed top 1 bits (of 7) from port A of cell OpcodeFormatChecker.$eq$B4Processor.v:16801$12867 ($eq).
Removed top 4 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9951$8290 ($eq).
Removed top 4 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9952$8292 ($eq).
Removed top 4 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9953$8294 ($eq).
Removed top 4 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9954$8296 ($eq).
Removed top 3 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9956$8299 ($eq).
Removed top 3 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9957$8301 ($eq).
Removed top 3 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9958$8303 ($eq).
Removed top 3 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9959$8305 ($eq).
Removed top 3 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9961$8308 ($eq).
Removed top 3 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9962$8310 ($eq).
Removed top 3 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9963$8312 ($eq).
Removed top 3 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9964$8314 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9966$8317 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9967$8319 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9968$8321 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9969$8323 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9971$8326 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9972$8328 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9973$8330 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9974$8332 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9976$8335 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9977$8337 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9978$8339 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9979$8341 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9981$8344 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9982$8346 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9983$8348 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9984$8350 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9986$8353 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9987$8355 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9988$8357 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9989$8359 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9991$8362 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9992$8364 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9993$8366 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9994$8368 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9996$8371 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9997$8373 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9998$8375 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:9999$8377 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10001$8380 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10002$8382 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10003$8384 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10004$8386 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10006$8389 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10007$8391 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10008$8393 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10009$8395 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10011$8398 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10012$8400 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10013$8402 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10014$8404 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10016$8407 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10017$8409 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10018$8411 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10019$8413 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10021$8416 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10022$8418 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10023$8420 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile.$eq$B4Processor.v:10024$8422 ($eq).
Removed top 4 bits (of 5) from port B of cell RegisterFile.$sub$B4Processor.v:10107$8570 ($sub).
Removed top 4 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10108$8571 ($eq).
Removed top 3 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10109$8573 ($eq).
Removed top 3 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10110$8575 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10111$8577 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10112$8579 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10113$8581 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10114$8583 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10115$8585 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10116$8587 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10117$8589 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10118$8591 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10119$8593 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10120$8595 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10121$8597 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10122$8599 ($eq).
Removed top 4 bits (of 5) from port B of cell RegisterFile.$sub$B4Processor.v:10139$8632 ($sub).
Removed top 4 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10140$8633 ($eq).
Removed top 3 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10141$8635 ($eq).
Removed top 3 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10142$8637 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10143$8639 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10144$8641 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10145$8643 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10146$8645 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10147$8647 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10148$8649 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10149$8651 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10150$8653 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10151$8655 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10152$8657 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10153$8659 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10154$8661 ($eq).
Removed top 4 bits (of 5) from port B of cell RegisterFile.$sub$B4Processor.v:10171$8694 ($sub).
Removed top 4 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10172$8695 ($eq).
Removed top 3 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10173$8697 ($eq).
Removed top 3 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10174$8699 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10175$8701 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10176$8703 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10177$8705 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10178$8707 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10179$8709 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10180$8711 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10181$8713 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10182$8715 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10183$8717 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10184$8719 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10185$8721 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10186$8723 ($eq).
Removed top 4 bits (of 5) from port B of cell RegisterFile.$sub$B4Processor.v:10203$8756 ($sub).
Removed top 4 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10204$8757 ($eq).
Removed top 3 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10205$8759 ($eq).
Removed top 3 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10206$8761 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10207$8763 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10208$8765 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10209$8767 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10210$8769 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10211$8771 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10212$8773 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10213$8775 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10214$8777 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10215$8779 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10216$8781 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10217$8783 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile.$eq$B4Processor.v:10218$8785 ($eq).
Removed top 4 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10775$8822 ($eq).
Removed top 4 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10776$8824 ($eq).
Removed top 4 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10777$8826 ($eq).
Removed top 4 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10778$8828 ($eq).
Removed top 3 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10780$8831 ($eq).
Removed top 3 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10781$8833 ($eq).
Removed top 3 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10782$8835 ($eq).
Removed top 3 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10783$8837 ($eq).
Removed top 3 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10785$8840 ($eq).
Removed top 3 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10786$8842 ($eq).
Removed top 3 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10787$8844 ($eq).
Removed top 3 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10788$8846 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10790$8849 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10791$8851 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10792$8853 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10793$8855 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10795$8858 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10796$8860 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10797$8862 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10798$8864 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10800$8867 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10801$8869 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10802$8871 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10803$8873 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10805$8876 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10806$8878 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10807$8880 ($eq).
Removed top 2 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10808$8882 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10810$8885 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10811$8887 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10812$8889 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10813$8891 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10815$8894 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10816$8896 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10817$8898 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10818$8900 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10820$8903 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10821$8905 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10822$8907 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10823$8909 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10825$8912 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10826$8914 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10827$8916 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10828$8918 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10830$8921 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10831$8923 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10832$8925 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10833$8927 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10835$8930 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10836$8932 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10837$8934 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10838$8936 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10840$8939 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10841$8941 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10842$8943 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10843$8945 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10845$8948 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10846$8950 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10847$8952 ($eq).
Removed top 1 bits (of 5) from port B of cell RegisterFile_1.$eq$B4Processor.v:10848$8954 ($eq).
Removed top 4 bits (of 5) from port B of cell RegisterFile_1.$sub$B4Processor.v:10931$9102 ($sub).
Removed top 4 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10932$9103 ($eq).
Removed top 3 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10933$9105 ($eq).
Removed top 3 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10934$9107 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10935$9109 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10936$9111 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10937$9113 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10938$9115 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10939$9117 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10940$9119 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10941$9121 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10942$9123 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10943$9125 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10944$9127 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10945$9129 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10946$9131 ($eq).
Removed top 4 bits (of 5) from port B of cell RegisterFile_1.$sub$B4Processor.v:10963$9164 ($sub).
Removed top 4 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10964$9165 ($eq).
Removed top 3 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10965$9167 ($eq).
Removed top 3 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10966$9169 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10967$9171 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10968$9173 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10969$9175 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10970$9177 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10971$9179 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10972$9181 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10973$9183 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10974$9185 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10975$9187 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10976$9189 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10977$9191 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10978$9193 ($eq).
Removed top 4 bits (of 5) from port B of cell RegisterFile_1.$sub$B4Processor.v:10995$9226 ($sub).
Removed top 4 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10996$9227 ($eq).
Removed top 3 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10997$9229 ($eq).
Removed top 3 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10998$9231 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:10999$9233 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11000$9235 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11001$9237 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11002$9239 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11003$9241 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11004$9243 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11005$9245 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11006$9247 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11007$9249 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11008$9251 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11009$9253 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11010$9255 ($eq).
Removed top 4 bits (of 5) from port B of cell RegisterFile_1.$sub$B4Processor.v:11027$9288 ($sub).
Removed top 4 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11028$9289 ($eq).
Removed top 3 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11029$9291 ($eq).
Removed top 3 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11030$9293 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11031$9295 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11032$9297 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11033$9299 ($eq).
Removed top 2 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11034$9301 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11035$9303 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11036$9305 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11037$9307 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11038$9309 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11039$9311 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11040$9313 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11041$9315 ($eq).
Removed top 1 bits (of 5) from port A of cell RegisterFile_1.$eq$B4Processor.v:11042$9317 ($eq).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3148$2038 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3149$2040 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3150$2042 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3151$2044 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3152$2046 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3153$2048 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3154$2050 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3155$2052 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3156$2054 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3157$2056 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3158$2058 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3159$2060 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3160$2062 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3161$2064 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3162$2066 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3260$2230 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3261$2232 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3262$2234 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3263$2236 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3264$2238 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3265$2240 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3266$2242 ($eq).
Removed top 3 bits (of 4) from port B of cell ReorderBuffer.$add$B4Processor.v:3339$2324 ($add).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3403$2451 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3404$2453 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3405$2455 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3406$2457 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3407$2459 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3408$2461 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3409$2463 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3410$2465 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3411$2467 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3412$2469 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3413$2471 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3414$2473 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3415$2475 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3416$2477 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3417$2479 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3515$2643 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3516$2645 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3517$2647 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3518$2649 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3519$2651 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3520$2653 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3521$2655 ($eq).
Removed top 2 bits (of 4) from port B of cell ReorderBuffer.$add$B4Processor.v:3594$2737 ($add).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3658$2864 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3659$2866 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3660$2868 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3661$2870 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3662$2872 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3663$2874 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3664$2876 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3665$2878 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3666$2880 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3667$2882 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3668$2884 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3669$2886 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3670$2888 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3671$2890 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3672$2892 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3770$3056 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3771$3058 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3772$3060 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3773$3062 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3774$3064 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3775$3066 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:3776$3068 ($eq).
Removed top 2 bits (of 4) from port B of cell ReorderBuffer.$add$B4Processor.v:3849$3150 ($add).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3913$3277 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3914$3279 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3915$3281 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3916$3283 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3917$3285 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3918$3287 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3919$3289 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3920$3291 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3921$3293 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3922$3295 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3923$3297 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3924$3299 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3925$3301 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3926$3303 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:3927$3305 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4025$3469 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4026$3471 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4027$3473 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4028$3475 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4029$3477 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4030$3479 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4031$3481 ($eq).
Removed top 1 bits (of 4) from port B of cell ReorderBuffer.$add$B4Processor.v:4113$3571 ($add).
Removed top 3 bits (of 4) from port B of cell ReorderBuffer.$add$B4Processor.v:4114$3572 ($add).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4165$3672 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4166$3674 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4167$3676 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4168$3678 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4169$3680 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4170$3682 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4171$3684 ($eq).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4275$3892 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4276$3894 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4277$3896 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4278$3898 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4279$3900 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4280$3902 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4281$3904 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4282$3906 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4283$3908 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4284$3910 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4285$3912 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4286$3914 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4287$3916 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4288$3918 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4289$3920 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4322$3984 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4323$3986 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4324$3988 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4325$3990 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4326$3992 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4327$3994 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4328$3996 ($eq).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4368$4076 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4369$4078 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4370$4080 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4371$4082 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4372$4084 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4373$4086 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4374$4088 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4375$4090 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4376$4092 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4377$4094 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4378$4096 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4379$4098 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4380$4100 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4381$4102 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4382$4104 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4415$4168 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4416$4170 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4417$4172 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4418$4174 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4419$4176 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4420$4178 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4421$4180 ($eq).
Removed top 3 bits (of 4) from port B of cell ReorderBuffer.$add$B4Processor.v:4431$4199 ($add).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4592$4519 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4593$4521 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4594$4523 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4595$4525 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4596$4527 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4597$4529 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4598$4531 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4599$4533 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4600$4535 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4601$4537 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4602$4539 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4603$4541 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4604$4543 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4605$4545 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4606$4547 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4639$4611 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4640$4613 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4641$4615 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4642$4617 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4643$4619 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4644$4621 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4645$4623 ($eq).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4685$4703 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4686$4705 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4687$4707 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4688$4709 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4689$4711 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4690$4713 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4691$4715 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4692$4717 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4693$4719 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4694$4721 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4695$4723 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4696$4725 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4697$4727 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4698$4729 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:4699$4731 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4732$4795 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4733$4797 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4734$4799 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4735$4801 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4736$4803 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4737$4805 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4738$4807 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4896$4937 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4907$4939 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4942$4944 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4953$4946 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4988$4951 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:4999$4953 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:5034$4958 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:5045$4960 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:5080$4965 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:5091$4967 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:5126$4972 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:5137$4974 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:5172$4979 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer.$eq$B4Processor.v:5183$4981 ($eq).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5578$5040 ($eq).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5584$5041 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5592$5042 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5598$5043 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5606$5044 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5612$5045 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5620$5046 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5626$5047 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5634$5048 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5640$5049 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5648$5050 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5654$5051 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5662$5052 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5668$5053 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5676$5054 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5682$5055 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5690$5056 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5696$5057 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5704$5058 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5710$5059 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5718$5060 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5724$5061 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5732$5062 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5738$5063 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5746$5064 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5752$5065 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5760$5066 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5766$5067 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5774$5068 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer.$eq$B4Processor.v:5780$5069 ($eq).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6699$5227 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6700$5229 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6701$5231 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6702$5233 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6703$5235 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6704$5237 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6705$5239 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6706$5241 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6707$5243 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6708$5245 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6709$5247 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6710$5249 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6711$5251 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6712$5253 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6713$5255 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6811$5419 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6812$5421 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6813$5423 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6814$5425 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6815$5427 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6816$5429 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6817$5431 ($eq).
Removed top 3 bits (of 4) from port B of cell ReorderBuffer_1.$add$B4Processor.v:6890$5513 ($add).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6954$5640 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6955$5642 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6956$5644 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6957$5646 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6958$5648 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6959$5650 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6960$5652 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6961$5654 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6962$5656 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6963$5658 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6964$5660 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6965$5662 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6966$5664 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6967$5666 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:6968$5668 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7066$5832 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7067$5834 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7068$5836 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7069$5838 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7070$5840 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7071$5842 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7072$5844 ($eq).
Removed top 2 bits (of 4) from port B of cell ReorderBuffer_1.$add$B4Processor.v:7145$5926 ($add).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7209$6053 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7210$6055 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7211$6057 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7212$6059 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7213$6061 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7214$6063 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7215$6065 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7216$6067 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7217$6069 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7218$6071 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7219$6073 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7220$6075 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7221$6077 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7222$6079 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7223$6081 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7321$6245 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7322$6247 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7323$6249 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7324$6251 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7325$6253 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7326$6255 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7327$6257 ($eq).
Removed top 2 bits (of 4) from port B of cell ReorderBuffer_1.$add$B4Processor.v:7400$6339 ($add).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7464$6466 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7465$6468 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7466$6470 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7467$6472 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7468$6474 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7469$6476 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7470$6478 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7471$6480 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7472$6482 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7473$6484 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7474$6486 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7475$6488 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7476$6490 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7477$6492 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7478$6494 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7576$6658 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7577$6660 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7578$6662 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7579$6664 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7580$6666 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7581$6668 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7582$6670 ($eq).
Removed top 1 bits (of 4) from port B of cell ReorderBuffer_1.$add$B4Processor.v:7664$6760 ($add).
Removed top 3 bits (of 4) from port B of cell ReorderBuffer_1.$add$B4Processor.v:7665$6761 ($add).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7716$6861 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7717$6863 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7718$6865 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7719$6867 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7720$6869 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7721$6871 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7722$6873 ($eq).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7826$7081 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7827$7083 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7828$7085 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7829$7087 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7830$7089 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7831$7091 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7832$7093 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7833$7095 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7834$7097 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7835$7099 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7836$7101 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7837$7103 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7838$7105 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7839$7107 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7840$7109 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7873$7173 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7874$7175 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7875$7177 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7876$7179 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7877$7181 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7878$7183 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7879$7185 ($eq).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7919$7265 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7920$7267 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7921$7269 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7922$7271 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7923$7273 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7924$7275 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7925$7277 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7926$7279 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7927$7281 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7928$7283 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7929$7285 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7930$7287 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7931$7289 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7932$7291 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7933$7293 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7966$7357 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7967$7359 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7968$7361 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7969$7363 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7970$7365 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7971$7367 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:7972$7369 ($eq).
Removed top 3 bits (of 4) from port B of cell ReorderBuffer_1.$add$B4Processor.v:7982$7388 ($add).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8143$7708 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8144$7710 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8145$7712 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8146$7714 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8147$7716 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8148$7718 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8149$7720 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8150$7722 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8151$7724 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8152$7726 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8153$7728 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8154$7730 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8155$7732 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8156$7734 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8157$7736 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8190$7800 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8191$7802 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8192$7804 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8193$7806 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8194$7808 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8195$7810 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8196$7812 ($eq).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8236$7892 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8237$7894 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8238$7896 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8239$7898 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8240$7900 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8241$7902 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8242$7904 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8243$7906 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8244$7908 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8245$7910 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8246$7912 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8247$7914 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8248$7916 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8249$7918 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8250$7920 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8283$7984 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8284$7986 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8285$7988 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8286$7990 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8287$7992 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8288$7994 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8289$7996 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8447$8125 ($eq).
Removed top 3 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8458$8127 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8493$8132 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8504$8134 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8539$8139 ($eq).
Removed top 2 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8550$8141 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8585$8146 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8596$8148 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8631$8153 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8642$8155 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8677$8160 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8688$8162 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8723$8167 ($eq).
Removed top 1 bits (of 4) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:8734$8169 ($eq).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9129$8228 ($eq).
Removed top 4 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9135$8229 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9143$8230 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9149$8231 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9157$8232 ($eq).
Removed top 3 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9163$8233 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9171$8234 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9177$8235 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9185$8236 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9191$8237 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9199$8238 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9205$8239 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9213$8240 ($eq).
Removed top 2 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9219$8241 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9227$8242 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9233$8243 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9241$8244 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9247$8245 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9255$8246 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9261$8247 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9269$8248 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9275$8249 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9283$8250 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9289$8251 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9297$8252 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9303$8253 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9311$8254 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9317$8255 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9325$8256 ($eq).
Removed top 1 bits (of 5) from port A of cell ReorderBuffer_1.$eq$B4Processor.v:9331$8257 ($eq).
Removed top 2 bits (of 3) from port A of cell ReservationStation.$eq$B4Processor.v:18827$13816 ($eq).
Removed top 1 bits (of 3) from port A of cell ReservationStation.$eq$B4Processor.v:18828$13818 ($eq).
Removed top 1 bits (of 3) from port A of cell ReservationStation.$eq$B4Processor.v:18829$13820 ($eq).
Removed top 2 bits (of 3) from port A of cell ReservationStation.$eq$B4Processor.v:18956$14071 ($eq).
Removed top 1 bits (of 3) from port A of cell ReservationStation.$eq$B4Processor.v:18957$14073 ($eq).
Removed top 1 bits (of 3) from port A of cell ReservationStation.$eq$B4Processor.v:18958$14075 ($eq).
Removed top 2 bits (of 3) from port B of cell ReservationStation.$add$B4Processor.v:19204$14446 ($add).
Removed top 2 bits (of 3) from port A of cell ReservationStation.$eq$B4Processor.v:19327$14689 ($eq).
Removed top 1 bits (of 3) from port A of cell ReservationStation.$eq$B4Processor.v:19328$14691 ($eq).
Removed top 1 bits (of 3) from port A of cell ReservationStation.$eq$B4Processor.v:19329$14693 ($eq).
Removed top 2 bits (of 3) from port B of cell ReservationStation.$add$B4Processor.v:19575$15064 ($add).
Removed top 2 bits (of 3) from port A of cell ReservationStation.$eq$B4Processor.v:19698$15307 ($eq).
Removed top 1 bits (of 3) from port A of cell ReservationStation.$eq$B4Processor.v:19699$15309 ($eq).
Removed top 1 bits (of 3) from port A of cell ReservationStation.$eq$B4Processor.v:19700$15311 ($eq).
Removed top 2 bits (of 3) from port B of cell ReservationStation.$add$B4Processor.v:19946$15682 ($add).
Removed top 2 bits (of 3) from port B of cell ReservationStation.$add$B4Processor.v:20061$15876 ($add).
Removed top 2 bits (of 3) from port A of cell ReservationStation.$eq$B4Processor.v:20539$16052 ($eq).
Removed top 1 bits (of 3) from port A of cell ReservationStation.$eq$B4Processor.v:20752$16085 ($eq).
Removed top 1 bits (of 3) from port A of cell ReservationStation.$eq$B4Processor.v:20965$16118 ($eq).
Removed top 2 bits (of 3) from port B of cell ValueSelector2.$eq$B4Processor.v:16866$12893 ($eq).
Removed top 1 bits (of 3) from port B of cell ValueSelector2.$eq$B4Processor.v:16866$12896 ($eq).

5.14. Executing PEEPOPT pass (run peephole optimizers).

5.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..
Removed 0 unused cells and 21 unused wires.
<suppressed ~9 debug messages>

5.16. Executing PMUX2SHIFTX pass.

5.17. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `\buffer'[0] in module `\FIFO': no output FF found.
Checking read port address `\buffer'[0] in module `\FIFO': merged address FF to cell.
Checking read port `\buffer'[0] in module `\FIFO_1': no output FF found.
Checking read port address `\buffer'[0] in module `\FIFO_1': merged address FF to cell.
Checking read port `\buffer'[0] in module `\FIFO_3': no output FF found.
Checking read port address `\buffer'[0] in module `\FIFO_3': merged address FF to cell.
Checking read port `\buffer'[0] in module `\FIFO_4': no output FF found.
Checking read port address `\buffer'[0] in module `\FIFO_4': merged address FF to cell.
Checking read port `\buffer'[0] in module `\FIFO_5': no output FF found.
Checking read port address `\buffer'[0] in module `\FIFO_5': merged address FF to cell.

5.18. Executing TECHMAP pass (map to technology primitives).

5.18.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/mul2dsp.v
Parsing Verilog input from `/usr/bin/../share/yosys/mul2dsp.v' to AST representation.
Generating RTLIL representation for module `\_80_mul'.
Generating RTLIL representation for module `\_90_soft_mul'.
Successfully finished Verilog frontend.

5.18.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/xilinx/xc7_dsp_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/xilinx/xc7_dsp_map.v' to AST representation.
Generating RTLIL representation for module `\$__MUL25X18'.
Successfully finished Verilog frontend.

5.18.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

5.19. Executing OPT_EXPR pass (perform const folding).

5.20. Executing WREDUCE pass (reducing word size of cells).

5.21. Executing XILINX_DSP pass (pack resources into DSPs).

5.22. Executing TECHMAP pass (map to technology primitives).

5.22.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

5.22.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lcu.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lcu.v' to AST representation.
Generating RTLIL representation for module `\_80_lcu_cmp_'.
Generating RTLIL representation for module `\$__CMP2LCU'.
Successfully finished Verilog frontend.

5.22.3. Continuing TECHMAP pass.
Using template $paramod$ca0070b39dd74f3352eccc3e47759775f8b8e448\_80_lcu_cmp_ for cells of type $gt.
Using template $paramod$8c7c54bbe32ed2643cd29aec655ff24eaaaf4e19\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$0a70c3e230f673bc6f4765aa681fad0a68995ac6\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$fc836e5c89ffbc9e972ea8ffa4e2d75cb25aa28f\_80_lcu_cmp_ for cells of type $lt.
Using template $paramod$4fabbe56c3457d742b21059bbd12538162c287f0\_80_lcu_cmp_ for cells of type $lt.
Using template $paramod$ebabbf2d0bc887e97ca5a557d0e7fe1d261298d1\_80_lcu_cmp_ for cells of type $ge.
Using template $paramod$8e7afc8256c1ccac2d5297af820667637cc22d57\_80_lcu_cmp_ for cells of type $ge.
Using template $paramod$a87f72ce8d7374550ef5de2a129fcff1f0690cf2\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$bacb031c4829eb15be26590250ed31b1d2d721ae\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$5a1b65f21cd9035102e49d44fe2d040170e74f72\_80_lcu_cmp_ for cells of type $gt.
Using template $paramod$1f4e0230105fc42c9c1b4331b7f72566b0c7396a\_80_lcu_cmp_ for cells of type $gt.
Using template $paramod$d556b71fc4229097b946c08a16d3ea21e3675363\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$e8c2b036cfdaba44e096f1d7170b19b225743026\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$c580aa724c0e8e273eadeb3893733ae43fd7e5de\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$46872bb2e001a64d524967d069e0a9925110a1ca\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$108400a59f3384205d558ae16fdc23647d47d0ed\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$53ed454437fe2a79944af37639507eeb5a3d2879\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$33cc2d7762c6bc88fe3a0c6881c08cf17f6d2a2a\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$f0e635c1a6c1fcd570c518354d83826e851ad760\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$f71cc975ebf55a03bc7cdf680e83de87cc0001f9\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$fcd90bc9064392242b16a6cde5f129eb6fdf1c63\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$f85b62e86721d957e098cecb4ad4160e267b0bab\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$ecef8c821b354286d5ed924c769908a8bfd652b6\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$0f359ca739c0631ecfe2c0645ea36e90734f97b2\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$6c42d6375cf9851d7461d47a48a46503258464d2\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$8048d734f685b8047e34c6a2ab0b9f136aba2070\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$5f644b6e6277111b1991e06a3180a63dd6f7e93e\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$acb7e263b2ea3a2f5dbbd4d6c7bf8e9cee0f4054\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$74b02185fae136a8a41eaccefc1dbdf1e66a072d\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$bbc254d363cfbd907cb1e350bd641214efd627a9\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$ab6df1c4c0b2b64d1f1b5470c9ea6a63122576b5\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$011266e857da425065976864d05cc704c54b3a05\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$9c563ab6a788ecaff3a874ea1180a6f6798e70ae\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$b2ad8ef17bcaaf15fbad6b79c5431284fb2a11db\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$eb5cc35874536271f5510dd46e38199d89814643\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$ba98ab935e4004bf635a6000f561fec718802fee\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$72a611b2c24534349b4fea68954d8863d3783f15\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$81756e292933cff96b980ae4d6a5246151a5f7fc\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$c628bda6f08bcbcf7a6bfecb96682b14d3d2fe60\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$ef207de4019721ed44e63eca07af0a918f50bf9c\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$29b9f89b3513698eff271adc029592bf5e5ba2e8\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$a2f08c8d690dc6df1b13aa3a2e1f78c92286c5d6\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$5c06a27abf5002837b490063fd3647792655d7b4\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$1171e68a5d88dc39bc669dcc141dcc1683ac6690\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$ebbbb57e55b0a569683dbc9e09a8d0f03f6b9512\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$358bb3b730dbd04fb2288f8b6bf927d560de8675\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$5ff23c6a17e676749a6981b161c604dc1576a563\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$4fb74fbce278aa44efddac6c22b472aff37501ef\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$ad988c9c78354160b8cb94b32e4b8ce7107ba563\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$e262cb82738776bc2b4bd22eac59dd3b36bdb14f\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$b58453c5992344d4fb495476f286d8de67e39c8e\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$83baf07586ea637bd1b7cf03eb83c520a4a595b5\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$e20aa57c0996bd7fe6eaf2928d426d5a895a685c\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$8bdd750b1e01e952d865bef5e0ec8cab00b9958e\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$cbb6478ded54d4a6de33a5c8982ea72377155bf9\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$a73facba8a5dbd3acf9a91eb22a3d01bfd788399\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$68fc42a5c39f9fcc75996f4c8f94a14510711a08\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$6ed516adfb4a99901e2ea8fc77399e97016e33f7\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$42dc7866955d9dfa8bf6704c28e81486ac0a6013\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$d45b85992a281647e987d815354e6171e073cc66\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$6be2f77eae9175e6534c9dbf89c4186e582b6092\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$c09494d77078b422f57518f92eb4fa1894ec5de5\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$5632b7022c419f473cbe537aab2d11756e498f06\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$6161b5a56d7853c6367a4f8373a7428e4b0b3825\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$a7ee5d6170e8ab4d557e2e0f3f2eee0756bd788a\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$2a61378ea57e8927906074e24a5211ef2e60c94a\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$8f568bdc8f5cc476a2ec0eb732c81edd5125f79f\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$7e06717c2fe6b6228a734407dc20250436c96d33\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$15ef03f4daabff6a66be4a0905b377da58015a2c\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$e0f287dcc2bb6e096e313fa4d3e7053b508c302f\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$a1b27fac5161b439a4e630df25db6527f6d5e108\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$26d79e45c4e99fae51c530d1b6b88ee2c967e1f3\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$3823c12b06ea48dc2ddbea0f6765c46fde54f2ef\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$87c578bcf2507754c830d4e4d70c1c54cd4ac312\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$a76e2ca12248916f3d0cf3d29eb31bd7b338d857\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$d8a40f2546474469bee6bd31e1d49715776e0959\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$56f735701842ba2c4171f5d56c847e5734832a52\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$b645c5a926d6396aaff3b72de2e534d301ca7d79\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$d4a5b5ec6af0f0b656bc3345398948650afefec9\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$79622ea5e8fe73a61979593f94ae2751bff4764c\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$08236afdb1885d0fec28d462b3f4d658a33c1c76\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$30a8c19e060c6fd583e1cc5cf18c622e42a502c7\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$4225fef3a14251934aefd00684ec2041d1ea19a9\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$422614af19021eca0376b852e9f74a33c2a13336\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$b13569e0ec382dfde3bdcdcf431a3bc0d1be370f\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$745fbc4d7b83298967dec0218c3a5bea2fdb7424\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$3fd7460ea34f490ce0894d362fcc7a1707e0741a\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$eb567d94752ee8d658f42e1b198eba8a9406b3d8\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$aa3090d2c6243434cadd45c894afe0f6b47c22e7\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$d2e40deb248ab0641f4d3fb8a2c78a2f2e1a1fc0\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$2fbd84a65d109cf5aa37d19fa3f1531436d7dfe1\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$46fddccd0de311b444f3a8d81deca329626729fa\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$10ab166c84723eb7940fc6b92cf144ce4797a31d\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$91dd02d0aba181386b024796d25625ce359ae76a\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$fddda040db7252608ea7749c4ee8f5356a28f927\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$accaa4a33736b7896130e1e6358c9905eb3b13d2\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$ac310a38eea41ce3a8c8e9aa207ff4da1eb4b1cf\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$b0edaf43c675e75b44a963edc7c6e638a9bb5284\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$c4a01c1d7696574cec6c8fddc73c083bb9bb47c3\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$83d2ea41224b0f12298f19b4d7e054d14e031e98\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$cf37656377c75febaa47eec67904fed3350eb6c2\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$5b68b894c0afbab8f1e64889d1abeb69fd89bb0b\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$c9f36fafe97b026d71f1e733a5d7fb64c6b0835b\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$253f9fca6c00233dbc8385366a30f0864dae2fb2\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$609669c6fae290e9332dda4aec3361c0e3b68e2a\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$00f3c33c51370f9408a3c47557729ce8ba6e4c31\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$483b5581ad7e6fc350b1842201145c2dfe98b21b\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$bc794412d8c01c2ac34d9cd28121df55da225135\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$b87a25bb37c7930cf0a7dc53cd370d412049e4b3\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$f199aff9bd79b9a354e1095f40056a1e6b9db86d\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$b2607933731fc9dbfd5b2bd1a48a3357da95b3f0\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$53e6ab1664cc6c236f128c375ab276dead394e35\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$92f791d22a121a356e9f02f415ecb508dace25b2\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$14d09200519b80782ddf9ac857654fc424986150\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$e5996ced8e9a562c64438695ecb24b4a9555e826\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$94091d225912e461160bc96c7dfe68d381c2406b\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$9d2400416bf915d65e45e71e250b69a95954a6eb\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$afb11f4d8e2f55ab3477cb0396a53931f11286a6\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$178f3df7d4167575bd01f9370a4d29daaa531799\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$1c6584be8ec267677b840412fc423ad45894272e\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$6698737eb578cb27715027018fc323a4e62c13a2\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$b6714bf869b453cba38d0f2fb88e818a5e3f7235\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$9d0ada731f121ef1586594f4ffbf0b688a49f3a5\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$2b4543cb71d2ce09d81fb9563af8f32da036b29f\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$768210c8f69b84076fa77240883146d5c9e0754e\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$cf1a48102491c9003a8b1cd2ecacabd6f3dd1b6e\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$a103530ec8d7f0fcbc8fafdd1200cedec0983900\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$f1f10dfe68df8f2c4874de8c3ec19b658e400589\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$668ab42b452d794c84747d9a08d3efaf1031520e\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$2cdb7558a8e197f57a4eefa078240b585c2a3925\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$8cf1b9b6c45c48822dbf7ba10046965332309fec\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$50037bd48fa061c567951655ce24e4a0d05a3e89\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$5904a206a23b5be1fe5b9105eb677b68ba31d3d0\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$0ea87b8020dce3685cbd8f514f5294d524fec4eb\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$460eace5a2a1bfd459ea37a82bb7f590fe2670c2\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$a7abdf1574e029ada71df70b63185b54b62afa43\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$e04d794ffecbc44b1e886bcd97c1211b70011e3f\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$466bd03cfaa5eb3f12dc0a4524d2cbd67dcb6ddc\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$bca5c4488abfc4c95ef2b9f505c5d0119ab2d647\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$4f3b2a8b718f2ef5e45f9d92cb42e42e6430f64a\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$ef5e6f199e8c7d9efe777ae87920b6af9ae974d9\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$e4862cefb47be62fc10d2e3149526dba113b8458\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$2401d5abe0159a9e72fada16832b30d4378d736c\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$b2f4df96501a736939907408c7b28e478700c353\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$45a70a860fafa5ebc0a0eb0635373b73a255a8e7\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$36f5bd7a985bc91c80ab8113e18d2e9752db780f\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$7404f232baaa9550e30849f09650fcc8cd19f01e\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$d3908f611848603485c9247f0fae853b1d03bb08\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$48134fa0e2e180f474e605dceb6c15c9cca87e9b\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$d00f30da199bda4cbefce7847b7f0131de705b32\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$3f1d64e783f018200a23e35995b624b4de6fbdbe\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$c02ca9279a990b8913e440c175cd15d98d7df135\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$20718ff75272dbe2a3869ebc6073726ea00167d6\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$dc40dd6adb2ba18e600ba14c5b80d791b3582467\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$74e54f1684edd700245c9b5c26fda90227986a09\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$47766cf0533cd7c3e5b58fe3b81a9b6eca066a0e\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$66b5d2037d4a14d0114616facdce3146dca8c582\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$29865ae98a23c4dfab58852fc7cd142a479e0292\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$f133079d0f060f9b5a0a2970da19d787d2368228\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$07ef82b631546f85c20d903706aabf717e93bcf5\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$36d694fe0cb4a466d36b9e3ed438e940d474b930\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$122b25cd9702a335d4a642ccfb73e8e5c6a137a9\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$644781c3556536300cad26934a5bb51dcc0577c1\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$1e88c52ffba8570c5fa057641eb11910ff837915\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$ab3b6de66038df8be6563487071fbf331ec28daf\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$023b657b005bd8b74cb3d5aadaca98efef48c7e6\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$d7821c4db17e518eea87fb74f06f1129d56e78ed\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$f5f9ec813914559c0dd9bc972d7738569f285add\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$8169025d084719daeb747eda20777ea73a16eca8\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$fa72487901248c4f11ec14e8ea02964ccc0e6c19\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$13fe02b3e6d7ffc1827af4e59625111683ac43f5\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$8a35558d2fc9dba8d14f073fdebde36f40d8427b\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$e783a591dbf3d784659cda13a90ecf84e4b16219\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$6f18be498ea13989d63842db7b6a253a5608e59c\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$f10d78a6fe12f3d6b0cca539d9bbd57917a0662d\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$362660739077a832d502779f0df59a8f55632f69\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$2379ba7b01cfb67b2d0b8c44677bce35301c6c1c\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$0fc1b0463a2d8ed15c1f4bf61b7cce1d79764b16\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$8e1ec7c91344f6c73b619e45f5ed544fe0016e6f\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$ac214c4af3997a8571e07b776b2cefe24ea9291f\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$93bc8156e3b10a3f4d454561f5266ccfbef40063\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$23659ba0ee2019e07a8e7981962ace311098ccbb\$__CMP2LCU for cells of type $__CMP2LCU.
Using template $paramod$b5a97b9fd8452e290089048b842743ff9846b71f\$__CMP2LCU for cells of type $__CMP2LCU.
No more expansions possible.
<suppressed ~4913 debug messages>

5.23. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module Arbiter:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module B4Processor:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module BranchOutputCollector:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module CheckBranch:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module DataMemoryBuffer:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Decoder:
  creating $macc model for $add$B4Processor.v:17148$12984 ($add).
  creating $alu model for $macc $add$B4Processor.v:17148$12984.
  creating $alu cell for $add$B4Processor.v:17148$12984: $auto$alumacc.cc:485:replace_alu$28031
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Decoder_1:
  creating $macc model for $add$B4Processor.v:17497$13061 ($add).
  creating $alu model for $macc $add$B4Processor.v:17497$13061.
  creating $alu cell for $add$B4Processor.v:17497$13061: $auto$alumacc.cc:485:replace_alu$28034
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Decoder_2:
  creating $macc model for $add$B4Processor.v:17819$13144 ($add).
  creating $alu model for $macc $add$B4Processor.v:17819$13144.
  creating $alu cell for $add$B4Processor.v:17819$13144: $auto$alumacc.cc:485:replace_alu$28037
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Decoder_3:
  creating $macc model for $add$B4Processor.v:18144$13212 ($add).
  creating $alu model for $macc $add$B4Processor.v:18144$13212.
  creating $alu cell for $add$B4Processor.v:18144$13212: $auto$alumacc.cc:485:replace_alu$28040
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Executor:
  creating $macc model for $add$B4Processor.v:22217$16335 ($add).
  creating $macc model for $add$B4Processor.v:22221$16337 ($add).
  creating $macc model for $add$B4Processor.v:22225$16342 ($add).
  creating $macc model for $add$B4Processor.v:22267$16375 ($add).
  creating $macc model for $add$B4Processor.v:22330$16413 ($add).
  creating $macc model for $add$B4Processor.v:22216$16334 ($add).
  creating $macc model for $sub$B4Processor.v:22227$16344 ($sub).
  creating $alu model for $macc $sub$B4Processor.v:22227$16344.
  creating $alu model for $macc $add$B4Processor.v:22216$16334.
  creating $alu model for $macc $add$B4Processor.v:22330$16413.
  creating $alu model for $macc $add$B4Processor.v:22267$16375.
  creating $alu model for $macc $add$B4Processor.v:22225$16342.
  creating $alu model for $macc $add$B4Processor.v:22221$16337.
  creating $alu model for $macc $add$B4Processor.v:22217$16335.
  creating $alu cell for $add$B4Processor.v:22217$16335: $auto$alumacc.cc:485:replace_alu$28043
  creating $alu cell for $add$B4Processor.v:22221$16337: $auto$alumacc.cc:485:replace_alu$28046
  creating $alu cell for $add$B4Processor.v:22225$16342: $auto$alumacc.cc:485:replace_alu$28049
  creating $alu cell for $add$B4Processor.v:22267$16375: $auto$alumacc.cc:485:replace_alu$28052
  creating $alu cell for $add$B4Processor.v:22330$16413: $auto$alumacc.cc:485:replace_alu$28055
  creating $alu cell for $add$B4Processor.v:22216$16334: $auto$alumacc.cc:485:replace_alu$28058
  creating $alu cell for $sub$B4Processor.v:22227$16344: $auto$alumacc.cc:485:replace_alu$28061
  created 7 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module ExternalMemoryInterface:
  creating $macc model for $add$B4Processor.v:23012$16517 ($add).
  creating $alu model for $macc $add$B4Processor.v:23012$16517.
  creating $alu cell for $add$B4Processor.v:23012$16517: $auto$alumacc.cc:485:replace_alu$28064
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module FIFO:
  creating $macc model for $add$B4Processor.v:15774$12677 ($add).
  creating $macc model for $add$B4Processor.v:15779$12680 ($add).
  creating $alu model for $macc $add$B4Processor.v:15779$12680.
  creating $alu model for $macc $add$B4Processor.v:15774$12677.
  creating $alu cell for $add$B4Processor.v:15774$12677: $auto$alumacc.cc:485:replace_alu$28067
  creating $alu cell for $add$B4Processor.v:15779$12680: $auto$alumacc.cc:485:replace_alu$28070
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module FIFO_1:
  creating $macc model for $add$B4Processor.v:16243$12789 ($add).
  creating $macc model for $add$B4Processor.v:16248$12792 ($add).
  creating $alu model for $macc $add$B4Processor.v:16248$12792.
  creating $alu model for $macc $add$B4Processor.v:16243$12789.
  creating $alu cell for $add$B4Processor.v:16243$12789: $auto$alumacc.cc:485:replace_alu$28073
  creating $alu cell for $add$B4Processor.v:16248$12792: $auto$alumacc.cc:485:replace_alu$28076
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module FIFO_3:
  creating $macc model for $add$B4Processor.v:16641$12824 ($add).
  creating $macc model for $add$B4Processor.v:16643$12826 ($add).
  creating $alu model for $macc $add$B4Processor.v:16643$12826.
  creating $alu model for $macc $add$B4Processor.v:16641$12824.
  creating $alu cell for $add$B4Processor.v:16641$12824: $auto$alumacc.cc:485:replace_alu$28079
  creating $alu cell for $add$B4Processor.v:16643$12826: $auto$alumacc.cc:485:replace_alu$28082
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module FIFO_4:
  creating $macc model for $add$B4Processor.v:22432$16444 ($add).
  creating $macc model for $add$B4Processor.v:22437$16447 ($add).
  creating $alu model for $macc $add$B4Processor.v:22437$16447.
  creating $alu model for $macc $add$B4Processor.v:22432$16444.
  creating $alu cell for $add$B4Processor.v:22432$16444: $auto$alumacc.cc:485:replace_alu$28085
  creating $alu cell for $add$B4Processor.v:22437$16447: $auto$alumacc.cc:485:replace_alu$28088
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module FIFO_5:
  creating $macc model for $add$B4Processor.v:22693$16488 ($add).
  creating $macc model for $add$B4Processor.v:22698$16491 ($add).
  creating $alu model for $macc $add$B4Processor.v:22698$16491.
  creating $alu model for $macc $add$B4Processor.v:22693$16488.
  creating $alu cell for $add$B4Processor.v:22693$16488: $auto$alumacc.cc:485:replace_alu$28091
  creating $alu cell for $add$B4Processor.v:22698$16491: $auto$alumacc.cc:485:replace_alu$28094
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module FIFO_6:
  creating $macc model for $add$B4Processor.v:22810$16507 ($add).
  creating $macc model for $add$B4Processor.v:22811$16508 ($add).
  creating $alu model for $macc $add$B4Processor.v:22811$16508.
  creating $alu model for $macc $add$B4Processor.v:22810$16507.
  creating $alu cell for $add$B4Processor.v:22810$16507: $auto$alumacc.cc:485:replace_alu$28097
  creating $alu cell for $add$B4Processor.v:22811$16508: $auto$alumacc.cc:485:replace_alu$28100
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Fetch:
  creating $macc model for $add$B4Processor.v:2083$1653 ($add).
  creating $macc model for $add$B4Processor.v:2091$1668 ($add).
  creating $macc model for $add$B4Processor.v:2111$1676 ($add).
  creating $alu model for $macc $add$B4Processor.v:2111$1676.
  creating $alu model for $macc $add$B4Processor.v:2091$1668.
  creating $alu model for $macc $add$B4Processor.v:2083$1653.
  creating $alu cell for $add$B4Processor.v:2083$1653: $auto$alumacc.cc:485:replace_alu$28103
  creating $alu cell for $add$B4Processor.v:2091$1668: $auto$alumacc.cc:485:replace_alu$28106
  creating $alu cell for $add$B4Processor.v:2111$1676: $auto$alumacc.cc:485:replace_alu$28109
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module FetchBuffer:
  creating $macc model for $add$B4Processor.v:2439$1770 ($add).
  creating $macc model for $add$B4Processor.v:2475$1822 ($add).
  creating $macc model for $add$B4Processor.v:2494$1855 ($add).
  creating $macc model for $add$B4Processor.v:2512$1887 ($add).
  creating $alu model for $macc $add$B4Processor.v:2512$1887.
  creating $alu model for $macc $add$B4Processor.v:2494$1855.
  creating $alu model for $macc $add$B4Processor.v:2475$1822.
  creating $alu model for $macc $add$B4Processor.v:2439$1770.
  creating $alu cell for $add$B4Processor.v:2439$1770: $auto$alumacc.cc:485:replace_alu$28112
  creating $alu cell for $add$B4Processor.v:2475$1822: $auto$alumacc.cc:485:replace_alu$28115
  creating $alu cell for $add$B4Processor.v:2494$1855: $auto$alumacc.cc:485:replace_alu$28118
  creating $alu cell for $add$B4Processor.v:2512$1887: $auto$alumacc.cc:485:replace_alu$28121
  created 4 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module Fetch_1:
  creating $macc model for $add$B4Processor.v:2271$1739 ($add).
  creating $macc model for $add$B4Processor.v:2278$1752 ($add).
  creating $macc model for $add$B4Processor.v:2298$1760 ($add).
  creating $alu model for $macc $add$B4Processor.v:2298$1760.
  creating $alu model for $macc $add$B4Processor.v:2278$1752.
  creating $alu model for $macc $add$B4Processor.v:2271$1739.
  creating $alu cell for $add$B4Processor.v:2271$1739: $auto$alumacc.cc:485:replace_alu$28124
  creating $alu cell for $add$B4Processor.v:2278$1752: $auto$alumacc.cc:485:replace_alu$28127
  creating $alu cell for $add$B4Processor.v:2298$1760: $auto$alumacc.cc:485:replace_alu$28130
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module InstructionChecker:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module InstructionMemoryCache:
  creating $macc model for $add$B4Processor.v:106$1 ($add).
  creating $macc model for $add$B4Processor.v:194$197 ($add).
  creating $macc model for $add$B4Processor.v:373$651 ($add).
  creating $macc model for $add$B4Processor.v:830$788 ($add).
  creating $alu model for $macc $add$B4Processor.v:830$788.
  creating $alu model for $macc $add$B4Processor.v:373$651.
  creating $alu model for $macc $add$B4Processor.v:194$197.
  creating $alu model for $macc $add$B4Processor.v:106$1.
  creating $alu cell for $add$B4Processor.v:106$1: $auto$alumacc.cc:485:replace_alu$28133
  creating $alu cell for $add$B4Processor.v:194$197: $auto$alumacc.cc:485:replace_alu$28136
  creating $alu cell for $add$B4Processor.v:373$651: $auto$alumacc.cc:485:replace_alu$28139
  creating $alu cell for $add$B4Processor.v:830$788: $auto$alumacc.cc:485:replace_alu$28142
  created 4 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module InstructionMemoryCache_1:
  creating $macc model for $add$B4Processor.v:1098$792 ($add).
  creating $macc model for $add$B4Processor.v:1186$988 ($add).
  creating $macc model for $add$B4Processor.v:1365$1442 ($add).
  creating $macc model for $add$B4Processor.v:1822$1579 ($add).
  creating $alu model for $macc $add$B4Processor.v:1822$1579.
  creating $alu model for $macc $add$B4Processor.v:1365$1442.
  creating $alu model for $macc $add$B4Processor.v:1186$988.
  creating $alu model for $macc $add$B4Processor.v:1098$792.
  creating $alu cell for $add$B4Processor.v:1098$792: $auto$alumacc.cc:485:replace_alu$28145
  creating $alu cell for $add$B4Processor.v:1186$988: $auto$alumacc.cc:485:replace_alu$28148
  creating $alu cell for $add$B4Processor.v:1365$1442: $auto$alumacc.cc:485:replace_alu$28151
  creating $alu cell for $add$B4Processor.v:1822$1579: $auto$alumacc.cc:485:replace_alu$28154
  created 4 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module LoadStoreQueue:
  creating $macc model for $add$B4Processor.v:11782$9354 ($add).
  creating $macc model for $add$B4Processor.v:12009$9668 ($add).
  creating $macc model for $add$B4Processor.v:12010$9669 ($add).
  creating $macc model for $add$B4Processor.v:12221$9983 ($add).
  creating $macc model for $add$B4Processor.v:13024$11103 ($add).
  creating $macc model for $add$B4Processor.v:13548$12036 ($add).
  creating $alu model for $macc $add$B4Processor.v:13548$12036.
  creating $alu model for $macc $add$B4Processor.v:13024$11103.
  creating $alu model for $macc $add$B4Processor.v:12221$9983.
  creating $alu model for $macc $add$B4Processor.v:12010$9669.
  creating $alu model for $macc $add$B4Processor.v:12009$9668.
  creating $alu model for $macc $add$B4Processor.v:11782$9354.
  creating $alu cell for $add$B4Processor.v:11782$9354: $auto$alumacc.cc:485:replace_alu$28157
  creating $alu cell for $add$B4Processor.v:12009$9668: $auto$alumacc.cc:485:replace_alu$28160
  creating $alu cell for $add$B4Processor.v:12010$9669: $auto$alumacc.cc:485:replace_alu$28163
  creating $alu cell for $add$B4Processor.v:12221$9983: $auto$alumacc.cc:485:replace_alu$28166
  creating $alu cell for $add$B4Processor.v:13024$11103: $auto$alumacc.cc:485:replace_alu$28169
  creating $alu cell for $add$B4Processor.v:13548$12036: $auto$alumacc.cc:485:replace_alu$28172
  created 6 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module OpcodeFormatChecker:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module OutputCollector:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module RRArbiter:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module RRArbiter_1:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module RRArbiter_2:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module RegisterFile:
  creating $macc model for $sub$B4Processor.v:10107$8570 ($sub).
  creating $macc model for $sub$B4Processor.v:10139$8632 ($sub).
  creating $macc model for $sub$B4Processor.v:10171$8694 ($sub).
  creating $macc model for $sub$B4Processor.v:10203$8756 ($sub).
  creating $alu model for $macc $sub$B4Processor.v:10203$8756.
  creating $alu model for $macc $sub$B4Processor.v:10171$8694.
  creating $alu model for $macc $sub$B4Processor.v:10139$8632.
  creating $alu model for $macc $sub$B4Processor.v:10107$8570.
  creating $alu cell for $sub$B4Processor.v:10107$8570: $auto$alumacc.cc:485:replace_alu$28175
  creating $alu cell for $sub$B4Processor.v:10139$8632: $auto$alumacc.cc:485:replace_alu$28178
  creating $alu cell for $sub$B4Processor.v:10171$8694: $auto$alumacc.cc:485:replace_alu$28181
  creating $alu cell for $sub$B4Processor.v:10203$8756: $auto$alumacc.cc:485:replace_alu$28184
  created 4 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module RegisterFile_1:
  creating $macc model for $sub$B4Processor.v:10931$9102 ($sub).
  creating $macc model for $sub$B4Processor.v:10963$9164 ($sub).
  creating $macc model for $sub$B4Processor.v:10995$9226 ($sub).
  creating $macc model for $sub$B4Processor.v:11027$9288 ($sub).
  creating $alu model for $macc $sub$B4Processor.v:11027$9288.
  creating $alu model for $macc $sub$B4Processor.v:10995$9226.
  creating $alu model for $macc $sub$B4Processor.v:10963$9164.
  creating $alu model for $macc $sub$B4Processor.v:10931$9102.
  creating $alu cell for $sub$B4Processor.v:10931$9102: $auto$alumacc.cc:485:replace_alu$28187
  creating $alu cell for $sub$B4Processor.v:10963$9164: $auto$alumacc.cc:485:replace_alu$28190
  creating $alu cell for $sub$B4Processor.v:10995$9226: $auto$alumacc.cc:485:replace_alu$28193
  creating $alu cell for $sub$B4Processor.v:11027$9288: $auto$alumacc.cc:485:replace_alu$28196
  created 4 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module ReorderBuffer:
  creating $macc model for $add$B4Processor.v:3339$2324 ($add).
  creating $macc model for $add$B4Processor.v:3594$2737 ($add).
  creating $macc model for $add$B4Processor.v:3849$3150 ($add).
  creating $macc model for $add$B4Processor.v:4113$3571 ($add).
  creating $macc model for $add$B4Processor.v:4114$3572 ($add).
  creating $macc model for $add$B4Processor.v:4431$4199 ($add).
  creating $alu model for $macc $add$B4Processor.v:4431$4199.
  creating $alu model for $macc $add$B4Processor.v:4114$3572.
  creating $alu model for $macc $add$B4Processor.v:4113$3571.
  creating $alu model for $macc $add$B4Processor.v:3849$3150.
  creating $alu model for $macc $add$B4Processor.v:3594$2737.
  creating $alu model for $macc $add$B4Processor.v:3339$2324.
  creating $alu cell for $add$B4Processor.v:3339$2324: $auto$alumacc.cc:485:replace_alu$28199
  creating $alu cell for $add$B4Processor.v:3594$2737: $auto$alumacc.cc:485:replace_alu$28202
  creating $alu cell for $add$B4Processor.v:3849$3150: $auto$alumacc.cc:485:replace_alu$28205
  creating $alu cell for $add$B4Processor.v:4113$3571: $auto$alumacc.cc:485:replace_alu$28208
  creating $alu cell for $add$B4Processor.v:4114$3572: $auto$alumacc.cc:485:replace_alu$28211
  creating $alu cell for $add$B4Processor.v:4431$4199: $auto$alumacc.cc:485:replace_alu$28214
  created 6 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module ReorderBuffer_1:
  creating $macc model for $add$B4Processor.v:6890$5513 ($add).
  creating $macc model for $add$B4Processor.v:7145$5926 ($add).
  creating $macc model for $add$B4Processor.v:7400$6339 ($add).
  creating $macc model for $add$B4Processor.v:7664$6760 ($add).
  creating $macc model for $add$B4Processor.v:7665$6761 ($add).
  creating $macc model for $add$B4Processor.v:7982$7388 ($add).
  creating $alu model for $macc $add$B4Processor.v:7982$7388.
  creating $alu model for $macc $add$B4Processor.v:7665$6761.
  creating $alu model for $macc $add$B4Processor.v:7664$6760.
  creating $alu model for $macc $add$B4Processor.v:7400$6339.
  creating $alu model for $macc $add$B4Processor.v:7145$5926.
  creating $alu model for $macc $add$B4Processor.v:6890$5513.
  creating $alu cell for $add$B4Processor.v:6890$5513: $auto$alumacc.cc:485:replace_alu$28217
  creating $alu cell for $add$B4Processor.v:7145$5926: $auto$alumacc.cc:485:replace_alu$28220
  creating $alu cell for $add$B4Processor.v:7400$6339: $auto$alumacc.cc:485:replace_alu$28223
  creating $alu cell for $add$B4Processor.v:7664$6760: $auto$alumacc.cc:485:replace_alu$28226
  creating $alu cell for $add$B4Processor.v:7665$6761: $auto$alumacc.cc:485:replace_alu$28229
  creating $alu cell for $add$B4Processor.v:7982$7388: $auto$alumacc.cc:485:replace_alu$28232
  created 6 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module ReservationStation:
  creating $macc model for $add$B4Processor.v:19204$14446 ($add).
  creating $macc model for $add$B4Processor.v:19575$15064 ($add).
  creating $macc model for $add$B4Processor.v:19946$15682 ($add).
  creating $macc model for $add$B4Processor.v:20061$15876 ($add).
  creating $alu model for $macc $add$B4Processor.v:20061$15876.
  creating $alu model for $macc $add$B4Processor.v:19946$15682.
  creating $alu model for $macc $add$B4Processor.v:19575$15064.
  creating $alu model for $macc $add$B4Processor.v:19204$14446.
  creating $alu cell for $add$B4Processor.v:19204$14446: $auto$alumacc.cc:485:replace_alu$28235
  creating $alu cell for $add$B4Processor.v:19575$15064: $auto$alumacc.cc:485:replace_alu$28238
  creating $alu cell for $add$B4Processor.v:19946$15682: $auto$alumacc.cc:485:replace_alu$28241
  creating $alu cell for $add$B4Processor.v:20061$15876: $auto$alumacc.cc:485:replace_alu$28244
  created 4 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module SourceTagSelector:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module SourceTagSelector_2:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module ValueSelector1:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module ValueSelector2:
  created 0 $alu and 0 $macc cells.

5.24. Executing SHARE pass (SAT-based resource sharing).
Found 6 cells in module Executor that may be considered for resource sharing.
  Analyzing resource sharing options for $sshr$B4Processor.v:22252$16362 ($sshr):
    Found 1 activation_patterns using ctrl signal { \_executionResult64bit_T_37 \_executionResult64bit_T_29 \_executionResult64bit_T_22 \_executionResult64bit_T_21 \_executionResult64bit_T_19 \_executionResult64bit_T_17 \_executionResult64bit_T_15 \_executionResult64bit_T_12 \_executionResult64bit_T_9 \_executionResult64bit_T \io_reservationStation_valid }.
    Found 1 candidates: $sshr$B4Processor.v:22250$16361
    Analyzing resource sharing with $sshr$B4Processor.v:22250$16361 ($sshr):
      Found 1 activation_patterns using ctrl signal { \_executionResult64bit_T_37 \_executionResult64bit_T_29 \_executionResult64bit_T_22 \_executionResult64bit_T_21 \_executionResult64bit_T_19 \_executionResult64bit_T_17 \_executionResult64bit_T_15 \_executionResult64bit_T_12 \_executionResult64bit_T_9 \_executionResult64bit_T \io_reservationStation_valid }.
      Activation pattern for cell $sshr$B4Processor.v:22252$16362: { \_executionResult64bit_T_37 \_executionResult64bit_T_29 \_executionResult64bit_T_22 \_executionResult64bit_T_21 \_executionResult64bit_T_19 \_executionResult64bit_T_17 \_executionResult64bit_T_15 \_executionResult64bit_T_12 \_executionResult64bit_T_9 \_executionResult64bit_T \io_reservationStation_valid } = 11'10000000001
      Activation pattern for cell $sshr$B4Processor.v:22250$16361: { \_executionResult64bit_T_37 \_executionResult64bit_T_29 \_executionResult64bit_T_22 \_executionResult64bit_T_21 \_executionResult64bit_T_19 \_executionResult64bit_T_17 \_executionResult64bit_T_15 \_executionResult64bit_T_12 \_executionResult64bit_T_9 \_executionResult64bit_T \io_reservationStation_valid } = 11'10100000001
      Size of SAT problem: 0 cells, 156 variables, 454 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $sshr$B4Processor.v:22252$16362: $auto$share.cc:977:make_cell_activation_logic$28247
      New cell: $auto$share.cc:667:make_supercell$28254 ($sshr)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$28254 ($sshr):
    Found 1 activation_patterns using ctrl signal { \_executionResult64bit_T_37 \_executionResult64bit_T_29 \_executionResult64bit_T_21 \_executionResult64bit_T_19 \_executionResult64bit_T_17 \_executionResult64bit_T_15 \_executionResult64bit_T_12 \_executionResult64bit_T_9 \_executionResult64bit_T \io_reservationStation_valid }.
    No candidates found.
  Analyzing resource sharing options for $shr$B4Processor.v:22245$16358 ($shr):
    Found 1 activation_patterns using ctrl signal { \_executionResult64bit_T_29 \_executionResult64bit_T_22 \_executionResult64bit_T_21 \_executionResult64bit_T_19 \_executionResult64bit_T_17 \_executionResult64bit_T_15 \_executionResult64bit_T_12 \_executionResult64bit_T_9 \_executionResult64bit_T \io_reservationStation_valid }.
    Found 1 candidates: $shr$B4Processor.v:22243$16357
    Analyzing resource sharing with $shr$B4Processor.v:22243$16357 ($shr):
      Found 1 activation_patterns using ctrl signal { \_executionResult64bit_T_29 \_executionResult64bit_T_22 \_executionResult64bit_T_21 \_executionResult64bit_T_19 \_executionResult64bit_T_17 \_executionResult64bit_T_15 \_executionResult64bit_T_12 \_executionResult64bit_T_9 \_executionResult64bit_T \io_reservationStation_valid }.
      Activation pattern for cell $shr$B4Processor.v:22245$16358: { \_executionResult64bit_T_29 \_executionResult64bit_T_22 \_executionResult64bit_T_21 \_executionResult64bit_T_19 \_executionResult64bit_T_17 \_executionResult64bit_T_15 \_executionResult64bit_T_12 \_executionResult64bit_T_9 \_executionResult64bit_T \io_reservationStation_valid } = 10'1000000001
      Activation pattern for cell $shr$B4Processor.v:22243$16357: { \_executionResult64bit_T_29 \_executionResult64bit_T_22 \_executionResult64bit_T_21 \_executionResult64bit_T_19 \_executionResult64bit_T_17 \_executionResult64bit_T_15 \_executionResult64bit_T_12 \_executionResult64bit_T_9 \_executionResult64bit_T \io_reservationStation_valid } = 10'1100000001
      Size of SAT problem: 0 cells, 147 variables, 424 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $shr$B4Processor.v:22245$16358: $auto$share.cc:977:make_cell_activation_logic$28257
      New cell: $auto$share.cc:667:make_supercell$28264 ($shr)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$28264 ($shr):
    Found 1 activation_patterns using ctrl signal { \_executionResult64bit_T_29 \_executionResult64bit_T_21 \_executionResult64bit_T_19 \_executionResult64bit_T_17 \_executionResult64bit_T_15 \_executionResult64bit_T_12 \_executionResult64bit_T_9 \_executionResult64bit_T \io_reservationStation_valid }.
    No candidates found.
  Analyzing resource sharing options for $shl$B4Processor.v:22239$16354 ($shl):
    Found 1 activation_patterns using ctrl signal { \_executionResult64bit_T_22 \_executionResult64bit_T_21 \_executionResult64bit_T_19 \_executionResult64bit_T_17 \_executionResult64bit_T_15 \_executionResult64bit_T_12 \_executionResult64bit_T_9 \_executionResult64bit_T \io_reservationStation_valid }.
    Found 1 candidates: $shl$B4Processor.v:22237$16353
    Analyzing resource sharing with $shl$B4Processor.v:22237$16353 ($shl):
      Found 1 activation_patterns using ctrl signal { \_executionResult64bit_T_22 \_executionResult64bit_T_21 \_executionResult64bit_T_19 \_executionResult64bit_T_17 \_executionResult64bit_T_15 \_executionResult64bit_T_12 \_executionResult64bit_T_9 \_executionResult64bit_T \io_reservationStation_valid }.
      Activation pattern for cell $shl$B4Processor.v:22239$16354: { \_executionResult64bit_T_22 \_executionResult64bit_T_21 \_executionResult64bit_T_19 \_executionResult64bit_T_17 \_executionResult64bit_T_15 \_executionResult64bit_T_12 \_executionResult64bit_T_9 \_executionResult64bit_T \io_reservationStation_valid } = 9'010000001
      Activation pattern for cell $shl$B4Processor.v:22237$16353: { \_executionResult64bit_T_22 \_executionResult64bit_T_21 \_executionResult64bit_T_19 \_executionResult64bit_T_17 \_executionResult64bit_T_15 \_executionResult64bit_T_12 \_executionResult64bit_T_9 \_executionResult64bit_T \io_reservationStation_valid } = 9'110000001
      Size of SAT problem: 0 cells, 138 variables, 394 clauses
      According to the SAT solver this pair of cells can be shared.
      Activation signal for $shl$B4Processor.v:22239$16354: $auto$share.cc:977:make_cell_activation_logic$28267
      New cell: $auto$share.cc:667:make_supercell$28274 ($shl)
  Analyzing resource sharing options for $auto$share.cc:667:make_supercell$28274 ($shl):
    Found 1 activation_patterns using ctrl signal { \_executionResult64bit_T_21 \_executionResult64bit_T_19 \_executionResult64bit_T_17 \_executionResult64bit_T_15 \_executionResult64bit_T_12 \_executionResult64bit_T_9 \_executionResult64bit_T \io_reservationStation_valid }.
    No candidates found.
Removing 6 cells in module Executor:
  Removing cell $shl$B4Processor.v:22237$16353 ($shl).
  Removing cell $shl$B4Processor.v:22239$16354 ($shl).
  Removing cell $shr$B4Processor.v:22243$16357 ($shr).
  Removing cell $shr$B4Processor.v:22245$16358 ($shr).
  Removing cell $sshr$B4Processor.v:22250$16361 ($sshr).
  Removing cell $sshr$B4Processor.v:22252$16362 ($sshr).

5.25. Executing OPT pass (performing simple optimizations).

5.25.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
<suppressed ~260 debug messages>
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
<suppressed ~4 debug messages>
Optimizing module RRArbiter_1.
<suppressed ~4 debug messages>
Optimizing module RRArbiter_2.
<suppressed ~4 debug messages>
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.25.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Executor'.
<suppressed ~2214 debug messages>
Finding identical cells in module `\ExternalMemoryInterface'.
Finding identical cells in module `\FIFO'.
Finding identical cells in module `\FIFO_1'.
Finding identical cells in module `\FIFO_3'.
Finding identical cells in module `\FIFO_4'.
Finding identical cells in module `\FIFO_5'.
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\FetchBuffer'.
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\InstructionChecker'.
Finding identical cells in module `\InstructionMemoryCache'.
Finding identical cells in module `\InstructionMemoryCache_1'.
Finding identical cells in module `\LoadStoreQueue'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\ReorderBuffer'.
Finding identical cells in module `\ReorderBuffer_1'.
Finding identical cells in module `\ReservationStation'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 738 cells.

5.25.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Arbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \B4Processor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \BranchOutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \CheckBranch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \DataMemoryBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Executor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ExternalMemoryInterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Fetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FetchBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LoadStoreQueue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OpcodeFormatChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RRArbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReservationStation..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3333 debug messages>

5.25.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Arbiter.
  Optimizing cells in module \B4Processor.
  Optimizing cells in module \BranchOutputCollector.
  Optimizing cells in module \CheckBranch.
  Optimizing cells in module \DataMemoryBuffer.
  Optimizing cells in module \Decoder.
  Optimizing cells in module \Decoder_1.
  Optimizing cells in module \Decoder_2.
  Optimizing cells in module \Decoder_3.
  Optimizing cells in module \Executor.
  Optimizing cells in module \ExternalMemoryInterface.
  Optimizing cells in module \FIFO.
  Optimizing cells in module \FIFO_1.
  Optimizing cells in module \FIFO_3.
  Optimizing cells in module \FIFO_4.
  Optimizing cells in module \FIFO_5.
  Optimizing cells in module \FIFO_6.
  Optimizing cells in module \Fetch.
  Optimizing cells in module \FetchBuffer.
  Optimizing cells in module \Fetch_1.
  Optimizing cells in module \InstructionChecker.
  Optimizing cells in module \InstructionMemoryCache.
  Optimizing cells in module \InstructionMemoryCache_1.
  Optimizing cells in module \LoadStoreQueue.
  Optimizing cells in module \OpcodeFormatChecker.
  Optimizing cells in module \OutputCollector.
  Optimizing cells in module \RRArbiter.
  Optimizing cells in module \RRArbiter_1.
  Optimizing cells in module \RRArbiter_2.
  Optimizing cells in module \RegisterFile.
  Optimizing cells in module \RegisterFile_1.
  Optimizing cells in module \ReorderBuffer.
  Optimizing cells in module \ReorderBuffer_1.
  Optimizing cells in module \ReservationStation.
  Optimizing cells in module \SourceTagSelector.
  Optimizing cells in module \SourceTagSelector_2.
  Optimizing cells in module \ValueSelector1.
  Optimizing cells in module \ValueSelector2.
Performed a total of 0 changes.

5.25.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Executor'.
Finding identical cells in module `\ExternalMemoryInterface'.
Finding identical cells in module `\FIFO'.
Finding identical cells in module `\FIFO_1'.
Finding identical cells in module `\FIFO_3'.
Finding identical cells in module `\FIFO_4'.
Finding identical cells in module `\FIFO_5'.
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\FetchBuffer'.
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\InstructionChecker'.
Finding identical cells in module `\InstructionMemoryCache'.
Finding identical cells in module `\InstructionMemoryCache_1'.
Finding identical cells in module `\LoadStoreQueue'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\ReorderBuffer'.
Finding identical cells in module `\ReorderBuffer_1'.
Finding identical cells in module `\ReservationStation'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 0 cells.

5.25.6. Executing OPT_DFF pass (perform DFF optimizations).

5.25.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..
Removed 5 unused cells and 3853 unused wires.
<suppressed ~25 debug messages>

5.25.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.25.9. Rerunning OPT passes. (Maybe there is more to do..)

5.25.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Arbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \B4Processor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \BranchOutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \CheckBranch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \DataMemoryBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Executor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ExternalMemoryInterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Fetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FetchBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LoadStoreQueue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OpcodeFormatChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RRArbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReservationStation..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3333 debug messages>

5.25.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Arbiter.
  Optimizing cells in module \B4Processor.
  Optimizing cells in module \BranchOutputCollector.
  Optimizing cells in module \CheckBranch.
  Optimizing cells in module \DataMemoryBuffer.
  Optimizing cells in module \Decoder.
  Optimizing cells in module \Decoder_1.
  Optimizing cells in module \Decoder_2.
  Optimizing cells in module \Decoder_3.
  Optimizing cells in module \Executor.
  Optimizing cells in module \ExternalMemoryInterface.
  Optimizing cells in module \FIFO.
  Optimizing cells in module \FIFO_1.
  Optimizing cells in module \FIFO_3.
  Optimizing cells in module \FIFO_4.
  Optimizing cells in module \FIFO_5.
  Optimizing cells in module \FIFO_6.
  Optimizing cells in module \Fetch.
  Optimizing cells in module \FetchBuffer.
  Optimizing cells in module \Fetch_1.
  Optimizing cells in module \InstructionChecker.
  Optimizing cells in module \InstructionMemoryCache.
  Optimizing cells in module \InstructionMemoryCache_1.
  Optimizing cells in module \LoadStoreQueue.
  Optimizing cells in module \OpcodeFormatChecker.
  Optimizing cells in module \OutputCollector.
  Optimizing cells in module \RRArbiter.
  Optimizing cells in module \RRArbiter_1.
  Optimizing cells in module \RRArbiter_2.
  Optimizing cells in module \RegisterFile.
  Optimizing cells in module \RegisterFile_1.
  Optimizing cells in module \ReorderBuffer.
  Optimizing cells in module \ReorderBuffer_1.
  Optimizing cells in module \ReservationStation.
  Optimizing cells in module \SourceTagSelector.
  Optimizing cells in module \SourceTagSelector_2.
  Optimizing cells in module \ValueSelector1.
  Optimizing cells in module \ValueSelector2.
Performed a total of 0 changes.

5.25.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Executor'.
Finding identical cells in module `\ExternalMemoryInterface'.
Finding identical cells in module `\FIFO'.
Finding identical cells in module `\FIFO_1'.
Finding identical cells in module `\FIFO_3'.
Finding identical cells in module `\FIFO_4'.
Finding identical cells in module `\FIFO_5'.
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\FetchBuffer'.
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\InstructionChecker'.
Finding identical cells in module `\InstructionMemoryCache'.
Finding identical cells in module `\InstructionMemoryCache_1'.
Finding identical cells in module `\LoadStoreQueue'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\ReorderBuffer'.
Finding identical cells in module `\ReorderBuffer_1'.
Finding identical cells in module `\ReservationStation'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 0 cells.

5.25.13. Executing OPT_DFF pass (perform DFF optimizations).

5.25.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..

5.25.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.25.16. Finished OPT passes. (There is nothing left to do.)

5.26. Executing MEMORY pass.

5.26.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

5.26.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

5.26.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

5.26.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

5.26.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

5.26.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..

5.26.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

5.26.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

5.26.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..

5.26.10. Executing MEMORY_COLLECT pass (generating $mem cells).

5.27. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..

5.28. Executing MEMORY_LIBMAP pass (mapping memories to cells).
mapping memory FIFO.buffer via $__XILINX_LUTRAM_SDP_
Extracted addr FF from read port 0 of FIFO.buffer: $\buffer$rdreg[0]
mapping memory FIFO_1.buffer via $__XILINX_LUTRAM_SDP_
Extracted addr FF from read port 0 of FIFO_1.buffer: $\buffer$rdreg[0]
mapping memory FIFO_3.buffer via $__XILINX_LUTRAM_SDP_
Extracted addr FF from read port 0 of FIFO_3.buffer: $\buffer$rdreg[0]
mapping memory FIFO_4.buffer via $__XILINX_LUTRAM_SDP_
Extracted addr FF from read port 0 of FIFO_4.buffer: $\buffer$rdreg[0]
mapping memory FIFO_5.buffer via $__XILINX_LUTRAM_SDP_
Extracted addr FF from read port 0 of FIFO_5.buffer: $\buffer$rdreg[0]
<suppressed ~6480 debug messages>

5.29. Executing TECHMAP pass (map to technology primitives).

5.29.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/xilinx/lutrams_xc5v_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/xilinx/lutrams_xc5v_map.v' to AST representation.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_SP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_DP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_QP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_OP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_SDP_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_64X8SW_'.
Generating RTLIL representation for module `\$__XILINX_LUTRAM_32X16DR8_'.
Successfully finished Verilog frontend.

5.29.2. Continuing TECHMAP pass.
Using template $paramod$31933bc0586e304f9d4048cafdcf94ebf308e40b\$__XILINX_LUTRAM_SDP_ for cells of type $__XILINX_LUTRAM_SDP_.
Using template $paramod$f1c4ecd5a109b801fea126ecaa2fb20903e26288\$__XILINX_LUTRAM_SDP_ for cells of type $__XILINX_LUTRAM_SDP_.
Using template $paramod$b46e790e1a546c1d0fce1965900bc12ee9561e85\$__XILINX_LUTRAM_SDP_ for cells of type $__XILINX_LUTRAM_SDP_.
No more expansions possible.
<suppressed ~123 debug messages>

5.30. Executing TECHMAP pass (map to technology primitives).

5.30.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/xilinx/brams_xc6v_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/xilinx/brams_xc6v_map.v' to AST representation.
Generating RTLIL representation for module `\$__XILINX_BLOCKRAM_TDP_'.
Generating RTLIL representation for module `\$__XILINX_BLOCKRAM_SDP_'.
Successfully finished Verilog frontend.

5.30.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

5.31. Executing OPT pass (performing simple optimizations).

5.31.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
<suppressed ~1 debug messages>
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
<suppressed ~1 debug messages>
Optimizing module DataMemoryBuffer.
<suppressed ~110 debug messages>
Optimizing module Decoder.
<suppressed ~17 debug messages>
Optimizing module Decoder_1.
<suppressed ~17 debug messages>
Optimizing module Decoder_2.
<suppressed ~17 debug messages>
Optimizing module Decoder_3.
<suppressed ~17 debug messages>
Optimizing module Executor.
<suppressed ~3 debug messages>
Optimizing module ExternalMemoryInterface.
<suppressed ~2 debug messages>
Optimizing module FIFO.
<suppressed ~3 debug messages>
Optimizing module FIFO_1.
<suppressed ~3 debug messages>
Optimizing module FIFO_3.
<suppressed ~3 debug messages>
Optimizing module FIFO_4.
<suppressed ~3 debug messages>
Optimizing module FIFO_5.
<suppressed ~3 debug messages>
Optimizing module FIFO_6.
Optimizing module Fetch.
<suppressed ~1 debug messages>
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
<suppressed ~1 debug messages>
Optimizing module InstructionChecker.
<suppressed ~7 debug messages>
Optimizing module InstructionMemoryCache.
<suppressed ~69 debug messages>
Optimizing module InstructionMemoryCache_1.
<suppressed ~69 debug messages>
Optimizing module LoadStoreQueue.
<suppressed ~1 debug messages>
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
<suppressed ~1 debug messages>
Optimizing module RRArbiter_1.
<suppressed ~1 debug messages>
Optimizing module RRArbiter_2.
<suppressed ~1 debug messages>
Optimizing module RegisterFile.
<suppressed ~31 debug messages>
Optimizing module RegisterFile_1.
<suppressed ~31 debug messages>
Optimizing module ReorderBuffer.
<suppressed ~33 debug messages>
Optimizing module ReorderBuffer_1.
<suppressed ~33 debug messages>
Optimizing module ReservationStation.
<suppressed ~32 debug messages>
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.31.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Executor'.
Finding identical cells in module `\ExternalMemoryInterface'.
Finding identical cells in module `\FIFO'.
Finding identical cells in module `\FIFO_1'.
Finding identical cells in module `\FIFO_3'.
Finding identical cells in module `\FIFO_4'.
Finding identical cells in module `\FIFO_5'.
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\FetchBuffer'.
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\InstructionChecker'.
Finding identical cells in module `\InstructionMemoryCache'.
Finding identical cells in module `\InstructionMemoryCache_1'.
Finding identical cells in module `\LoadStoreQueue'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\ReorderBuffer'.
Finding identical cells in module `\ReorderBuffer_1'.
Finding identical cells in module `\ReservationStation'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 0 cells.

5.31.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$24859 ($sdff) from module Fetch (D = $procmux$22370_Y [1:0], Q = \pc [1:0]).
Adding EN signal on $auto$ff.cc:262:slice$24857 ($sdff) from module Fetch_1 (D = $procmux$22346_Y [1:0], Q = \pc [1:0]).

5.31.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..
Removed 0 unused cells and 671 unused wires.
<suppressed ~15 debug messages>

5.31.5. Rerunning OPT passes. (Removed registers in this run.)

5.31.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.31.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Executor'.
Finding identical cells in module `\ExternalMemoryInterface'.
Finding identical cells in module `\FIFO'.
Finding identical cells in module `\FIFO_1'.
Finding identical cells in module `\FIFO_3'.
Finding identical cells in module `\FIFO_4'.
Finding identical cells in module `\FIFO_5'.
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\FetchBuffer'.
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\InstructionChecker'.
Finding identical cells in module `\InstructionMemoryCache'.
Finding identical cells in module `\InstructionMemoryCache_1'.
Finding identical cells in module `\LoadStoreQueue'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\ReorderBuffer'.
Finding identical cells in module `\ReorderBuffer_1'.
Finding identical cells in module `\ReservationStation'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 0 cells.

5.31.8. Executing OPT_DFF pass (perform DFF optimizations).

5.31.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..

5.31.10. Finished fast OPT passes.

5.32. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

5.33. Executing OPT pass (performing simple optimizations).

5.33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Executor'.
Finding identical cells in module `\ExternalMemoryInterface'.
Finding identical cells in module `\FIFO'.
Finding identical cells in module `\FIFO_1'.
Finding identical cells in module `\FIFO_3'.
Finding identical cells in module `\FIFO_4'.
Finding identical cells in module `\FIFO_5'.
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\FetchBuffer'.
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\InstructionChecker'.
Finding identical cells in module `\InstructionMemoryCache'.
Finding identical cells in module `\InstructionMemoryCache_1'.
Finding identical cells in module `\LoadStoreQueue'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\ReorderBuffer'.
Finding identical cells in module `\ReorderBuffer_1'.
Finding identical cells in module `\ReservationStation'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 0 cells.

5.33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Arbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \B4Processor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \BranchOutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \CheckBranch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \DataMemoryBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Executor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ExternalMemoryInterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Fetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FetchBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LoadStoreQueue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OpcodeFormatChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RRArbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReservationStation..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3240 debug messages>

5.33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Arbiter.
  Optimizing cells in module \B4Processor.
  Optimizing cells in module \BranchOutputCollector.
  Optimizing cells in module \CheckBranch.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:1994$1584:
      Old ports: A=13'0000000000100, B={ \io_instruction [31:20] 1'0 }, Y=\_io_offset_T_16
      New ports: A=12'000000000010, B=\io_instruction [31:20], Y=\_io_offset_T_16 [12:1]
      New connections: \_io_offset_T_16 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:2000$1591:
      Old ports: A=2'00, B=2'11, Y=\_io_branchType_T_3
      New ports: A=1'0, B=1'1, Y=\_io_branchType_T_3 [0]
      New connections: \_io_branchType_T_3 [1] = \_io_branchType_T_3 [0]
  Optimizing cells in module \CheckBranch.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:1995$1586:
      Old ports: A={ \_io_offset_T_16 [12] \_io_offset_T_16 [12] \_io_offset_T_16 [12] \_io_offset_T_16 [12] \_io_offset_T_16 [12] \_io_offset_T_16 [12] \_io_offset_T_16 [12] \_io_offset_T_16 [12] \_io_offset_T_16 }, B={ \io_instruction [31] \io_instruction [19:12] \io_instruction [20] \io_instruction [30:21] 1'0 }, Y=\_io_offset_T_18
      New ports: A={ \_io_offset_T_16 [12] \_io_offset_T_16 [12] \_io_offset_T_16 [12] \_io_offset_T_16 [12] \_io_offset_T_16 [12] \_io_offset_T_16 [12] \_io_offset_T_16 [12] \_io_offset_T_16 [12] \_io_offset_T_16 [12:1] }, B={ \io_instruction [31] \io_instruction [19:12] \io_instruction [20] \io_instruction [30:21] }, Y=\_io_offset_T_18 [20:1]
      New connections: \_io_offset_T_18 [0] = 1'0
  Optimizing cells in module \CheckBranch.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:1997$1588:
      Old ports: A=\_io_offset_T_18, B={ \io_instruction [31] \io_instruction [31] \io_instruction [31] \io_instruction [31] \io_instruction [31] \io_instruction [31] \io_instruction [31] \io_instruction [31] \io_instruction [31] \io_instruction [7] \io_instruction [30:25] \io_instruction [11:8] 1'0 }, Y=\_io_offset_T_20
      New ports: A=\_io_offset_T_18 [20:1], B={ \io_instruction [31] \io_instruction [31] \io_instruction [31] \io_instruction [31] \io_instruction [31] \io_instruction [31] \io_instruction [31] \io_instruction [31] \io_instruction [31] \io_instruction [7] \io_instruction [30:25] \io_instruction [11:8] }, Y=\_io_offset_T_20 [20:1]
      New connections: \_io_offset_T_20 [0] = 1'0
  Optimizing cells in module \CheckBranch.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:2004$1599:
      Old ports: A=\_io_offset_T_20, B=21'000000000000000000100, Y=\io_offset
      New ports: A=\_io_offset_T_20 [20:1], B=20'00000000000000000010, Y=\io_offset [20:1]
      New connections: \io_offset [0] = 1'0
  Optimizing cells in module \CheckBranch.
  Optimizing cells in module \DataMemoryBuffer.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:15992$12707:
      Old ports: A=16'0000000000000000, B={ \buffer_output_bits_data [7:0] 8'00000000 }, Y=\_io_dataWriteRequest_bits_data_T_27
      New ports: A=8'00000000, B=\buffer_output_bits_data [7:0], Y=\_io_dataWriteRequest_bits_data_T_27 [15:8]
      New connections: \_io_dataWriteRequest_bits_data_T_27 [7:0] = 8'00000000
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:15994$12708:
      Old ports: A=24'000000000000000000000000, B={ \buffer_output_bits_data [7:0] 16'0000000000000000 }, Y=\_io_dataWriteRequest_bits_data_T_28
      New ports: A=8'00000000, B=\buffer_output_bits_data [7:0], Y=\_io_dataWriteRequest_bits_data_T_28 [23:16]
      New connections: \_io_dataWriteRequest_bits_data_T_28 [15:0] = 16'0000000000000000
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:15996$12709:
      Old ports: A=0, B={ \buffer_output_bits_data [7:0] 24'000000000000000000000000 }, Y=\_io_dataWriteRequest_bits_data_T_29
      New ports: A=8'00000000, B=\buffer_output_bits_data [7:0], Y=\_io_dataWriteRequest_bits_data_T_29 [31:24]
      New connections: \_io_dataWriteRequest_bits_data_T_29 [23:0] = 24'000000000000000000000000
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:15998$12710:
      Old ports: A=40'0000000000000000000000000000000000000000, B={ \buffer_output_bits_data [7:0] 32'00000000000000000000000000000000 }, Y=\_io_dataWriteRequest_bits_data_T_30
      New ports: A=8'00000000, B=\buffer_output_bits_data [7:0], Y=\_io_dataWriteRequest_bits_data_T_30 [39:32]
      New connections: \_io_dataWriteRequest_bits_data_T_30 [31:0] = 0
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16000$12711:
      Old ports: A=48'000000000000000000000000000000000000000000000000, B={ \buffer_output_bits_data [7:0] 40'0000000000000000000000000000000000000000 }, Y=\_io_dataWriteRequest_bits_data_T_31
      New ports: A=8'00000000, B=\buffer_output_bits_data [7:0], Y=\_io_dataWriteRequest_bits_data_T_31 [47:40]
      New connections: \_io_dataWriteRequest_bits_data_T_31 [39:0] = 40'0000000000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16002$12712:
      Old ports: A=56'00000000000000000000000000000000000000000000000000000000, B={ \buffer_output_bits_data [7:0] 48'000000000000000000000000000000000000000000000000 }, Y=\_io_dataWriteRequest_bits_data_T_32
      New ports: A=8'00000000, B=\buffer_output_bits_data [7:0], Y=\_io_dataWriteRequest_bits_data_T_32 [55:48]
      New connections: \_io_dataWriteRequest_bits_data_T_32 [47:0] = 48'000000000000000000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16004$12713:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \buffer_output_bits_data [7:0] 56'00000000000000000000000000000000000000000000000000000000 }, Y=\_io_dataWriteRequest_bits_data_T_33
      New ports: A=8'00000000, B=\buffer_output_bits_data [7:0], Y=\_io_dataWriteRequest_bits_data_T_33 [63:56]
      New connections: \_io_dataWriteRequest_bits_data_T_33 [55:0] = 56'00000000000000000000000000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16029$12726:
      Old ports: A=0, B={ \buffer_output_bits_data [15:0] 16'0000000000000000 }, Y=\_io_dataWriteRequest_bits_data_T_59
      New ports: A=16'0000000000000000, B=\buffer_output_bits_data [15:0], Y=\_io_dataWriteRequest_bits_data_T_59 [31:16]
      New connections: \_io_dataWriteRequest_bits_data_T_59 [15:0] = 16'0000000000000000
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16031$12727:
      Old ports: A=48'000000000000000000000000000000000000000000000000, B={ \buffer_output_bits_data [15:0] 32'00000000000000000000000000000000 }, Y=\_io_dataWriteRequest_bits_data_T_60
      New ports: A=16'0000000000000000, B=\buffer_output_bits_data [15:0], Y=\_io_dataWriteRequest_bits_data_T_60 [47:32]
      New connections: \_io_dataWriteRequest_bits_data_T_60 [31:0] = 0
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16033$12728:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \buffer_output_bits_data [15:0] 48'000000000000000000000000000000000000000000000000 }, Y=\_io_dataWriteRequest_bits_data_T_61
      New ports: A=16'0000000000000000, B=\buffer_output_bits_data [15:0], Y=\_io_dataWriteRequest_bits_data_T_61 [63:48]
      New connections: \_io_dataWriteRequest_bits_data_T_61 [47:0] = 48'000000000000000000000000000000000000000000000000
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16045$12734:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \buffer_output_bits_data [31:0] 32'00000000000000000000000000000000 }, Y=\_io_dataWriteRequest_bits_data_T_75
      New ports: A=0, B=\buffer_output_bits_data [31:0], Y=\_io_dataWriteRequest_bits_data_T_75 [63:32]
      New connections: \_io_dataWriteRequest_bits_data_T_75 [31:0] = 0
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16054$12742:
      Old ports: A=2'00, B=2'10, Y=\_io_dataWriteRequest_bits_mask_T_11
      New ports: A=1'0, B=1'1, Y=\_io_dataWriteRequest_bits_mask_T_11 [1]
      New connections: \_io_dataWriteRequest_bits_mask_T_11 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16055$12743:
      Old ports: A=3'000, B=3'100, Y=\_io_dataWriteRequest_bits_mask_T_12
      New ports: A=1'0, B=1'1, Y=\_io_dataWriteRequest_bits_mask_T_12 [2]
      New connections: \_io_dataWriteRequest_bits_mask_T_12 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16056$12744:
      Old ports: A=4'0000, B=4'1000, Y=\_io_dataWriteRequest_bits_mask_T_13
      New ports: A=1'0, B=1'1, Y=\_io_dataWriteRequest_bits_mask_T_13 [3]
      New connections: \_io_dataWriteRequest_bits_mask_T_13 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16057$12745:
      Old ports: A=5'00000, B=5'10000, Y=\_io_dataWriteRequest_bits_mask_T_14
      New ports: A=1'0, B=1'1, Y=\_io_dataWriteRequest_bits_mask_T_14 [4]
      New connections: \_io_dataWriteRequest_bits_mask_T_14 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16058$12746:
      Old ports: A=6'000000, B=6'100000, Y=\_io_dataWriteRequest_bits_mask_T_15
      New ports: A=1'0, B=1'1, Y=\_io_dataWriteRequest_bits_mask_T_15 [5]
      New connections: \_io_dataWriteRequest_bits_mask_T_15 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16059$12747:
      Old ports: A=7'0000000, B=7'1000000, Y=\_io_dataWriteRequest_bits_mask_T_16
      New ports: A=1'0, B=1'1, Y=\_io_dataWriteRequest_bits_mask_T_16 [6]
      New connections: \_io_dataWriteRequest_bits_mask_T_16 [5:0] = 6'000000
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16060$12748:
      Old ports: A=8'00000000, B=8'10000000, Y=\_io_dataWriteRequest_bits_mask_T_17
      New ports: A=1'0, B=1'1, Y=\_io_dataWriteRequest_bits_mask_T_17 [7]
      New connections: \_io_dataWriteRequest_bits_mask_T_17 [6:0] = 7'0000000
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16075$12756:
      Old ports: A=2'00, B=2'11, Y=\_io_dataWriteRequest_bits_mask_T_34
      New ports: A=1'0, B=1'1, Y=\_io_dataWriteRequest_bits_mask_T_34 [0]
      New connections: \_io_dataWriteRequest_bits_mask_T_34 [1] = \_io_dataWriteRequest_bits_mask_T_34 [0]
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16076$12757:
      Old ports: A=4'0000, B=4'1100, Y=\_io_dataWriteRequest_bits_mask_T_35
      New ports: A=1'0, B=1'1, Y=\_io_dataWriteRequest_bits_mask_T_35 [2]
      New connections: { \_io_dataWriteRequest_bits_mask_T_35 [3] \_io_dataWriteRequest_bits_mask_T_35 [1:0] } = { \_io_dataWriteRequest_bits_mask_T_35 [2] 2'00 }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16077$12758:
      Old ports: A=6'000000, B=6'110000, Y=\_io_dataWriteRequest_bits_mask_T_36
      New ports: A=1'0, B=1'1, Y=\_io_dataWriteRequest_bits_mask_T_36 [4]
      New connections: { \_io_dataWriteRequest_bits_mask_T_36 [5] \_io_dataWriteRequest_bits_mask_T_36 [3:0] } = { \_io_dataWriteRequest_bits_mask_T_36 [4] 4'0000 }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16078$12759:
      Old ports: A=8'00000000, B=8'11000000, Y=\_io_dataWriteRequest_bits_mask_T_37
      New ports: A=1'0, B=1'1, Y=\_io_dataWriteRequest_bits_mask_T_37 [6]
      New connections: { \_io_dataWriteRequest_bits_mask_T_37 [7] \_io_dataWriteRequest_bits_mask_T_37 [5:0] } = { \_io_dataWriteRequest_bits_mask_T_37 [6] 6'000000 }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16085$12763:
      Old ports: A=4'1111, B=4'0000, Y=\_io_dataWriteRequest_bits_mask_T_46
      New ports: A=1'1, B=1'0, Y=\_io_dataWriteRequest_bits_mask_T_46 [0]
      New connections: \_io_dataWriteRequest_bits_mask_T_46 [3:1] = { \_io_dataWriteRequest_bits_mask_T_46 [0] \_io_dataWriteRequest_bits_mask_T_46 [0] \_io_dataWriteRequest_bits_mask_T_46 [0] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16086$12764:
      Old ports: A=8'00000000, B=8'11110000, Y=\_io_dataWriteRequest_bits_mask_T_47
      New ports: A=1'0, B=1'1, Y=\_io_dataWriteRequest_bits_mask_T_47 [4]
      New connections: { \_io_dataWriteRequest_bits_mask_T_47 [7:5] \_io_dataWriteRequest_bits_mask_T_47 [3:0] } = { \_io_dataWriteRequest_bits_mask_T_47 [4] \_io_dataWriteRequest_bits_mask_T_47 [4] \_io_dataWriteRequest_bits_mask_T_47 [4] 4'0000 }
  Optimizing cells in module \DataMemoryBuffer.
  Optimizing cells in module \Decoder.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:17043$12951:
      Old ports: A=2'00, B=2'10, Y=\_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_13
      New ports: A=1'0, B=1'1, Y=\_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_13 [1]
      New connections: \_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_13 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:17045$12952:
      Old ports: A=2'00, B=2'11, Y=\_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_15
      New ports: A=1'0, B=1'1, Y=\_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_15 [0]
      New connections: \_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_15 [1] = \_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_15 [0]
  Optimizing cells in module \Decoder.
  Optimizing cells in module \Decoder_1.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:17389$13039:
      Old ports: A=2'00, B=2'10, Y=\_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_13
      New ports: A=1'0, B=1'1, Y=\_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_13 [1]
      New connections: \_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_13 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:17391$13040:
      Old ports: A=2'00, B=2'11, Y=\_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_15
      New ports: A=1'0, B=1'1, Y=\_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_15 [0]
      New connections: \_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_15 [1] = \_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_15 [0]
  Optimizing cells in module \Decoder_1.
  Optimizing cells in module \Decoder_2.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:17714$13111:
      Old ports: A=2'00, B=2'10, Y=\_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_13
      New ports: A=1'0, B=1'1, Y=\_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_13 [1]
      New connections: \_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_13 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:17716$13112:
      Old ports: A=2'00, B=2'11, Y=\_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_15
      New ports: A=1'0, B=1'1, Y=\_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_15 [0]
      New connections: \_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_15 [1] = \_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_15 [0]
  Optimizing cells in module \Decoder_2.
  Optimizing cells in module \Decoder_3.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:18036$13190:
      Old ports: A=2'00, B=2'10, Y=\_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_13
      New ports: A=1'0, B=1'1, Y=\_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_13 [1]
      New connections: \_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_13 [0] = 1'0
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:18038$13191:
      Old ports: A=2'00, B=2'11, Y=\_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_15
      New ports: A=1'0, B=1'1, Y=\_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_15 [0]
      New connections: \_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_15 [1] = \_io_loadStoreQueue_bits_accessInfo_w_accessWidth_T_15 [0]
  Optimizing cells in module \Decoder_3.
  Optimizing cells in module \Executor.
    Consolidated identical input bits for $mux cell $auto$share.cc:660:make_supercell$28251:
      Old ports: A={ \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31:0] }, B=\io_reservationStation_bits_value1, Y=$auto$share.cc:657:make_supercell$28249
      New ports: A={ \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] \io_reservationStation_bits_value1 [31] }, B=\io_reservationStation_bits_value1 [63:32], Y=$auto$share.cc:657:make_supercell$28249 [63:32]
      New connections: $auto$share.cc:657:make_supercell$28249 [31:0] = \io_reservationStation_bits_value1 [31:0]
    Consolidated identical input bits for $mux cell $auto$share.cc:660:make_supercell$28261:
      Old ports: A={ 32'00000000000000000000000000000000 \io_reservationStation_bits_value1 [31:0] }, B=\io_reservationStation_bits_value1, Y=$auto$share.cc:657:make_supercell$28259
      New ports: A=0, B=\io_reservationStation_bits_value1 [63:32], Y=$auto$share.cc:657:make_supercell$28259 [63:32]
      New connections: $auto$share.cc:657:make_supercell$28259 [31:0] = \io_reservationStation_bits_value1 [31:0]
    Consolidated identical input bits for $mux cell $auto$share.cc:660:make_supercell$28271:
      Old ports: A={ 32'00000000000000000000000000000000 \io_reservationStation_bits_value1 [31:0] }, B=\io_reservationStation_bits_value1, Y=$auto$share.cc:657:make_supercell$28269
      New ports: A=0, B=\io_reservationStation_bits_value1 [63:32], Y=$auto$share.cc:657:make_supercell$28269 [63:32]
      New connections: $auto$share.cc:657:make_supercell$28269 [31:0] = \io_reservationStation_bits_value1 [31:0]
    Consolidated identical input bits for $mux cell $auto$share.cc:661:make_supercell$28252:
      Old ports: A={ 1'0 \io_reservationStation_bits_value2 [4:0] }, B=\io_reservationStation_bits_value2 [5:0], Y=$auto$share.cc:658:make_supercell$28250
      New ports: A=1'0, B=\io_reservationStation_bits_value2 [5], Y=$auto$share.cc:658:make_supercell$28250 [5]
      New connections: $auto$share.cc:658:make_supercell$28250 [4:0] = \io_reservationStation_bits_value2 [4:0]
    Consolidated identical input bits for $mux cell $auto$share.cc:661:make_supercell$28262:
      Old ports: A={ 1'0 \io_reservationStation_bits_value2 [4:0] }, B=\io_reservationStation_bits_value2 [5:0], Y=$auto$share.cc:658:make_supercell$28260
      New ports: A=1'0, B=\io_reservationStation_bits_value2 [5], Y=$auto$share.cc:658:make_supercell$28260 [5]
      New connections: $auto$share.cc:658:make_supercell$28260 [4:0] = \io_reservationStation_bits_value2 [4:0]
    Consolidated identical input bits for $mux cell $auto$share.cc:661:make_supercell$28272:
      Old ports: A={ 1'0 \io_reservationStation_bits_value2 [4:0] }, B=\io_reservationStation_bits_value2 [5:0], Y=$auto$share.cc:658:make_supercell$28270
      New ports: A=1'0, B=\io_reservationStation_bits_value2 [5], Y=$auto$share.cc:658:make_supercell$28270 [5]
      New connections: $auto$share.cc:658:make_supercell$28270 [4:0] = \io_reservationStation_bits_value2 [4:0]
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22240$16355:
      Old ports: A=\_executionResult64bit_T_27, B={ 1'0 \_executionResult64bit_T_27 [62:0] }, Y=\_executionResult64bit_T_28
      New ports: A=\_executionResult64bit_T_27 [63], B=1'0, Y=\_executionResult64bit_T_28 [63]
      New connections: \_executionResult64bit_T_28 [62:0] = \_executionResult64bit_T_27 [62:0]
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22246$16359:
      Old ports: A=\_executionResult64bit_T_35, B={ 32'00000000000000000000000000000000 \_executionResult64bit_T_35 [31:0] }, Y=\_executionResult64bit_T_36
      New ports: A=\_executionResult64bit_T_35 [63:32], B=0, Y=\_executionResult64bit_T_36 [63:32]
      New connections: \_executionResult64bit_T_36 [31:0] = \_executionResult64bit_T_35 [31:0]
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22254$16363:
      Old ports: A=\_executionResult64bit_T_47, B={ 32'00000000000000000000000000000000 \_executionResult64bit_T_47 [31:0] }, Y=\_executionResult64bit_T_48
      New ports: A=\_executionResult64bit_T_47 [63:32], B=0, Y=\_executionResult64bit_T_48 [63:32]
      New connections: \_executionResult64bit_T_48 [31:0] = \_executionResult64bit_T_47 [31:0]
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22317$16406:
      Old ports: A={ \nextProgramCounter [63:2] \io_reservationStation_bits_programCounter [1:0] }, B={ \branchedProgramCounter [63:1] \io_reservationStation_bits_programCounter [0] }, Y=\_io_fetch_bits_programCounter_T_2
      New ports: A={ \nextProgramCounter [63:2] \io_reservationStation_bits_programCounter [1] }, B=\branchedProgramCounter [63:1], Y=\_io_fetch_bits_programCounter_T_2 [63:1]
      New connections: \_io_fetch_bits_programCounter_T_2 [0] = \io_reservationStation_bits_programCounter [0]
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22319$16407:
      Old ports: A={ \nextProgramCounter [63:2] \io_reservationStation_bits_programCounter [1:0] }, B={ \branchedProgramCounter [63:1] \io_reservationStation_bits_programCounter [0] }, Y=\_io_fetch_bits_programCounter_T_5
      New ports: A={ \nextProgramCounter [63:2] \io_reservationStation_bits_programCounter [1] }, B=\branchedProgramCounter [63:1], Y=\_io_fetch_bits_programCounter_T_5 [63:1]
      New connections: \_io_fetch_bits_programCounter_T_5 [0] = \io_reservationStation_bits_programCounter [0]
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22321$16408:
      Old ports: A={ \nextProgramCounter [63:2] \io_reservationStation_bits_programCounter [1:0] }, B={ \branchedProgramCounter [63:1] \io_reservationStation_bits_programCounter [0] }, Y=\_io_fetch_bits_programCounter_T_10
      New ports: A={ \nextProgramCounter [63:2] \io_reservationStation_bits_programCounter [1] }, B=\branchedProgramCounter [63:1], Y=\_io_fetch_bits_programCounter_T_10 [63:1]
      New connections: \_io_fetch_bits_programCounter_T_10 [0] = \io_reservationStation_bits_programCounter [0]
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22323$16409:
      Old ports: A={ \nextProgramCounter [63:2] \io_reservationStation_bits_programCounter [1:0] }, B={ \branchedProgramCounter [63:1] \io_reservationStation_bits_programCounter [0] }, Y=\_io_fetch_bits_programCounter_T_13
      New ports: A={ \nextProgramCounter [63:2] \io_reservationStation_bits_programCounter [1] }, B=\branchedProgramCounter [63:1], Y=\_io_fetch_bits_programCounter_T_13 [63:1]
      New connections: \_io_fetch_bits_programCounter_T_13 [0] = \io_reservationStation_bits_programCounter [0]
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22325$16410:
      Old ports: A={ \nextProgramCounter [63:2] \io_reservationStation_bits_programCounter [1:0] }, B={ \branchedProgramCounter [63:1] \io_reservationStation_bits_programCounter [0] }, Y=\_io_fetch_bits_programCounter_T_18
      New ports: A={ \nextProgramCounter [63:2] \io_reservationStation_bits_programCounter [1] }, B=\branchedProgramCounter [63:1], Y=\_io_fetch_bits_programCounter_T_18 [63:1]
      New connections: \_io_fetch_bits_programCounter_T_18 [0] = \io_reservationStation_bits_programCounter [0]
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22327$16411:
      Old ports: A={ \nextProgramCounter [63:2] \io_reservationStation_bits_programCounter [1:0] }, B={ \branchedProgramCounter [63:1] \io_reservationStation_bits_programCounter [0] }, Y=\_io_fetch_bits_programCounter_T_21
      New ports: A={ \nextProgramCounter [63:2] \io_reservationStation_bits_programCounter [1] }, B=\branchedProgramCounter [63:1], Y=\_io_fetch_bits_programCounter_T_21 [63:1]
      New connections: \_io_fetch_bits_programCounter_T_21 [0] = \io_reservationStation_bits_programCounter [0]
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22357$16428:
      Old ports: A=\_executionResultSized_T_8, B={ \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31:0] }, Y=\executionResultSized
      New ports: A=\_executionResultSized_T_8 [63:32], B={ \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] \_executionResultSized_T_8 [31] }, Y=\executionResultSized [63:32]
      New connections: \executionResultSized [31:0] = \_executionResultSized_T_8 [31:0]
  Optimizing cells in module \Executor.
  Optimizing cells in module \ExternalMemoryInterface.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23007$16514:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \instructionOrReadDataArbiter_io_out_bits_address [63:3] 3'000 }, Y=\_GEN_9
      New ports: A=61'0000000000000000000000000000000000000000000000000000000000000, B=\instructionOrReadDataArbiter_io_out_bits_address [63:3], Y=\_GEN_9 [63:3]
      New connections: \_GEN_9 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23022$16527:
      Old ports: A=56'00000000000000000000000000000000000000000000000000000000, B=56'11111111111111111111111111111111111111111111111111111111, Y=\_io_dataReadOut_bits_value_T_4
      New ports: A=1'0, B=1'1, Y=\_io_dataReadOut_bits_value_T_4 [0]
      New connections: \_io_dataReadOut_bits_value_T_4 [55:1] = { \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] \_io_dataReadOut_bits_value_T_4 [0] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23026$16530:
      Old ports: A=56'00000000000000000000000000000000000000000000000000000000, B=56'11111111111111111111111111111111111111111111111111111111, Y=\_io_dataReadOut_bits_value_T_10
      New ports: A=1'0, B=1'1, Y=\_io_dataReadOut_bits_value_T_10 [0]
      New connections: \_io_dataReadOut_bits_value_T_10 [55:1] = { \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] \_io_dataReadOut_bits_value_T_10 [0] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23030$16533:
      Old ports: A=56'00000000000000000000000000000000000000000000000000000000, B=56'11111111111111111111111111111111111111111111111111111111, Y=\_io_dataReadOut_bits_value_T_16
      New ports: A=1'0, B=1'1, Y=\_io_dataReadOut_bits_value_T_16 [0]
      New connections: \_io_dataReadOut_bits_value_T_16 [55:1] = { \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] \_io_dataReadOut_bits_value_T_16 [0] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23034$16536:
      Old ports: A=56'00000000000000000000000000000000000000000000000000000000, B=56'11111111111111111111111111111111111111111111111111111111, Y=\_io_dataReadOut_bits_value_T_22
      New ports: A=1'0, B=1'1, Y=\_io_dataReadOut_bits_value_T_22 [0]
      New connections: \_io_dataReadOut_bits_value_T_22 [55:1] = { \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] \_io_dataReadOut_bits_value_T_22 [0] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23038$16539:
      Old ports: A=56'00000000000000000000000000000000000000000000000000000000, B=56'11111111111111111111111111111111111111111111111111111111, Y=\_io_dataReadOut_bits_value_T_28
      New ports: A=1'0, B=1'1, Y=\_io_dataReadOut_bits_value_T_28 [0]
      New connections: \_io_dataReadOut_bits_value_T_28 [55:1] = { \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] \_io_dataReadOut_bits_value_T_28 [0] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23042$16542:
      Old ports: A=56'00000000000000000000000000000000000000000000000000000000, B=56'11111111111111111111111111111111111111111111111111111111, Y=\_io_dataReadOut_bits_value_T_34
      New ports: A=1'0, B=1'1, Y=\_io_dataReadOut_bits_value_T_34 [0]
      New connections: \_io_dataReadOut_bits_value_T_34 [55:1] = { \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] \_io_dataReadOut_bits_value_T_34 [0] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23046$16545:
      Old ports: A=56'00000000000000000000000000000000000000000000000000000000, B=56'11111111111111111111111111111111111111111111111111111111, Y=\_io_dataReadOut_bits_value_T_40
      New ports: A=1'0, B=1'1, Y=\_io_dataReadOut_bits_value_T_40 [0]
      New connections: \_io_dataReadOut_bits_value_T_40 [55:1] = { \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] \_io_dataReadOut_bits_value_T_40 [0] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23050$16548:
      Old ports: A=56'00000000000000000000000000000000000000000000000000000000, B=56'11111111111111111111111111111111111111111111111111111111, Y=\_io_dataReadOut_bits_value_T_46
      New ports: A=1'0, B=1'1, Y=\_io_dataReadOut_bits_value_T_46 [0]
      New connections: \_io_dataReadOut_bits_value_T_46 [55:1] = { \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] \_io_dataReadOut_bits_value_T_46 [0] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23075$16565:
      Old ports: A=48'000000000000000000000000000000000000000000000000, B=48'111111111111111111111111111111111111111111111111, Y=\_io_dataReadOut_bits_value_T_68
      New ports: A=1'0, B=1'1, Y=\_io_dataReadOut_bits_value_T_68 [0]
      New connections: \_io_dataReadOut_bits_value_T_68 [47:1] = { \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] \_io_dataReadOut_bits_value_T_68 [0] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23077$16566:
      Old ports: A=48'000000000000000000000000000000000000000000000000, B=48'111111111111111111111111111111111111111111111111, Y=\_io_dataReadOut_bits_value_T_74
      New ports: A=1'0, B=1'1, Y=\_io_dataReadOut_bits_value_T_74 [0]
      New connections: \_io_dataReadOut_bits_value_T_74 [47:1] = { \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] \_io_dataReadOut_bits_value_T_74 [0] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23079$16567:
      Old ports: A=48'000000000000000000000000000000000000000000000000, B=48'111111111111111111111111111111111111111111111111, Y=\_io_dataReadOut_bits_value_T_80
      New ports: A=1'0, B=1'1, Y=\_io_dataReadOut_bits_value_T_80 [0]
      New connections: \_io_dataReadOut_bits_value_T_80 [47:1] = { \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] \_io_dataReadOut_bits_value_T_80 [0] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23081$16568:
      Old ports: A=48'000000000000000000000000000000000000000000000000, B=48'111111111111111111111111111111111111111111111111, Y=\_io_dataReadOut_bits_value_T_86
      New ports: A=1'0, B=1'1, Y=\_io_dataReadOut_bits_value_T_86 [0]
      New connections: \_io_dataReadOut_bits_value_T_86 [47:1] = { \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] \_io_dataReadOut_bits_value_T_86 [0] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23095$16577:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=\_io_dataReadOut_bits_value_T_100
      New ports: A=1'0, B=1'1, Y=\_io_dataReadOut_bits_value_T_100 [0]
      New connections: \_io_dataReadOut_bits_value_T_100 [31:1] = { \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] \_io_dataReadOut_bits_value_T_100 [0] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23097$16578:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=\_io_dataReadOut_bits_value_T_106
      New ports: A=1'0, B=1'1, Y=\_io_dataReadOut_bits_value_T_106 [0]
      New connections: \_io_dataReadOut_bits_value_T_106 [31:1] = { \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] \_io_dataReadOut_bits_value_T_106 [0] }
  Optimizing cells in module \ExternalMemoryInterface.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23052$16549:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \_io_dataReadOut_bits_value_T_4 \io_coordinator_read_bits_DATA [7:0] }, Y=\_io_dataReadOut_bits_value_T_49
      New ports: A=9'000000000, B={ \_io_dataReadOut_bits_value_T_4 [0] \io_coordinator_read_bits_DATA [7:0] }, Y=\_io_dataReadOut_bits_value_T_49 [8:0]
      New connections: \_io_dataReadOut_bits_value_T_49 [63:9] = { \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] \_io_dataReadOut_bits_value_T_49 [8] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23053$16550:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \_io_dataReadOut_bits_value_T_10 \io_coordinator_read_bits_DATA [15:8] }, Y=\_io_dataReadOut_bits_value_T_50
      New ports: A=9'000000000, B={ \_io_dataReadOut_bits_value_T_10 [0] \io_coordinator_read_bits_DATA [15:8] }, Y=\_io_dataReadOut_bits_value_T_50 [8:0]
      New connections: \_io_dataReadOut_bits_value_T_50 [63:9] = { \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] \_io_dataReadOut_bits_value_T_50 [8] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23055$16551:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \_io_dataReadOut_bits_value_T_16 \io_coordinator_read_bits_DATA [23:16] }, Y=\_io_dataReadOut_bits_value_T_51
      New ports: A=9'000000000, B={ \_io_dataReadOut_bits_value_T_16 [0] \io_coordinator_read_bits_DATA [23:16] }, Y=\_io_dataReadOut_bits_value_T_51 [8:0]
      New connections: \_io_dataReadOut_bits_value_T_51 [63:9] = { \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] \_io_dataReadOut_bits_value_T_51 [8] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23057$16552:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \_io_dataReadOut_bits_value_T_22 \io_coordinator_read_bits_DATA [31:24] }, Y=\_io_dataReadOut_bits_value_T_52
      New ports: A=9'000000000, B={ \_io_dataReadOut_bits_value_T_22 [0] \io_coordinator_read_bits_DATA [31:24] }, Y=\_io_dataReadOut_bits_value_T_52 [8:0]
      New connections: \_io_dataReadOut_bits_value_T_52 [63:9] = { \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] \_io_dataReadOut_bits_value_T_52 [8] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23059$16553:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \_io_dataReadOut_bits_value_T_28 \io_coordinator_read_bits_DATA [39:32] }, Y=\_io_dataReadOut_bits_value_T_53
      New ports: A=9'000000000, B={ \_io_dataReadOut_bits_value_T_28 [0] \io_coordinator_read_bits_DATA [39:32] }, Y=\_io_dataReadOut_bits_value_T_53 [8:0]
      New connections: \_io_dataReadOut_bits_value_T_53 [63:9] = { \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] \_io_dataReadOut_bits_value_T_53 [8] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23061$16554:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \_io_dataReadOut_bits_value_T_34 \io_coordinator_read_bits_DATA [47:40] }, Y=\_io_dataReadOut_bits_value_T_54
      New ports: A=9'000000000, B={ \_io_dataReadOut_bits_value_T_34 [0] \io_coordinator_read_bits_DATA [47:40] }, Y=\_io_dataReadOut_bits_value_T_54 [8:0]
      New connections: \_io_dataReadOut_bits_value_T_54 [63:9] = { \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] \_io_dataReadOut_bits_value_T_54 [8] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23063$16555:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \_io_dataReadOut_bits_value_T_40 \io_coordinator_read_bits_DATA [55:48] }, Y=\_io_dataReadOut_bits_value_T_55
      New ports: A=9'000000000, B={ \_io_dataReadOut_bits_value_T_40 [0] \io_coordinator_read_bits_DATA [55:48] }, Y=\_io_dataReadOut_bits_value_T_55 [8:0]
      New connections: \_io_dataReadOut_bits_value_T_55 [63:9] = { \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] \_io_dataReadOut_bits_value_T_55 [8] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23065$16556:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \_io_dataReadOut_bits_value_T_46 \io_coordinator_read_bits_DATA [63:56] }, Y=\_io_dataReadOut_bits_value_T_56
      New ports: A=9'000000000, B={ \_io_dataReadOut_bits_value_T_46 [0] \io_coordinator_read_bits_DATA [63:56] }, Y=\_io_dataReadOut_bits_value_T_56 [8:0]
      New connections: \_io_dataReadOut_bits_value_T_56 [63:9] = { \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] \_io_dataReadOut_bits_value_T_56 [8] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23083$16569:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \_io_dataReadOut_bits_value_T_68 \io_coordinator_read_bits_DATA [15:0] }, Y=\_io_dataReadOut_bits_value_T_89
      New ports: A=17'00000000000000000, B={ \_io_dataReadOut_bits_value_T_68 [0] \io_coordinator_read_bits_DATA [15:0] }, Y=\_io_dataReadOut_bits_value_T_89 [16:0]
      New connections: \_io_dataReadOut_bits_value_T_89 [63:17] = { \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] \_io_dataReadOut_bits_value_T_89 [16] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23085$16570:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \_io_dataReadOut_bits_value_T_74 \io_coordinator_read_bits_DATA [31:16] }, Y=\_io_dataReadOut_bits_value_T_90
      New ports: A=17'00000000000000000, B={ \_io_dataReadOut_bits_value_T_74 [0] \io_coordinator_read_bits_DATA [31:16] }, Y=\_io_dataReadOut_bits_value_T_90 [16:0]
      New connections: \_io_dataReadOut_bits_value_T_90 [63:17] = { \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] \_io_dataReadOut_bits_value_T_90 [16] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23087$16571:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \_io_dataReadOut_bits_value_T_80 \io_coordinator_read_bits_DATA [47:32] }, Y=\_io_dataReadOut_bits_value_T_91
      New ports: A=17'00000000000000000, B={ \_io_dataReadOut_bits_value_T_80 [0] \io_coordinator_read_bits_DATA [47:32] }, Y=\_io_dataReadOut_bits_value_T_91 [16:0]
      New connections: \_io_dataReadOut_bits_value_T_91 [63:17] = { \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] \_io_dataReadOut_bits_value_T_91 [16] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23089$16572:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \_io_dataReadOut_bits_value_T_86 \io_coordinator_read_bits_DATA [63:48] }, Y=\_io_dataReadOut_bits_value_T_92
      New ports: A=17'00000000000000000, B={ \_io_dataReadOut_bits_value_T_86 [0] \io_coordinator_read_bits_DATA [63:48] }, Y=\_io_dataReadOut_bits_value_T_92 [16:0]
      New connections: \_io_dataReadOut_bits_value_T_92 [63:17] = { \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] \_io_dataReadOut_bits_value_T_92 [16] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23100$16579:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \_io_dataReadOut_bits_value_T_100 \io_coordinator_read_bits_DATA [31:0] }, Y=\_io_dataReadOut_bits_value_T_109
      New ports: A=33'000000000000000000000000000000000, B={ \_io_dataReadOut_bits_value_T_100 [0] \io_coordinator_read_bits_DATA [31:0] }, Y=\_io_dataReadOut_bits_value_T_109 [32:0]
      New connections: \_io_dataReadOut_bits_value_T_109 [63:33] = { \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] \_io_dataReadOut_bits_value_T_109 [32] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23102$16580:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B={ \_io_dataReadOut_bits_value_T_106 \io_coordinator_read_bits_DATA [63:32] }, Y=\_io_dataReadOut_bits_value_T_110
      New ports: A=33'000000000000000000000000000000000, B={ \_io_dataReadOut_bits_value_T_106 [0] \io_coordinator_read_bits_DATA [63:32] }, Y=\_io_dataReadOut_bits_value_T_110 [32:0]
      New connections: \_io_dataReadOut_bits_value_T_110 [63:33] = { \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] \_io_dataReadOut_bits_value_T_110 [32] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23255$16677:
      Old ports: A=\_GEN_9, B=64'0000000000000000000000000000000000000000000000000000000000000000, Y=\io_coordinator_readAddress_bits_ADDR
      New ports: A=\_GEN_9 [63:3], B=61'0000000000000000000000000000000000000000000000000000000000000, Y=\io_coordinator_readAddress_bits_ADDR [63:3]
      New connections: \io_coordinator_readAddress_bits_ADDR [2:0] = 3'000
  Optimizing cells in module \ExternalMemoryInterface.
  Optimizing cells in module \FIFO.
  Optimizing cells in module \FIFO_1.
  Optimizing cells in module \FIFO_3.
  Optimizing cells in module \FIFO_4.
  Optimizing cells in module \FIFO_5.
  Optimizing cells in module \FIFO_6.
  Optimizing cells in module \Fetch.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:2049$1609:
      Old ports: A=3'000, B=3'101, Y=\_T_12
      New ports: A=1'0, B=1'1, Y=\_T_12 [0]
      New connections: \_T_12 [2:1] = { \_T_12 [0] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:2059$1624:
      Old ports: A=3'100, B=3'000, Y=\_T_30
      New ports: A=1'1, B=1'0, Y=\_T_30 [2]
      New connections: \_T_30 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:2068$1634:
      Old ports: A=3'000, B=3'101, Y=\_T_49
      New ports: A=1'0, B=1'1, Y=\_T_49 [0]
      New connections: \_T_49 [2:1] = { \_T_49 [0] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:2079$1650:
      Old ports: A=3'100, B=3'000, Y=\_T_66
      New ports: A=1'1, B=1'0, Y=\_T_66 [2]
      New connections: \_T_66 [1:0] = 2'00
  Optimizing cells in module \Fetch.
  Optimizing cells in module \FetchBuffer.
  Optimizing cells in module \Fetch_1.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:2237$1695:
      Old ports: A=3'000, B=3'101, Y=\_T_12
      New ports: A=1'0, B=1'1, Y=\_T_12 [0]
      New connections: \_T_12 [2:1] = { \_T_12 [0] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:2247$1710:
      Old ports: A=3'100, B=3'000, Y=\_T_30
      New ports: A=1'1, B=1'0, Y=\_T_30 [2]
      New connections: \_T_30 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:2256$1720:
      Old ports: A=3'000, B=3'101, Y=\_T_49
      New ports: A=1'0, B=1'1, Y=\_T_49 [0]
      New connections: \_T_49 [2:1] = { \_T_49 [0] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:2267$1736:
      Old ports: A=3'100, B=3'000, Y=\_T_66
      New ports: A=1'1, B=1'0, Y=\_T_66 [2]
      New connections: \_T_66 [1:0] = 2'00
  Optimizing cells in module \Fetch_1.
  Optimizing cells in module \InstructionChecker.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22138$16254:
      Old ports: A=3'011, B=3'100, Y=\_output_instruction_T_6
      New ports: A=2'01, B=2'10, Y={ \_output_instruction_T_6 [2] \_output_instruction_T_6 [0] }
      New connections: \_output_instruction_T_6 [1] = \_output_instruction_T_6 [0]
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22140$16257:
      Old ports: A=4'1111, B=4'0101, Y=\_output_instruction_T_9
      New ports: A=1'1, B=1'0, Y=\_output_instruction_T_9 [1]
      New connections: { \_output_instruction_T_9 [3:2] \_output_instruction_T_9 [0] } = { \_output_instruction_T_9 [1] 2'11 }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22153$16282:
      Old ports: A=3'110, B=3'000, Y=\_output_branch_T_2
      New ports: A=1'1, B=1'0, Y=\_output_branch_T_2 [1]
      New connections: { \_output_branch_T_2 [2] \_output_branch_T_2 [0] } = { \_output_branch_T_2 [1] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22160$16297:
      Old ports: A=3'100, B=3'000, Y=\_output_operationWidth_T_4
      New ports: A=1'1, B=1'0, Y=\_output_operationWidth_T_4 [2]
      New connections: \_output_operationWidth_T_4 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22167$16307:
      Old ports: A=3'100, B=3'010, Y=\_output_operationWidth_T_15
      New ports: A=2'10, B=2'01, Y=\_output_operationWidth_T_15 [2:1]
      New connections: \_output_operationWidth_T_15 [0] = 1'0
  Optimizing cells in module \InstructionChecker.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22154$16284:
      Old ports: A=\_output_branch_T_2, B=3'001, Y=\_output_branch_T_4
      New ports: A={ \_output_branch_T_2 [1] 1'0 }, B=2'01, Y=\_output_branch_T_4 [1:0]
      New connections: \_output_branch_T_4 [2] = \_output_branch_T_4 [1]
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:22161$16299:
      Old ports: A=\_output_operationWidth_T_4, B=3'001, Y=\_output_operationWidth_T_6
      New ports: A={ \_output_operationWidth_T_4 [2] 1'0 }, B=2'01, Y={ \_output_operationWidth_T_6 [2] \_output_operationWidth_T_6 [0] }
      New connections: \_output_operationWidth_T_6 [1] = 1'0
  Optimizing cells in module \InstructionChecker.
  Optimizing cells in module \InstructionMemoryCache.
  Optimizing cells in module \InstructionMemoryCache_1.
  Optimizing cells in module \LoadStoreQueue.
  Optimizing cells in module \OpcodeFormatChecker.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16789$12844:
      Old ports: A=3'110, B=3'001, Y=\_io_format_T_1
      New ports: A=2'10, B=2'01, Y=\_io_format_T_1 [1:0]
      New connections: \_io_format_T_1 [2] = \_io_format_T_1 [1]
  Optimizing cells in module \OpcodeFormatChecker.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16790$12846:
      Old ports: A=\_io_format_T_1, B=3'001, Y=\_io_format_T_3
      New ports: A=\_io_format_T_1 [1:0], B=2'01, Y=\_io_format_T_3 [1:0]
      New connections: \_io_format_T_3 [2] = \_io_format_T_3 [1]
  Optimizing cells in module \OpcodeFormatChecker.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16791$12848:
      Old ports: A=\_io_format_T_3, B=3'001, Y=\_io_format_T_5
      New ports: A=\_io_format_T_3 [1:0], B=2'01, Y=\_io_format_T_5 [1:0]
      New connections: \_io_format_T_5 [2] = \_io_format_T_5 [1]
  Optimizing cells in module \OpcodeFormatChecker.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16792$12850:
      Old ports: A=\_io_format_T_5, B=3'001, Y=\_io_format_T_7
      New ports: A=\_io_format_T_5 [1:0], B=2'01, Y=\_io_format_T_7 [1:0]
      New connections: \_io_format_T_7 [2] = \_io_format_T_7 [1]
  Optimizing cells in module \OpcodeFormatChecker.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16793$12852:
      Old ports: A=\_io_format_T_7, B=3'001, Y=\_io_format_T_9
      New ports: A=\_io_format_T_7 [1:0], B=2'01, Y=\_io_format_T_9 [1:0]
      New connections: \_io_format_T_9 [2] = \_io_format_T_9 [1]
  Optimizing cells in module \OpcodeFormatChecker.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:16794$12854:
      Old ports: A=\_io_format_T_9, B=3'001, Y=\_io_format_T_11
      New ports: A=\_io_format_T_9 [1:0], B=2'01, Y=\_io_format_T_11 [1:0]
      New connections: \_io_format_T_11 [2] = \_io_format_T_11 [1]
  Optimizing cells in module \OpcodeFormatChecker.
  Optimizing cells in module \OutputCollector.
  Optimizing cells in module \RRArbiter.
  Optimizing cells in module \RRArbiter_1.
  Optimizing cells in module \RRArbiter_2.
  Optimizing cells in module \RegisterFile.
  Optimizing cells in module \RegisterFile_1.
  Optimizing cells in module \ReorderBuffer.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:4108$3567:
      Old ports: A=3'011, B=3'100, Y=\_tail_T_4
      New ports: A=2'01, B=2'10, Y={ \_tail_T_4 [2] \_tail_T_4 [0] }
      New connections: \_tail_T_4 [1] = \_tail_T_4 [0]
  Optimizing cells in module \ReorderBuffer.
  Optimizing cells in module \ReorderBuffer_1.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:7659$6756:
      Old ports: A=3'011, B=3'100, Y=\_tail_T_4
      New ports: A=2'01, B=2'10, Y={ \_tail_T_4 [2] \_tail_T_4 [0] }
      New connections: \_tail_T_4 [1] = \_tail_T_4 [0]
  Optimizing cells in module \ReorderBuffer_1.
  Optimizing cells in module \ReservationStation.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:18530$13230:
      Old ports: A=3'000, B=3'111, Y=\_executeIndex_T
      New ports: A=1'0, B=1'1, Y=\_executeIndex_T [0]
      New connections: \_executeIndex_T [2:1] = { \_executeIndex_T [0] \_executeIndex_T [0] }
  Optimizing cells in module \ReservationStation.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:18531$13231:
      Old ports: A=\_executeIndex_T, B=3'110, Y=\_executeIndex_T_1
      New ports: A={ \_executeIndex_T [0] \_executeIndex_T [0] }, B=2'10, Y=\_executeIndex_T_1 [1:0]
      New connections: \_executeIndex_T_1 [2] = \_executeIndex_T_1 [1]
  Optimizing cells in module \ReservationStation.
  Optimizing cells in module \SourceTagSelector.
  Optimizing cells in module \SourceTagSelector_2.
  Optimizing cells in module \ValueSelector1.
  Optimizing cells in module \ValueSelector2.
Performed a total of 108 changes.

5.33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Executor'.
Finding identical cells in module `\ExternalMemoryInterface'.
<suppressed ~18 debug messages>
Finding identical cells in module `\FIFO'.
Finding identical cells in module `\FIFO_1'.
Finding identical cells in module `\FIFO_3'.
Finding identical cells in module `\FIFO_4'.
Finding identical cells in module `\FIFO_5'.
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\FetchBuffer'.
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\InstructionChecker'.
<suppressed ~6 debug messages>
Finding identical cells in module `\InstructionMemoryCache'.
Finding identical cells in module `\InstructionMemoryCache_1'.
Finding identical cells in module `\LoadStoreQueue'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\ReorderBuffer'.
Finding identical cells in module `\ReorderBuffer_1'.
Finding identical cells in module `\ReservationStation'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 8 cells.

5.33.6. Executing OPT_SHARE pass.

5.33.7. Executing OPT_DFF pass (perform DFF optimizations).

5.33.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..

5.33.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
<suppressed ~1 debug messages>
Optimizing module DataMemoryBuffer.
<suppressed ~39 debug messages>
Optimizing module Decoder.
<suppressed ~3 debug messages>
Optimizing module Decoder_1.
<suppressed ~3 debug messages>
Optimizing module Decoder_2.
<suppressed ~3 debug messages>
Optimizing module Decoder_3.
<suppressed ~3 debug messages>
Optimizing module Executor.
<suppressed ~3 debug messages>
Optimizing module ExternalMemoryInterface.
<suppressed ~52 debug messages>
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
<suppressed ~4 debug messages>
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
<suppressed ~4 debug messages>
Optimizing module InstructionChecker.
<suppressed ~2 debug messages>
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
<suppressed ~1 debug messages>
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.33.10. Rerunning OPT passes. (Maybe there is more to do..)

5.33.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Arbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \B4Processor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \BranchOutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \CheckBranch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \DataMemoryBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Executor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ExternalMemoryInterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Fetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FetchBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LoadStoreQueue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OpcodeFormatChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RRArbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReservationStation..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3215 debug messages>

5.33.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Arbiter.
  Optimizing cells in module \B4Processor.
  Optimizing cells in module \BranchOutputCollector.
  Optimizing cells in module \CheckBranch.
  Optimizing cells in module \DataMemoryBuffer.
  Optimizing cells in module \Decoder.
  Optimizing cells in module \Decoder_1.
  Optimizing cells in module \Decoder_2.
  Optimizing cells in module \Decoder_3.
  Optimizing cells in module \Executor.
  Optimizing cells in module \ExternalMemoryInterface.
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23106$16583:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\_io_dataReadOut_bits_value_T_63, Y=\_io_dataReadOut_bits_value_T_113
      New ports: A=9'000000000, B=$auto$opt_expr.cc:205:group_cell_inputs$28884, Y=\_io_dataReadOut_bits_value_T_113 [8:0]
      New connections: \_io_dataReadOut_bits_value_T_113 [63:9] = { \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] \_io_dataReadOut_bits_value_T_113 [8] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23107$16584:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\_io_dataReadOut_bits_value_T_95, Y=\_io_dataReadOut_bits_value_T_114
      New ports: A=17'00000000000000000, B=$auto$opt_expr.cc:205:group_cell_inputs$28876, Y=\_io_dataReadOut_bits_value_T_114 [16:0]
      New connections: \_io_dataReadOut_bits_value_T_114 [63:17] = { \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] \_io_dataReadOut_bits_value_T_114 [16] }
    Consolidated identical input bits for $mux cell $ternary$B4Processor.v:23109$16585:
      Old ports: A=64'0000000000000000000000000000000000000000000000000000000000000000, B=\_io_dataReadOut_bits_value_T_111, Y=\_io_dataReadOut_bits_value_T_115
      New ports: A=33'000000000000000000000000000000000, B=$auto$opt_expr.cc:205:group_cell_inputs$28868, Y=\_io_dataReadOut_bits_value_T_115 [32:0]
      New connections: \_io_dataReadOut_bits_value_T_115 [63:33] = { \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] \_io_dataReadOut_bits_value_T_115 [32] }
  Optimizing cells in module \ExternalMemoryInterface.
  Optimizing cells in module \FIFO.
  Optimizing cells in module \FIFO_1.
  Optimizing cells in module \FIFO_3.
  Optimizing cells in module \FIFO_4.
  Optimizing cells in module \FIFO_5.
  Optimizing cells in module \FIFO_6.
  Optimizing cells in module \Fetch.
  Optimizing cells in module \FetchBuffer.
  Optimizing cells in module \Fetch_1.
  Optimizing cells in module \InstructionChecker.
  Optimizing cells in module \InstructionMemoryCache.
  Optimizing cells in module \InstructionMemoryCache_1.
  Optimizing cells in module \LoadStoreQueue.
  Optimizing cells in module \OpcodeFormatChecker.
  Optimizing cells in module \OutputCollector.
  Optimizing cells in module \RRArbiter.
  Optimizing cells in module \RRArbiter_1.
  Optimizing cells in module \RRArbiter_2.
  Optimizing cells in module \RegisterFile.
  Optimizing cells in module \RegisterFile_1.
  Optimizing cells in module \ReorderBuffer.
  Optimizing cells in module \ReorderBuffer_1.
  Optimizing cells in module \ReservationStation.
  Optimizing cells in module \SourceTagSelector.
  Optimizing cells in module \SourceTagSelector_2.
  Optimizing cells in module \ValueSelector1.
  Optimizing cells in module \ValueSelector2.
Performed a total of 3 changes.

5.33.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Executor'.
Finding identical cells in module `\ExternalMemoryInterface'.
Finding identical cells in module `\FIFO'.
Finding identical cells in module `\FIFO_1'.
Finding identical cells in module `\FIFO_3'.
Finding identical cells in module `\FIFO_4'.
Finding identical cells in module `\FIFO_5'.
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\FetchBuffer'.
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\InstructionChecker'.
Finding identical cells in module `\InstructionMemoryCache'.
Finding identical cells in module `\InstructionMemoryCache_1'.
Finding identical cells in module `\LoadStoreQueue'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\ReorderBuffer'.
Finding identical cells in module `\ReorderBuffer_1'.
Finding identical cells in module `\ReservationStation'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 0 cells.

5.33.14. Executing OPT_SHARE pass.

5.33.15. Executing OPT_DFF pass (perform DFF optimizations).

5.33.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..
Removed 0 unused cells and 16 unused wires.
<suppressed ~20 debug messages>

5.33.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
<suppressed ~8 debug messages>
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.33.18. Rerunning OPT passes. (Maybe there is more to do..)

5.33.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Arbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \B4Processor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \BranchOutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \CheckBranch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \DataMemoryBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Executor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ExternalMemoryInterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Fetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FetchBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LoadStoreQueue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OpcodeFormatChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RRArbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReservationStation..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3204 debug messages>

5.33.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Arbiter.
  Optimizing cells in module \B4Processor.
  Optimizing cells in module \BranchOutputCollector.
  Optimizing cells in module \CheckBranch.
  Optimizing cells in module \DataMemoryBuffer.
  Optimizing cells in module \Decoder.
  Optimizing cells in module \Decoder_1.
  Optimizing cells in module \Decoder_2.
  Optimizing cells in module \Decoder_3.
  Optimizing cells in module \Executor.
  Optimizing cells in module \ExternalMemoryInterface.
  Optimizing cells in module \FIFO.
  Optimizing cells in module \FIFO_1.
  Optimizing cells in module \FIFO_3.
  Optimizing cells in module \FIFO_4.
  Optimizing cells in module \FIFO_5.
  Optimizing cells in module \FIFO_6.
  Optimizing cells in module \Fetch.
  Optimizing cells in module \FetchBuffer.
  Optimizing cells in module \Fetch_1.
  Optimizing cells in module \InstructionChecker.
  Optimizing cells in module \InstructionMemoryCache.
  Optimizing cells in module \InstructionMemoryCache_1.
  Optimizing cells in module \LoadStoreQueue.
  Optimizing cells in module \OpcodeFormatChecker.
  Optimizing cells in module \OutputCollector.
  Optimizing cells in module \RRArbiter.
  Optimizing cells in module \RRArbiter_1.
  Optimizing cells in module \RRArbiter_2.
  Optimizing cells in module \RegisterFile.
  Optimizing cells in module \RegisterFile_1.
  Optimizing cells in module \ReorderBuffer.
  Optimizing cells in module \ReorderBuffer_1.
  Optimizing cells in module \ReservationStation.
  Optimizing cells in module \SourceTagSelector.
  Optimizing cells in module \SourceTagSelector_2.
  Optimizing cells in module \ValueSelector1.
  Optimizing cells in module \ValueSelector2.
Performed a total of 0 changes.

5.33.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Executor'.
Finding identical cells in module `\ExternalMemoryInterface'.
Finding identical cells in module `\FIFO'.
Finding identical cells in module `\FIFO_1'.
Finding identical cells in module `\FIFO_3'.
Finding identical cells in module `\FIFO_4'.
Finding identical cells in module `\FIFO_5'.
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\FetchBuffer'.
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\InstructionChecker'.
Finding identical cells in module `\InstructionMemoryCache'.
Finding identical cells in module `\InstructionMemoryCache_1'.
Finding identical cells in module `\LoadStoreQueue'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\ReorderBuffer'.
Finding identical cells in module `\ReorderBuffer_1'.
Finding identical cells in module `\ReservationStation'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 0 cells.

5.33.22. Executing OPT_SHARE pass.

5.33.23. Executing OPT_DFF pass (perform DFF optimizations).

5.33.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

5.33.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.33.26. Rerunning OPT passes. (Maybe there is more to do..)

5.33.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \Arbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \B4Processor..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \BranchOutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \CheckBranch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \DataMemoryBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Decoder_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Executor..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ExternalMemoryInterface..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_3..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_4..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_5..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FIFO_6..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \Fetch..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \FetchBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \Fetch_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \InstructionMemoryCache_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \LoadStoreQueue..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OpcodeFormatChecker..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \OutputCollector..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RRArbiter..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RRArbiter_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RegisterFile_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReorderBuffer_1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ReservationStation..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \SourceTagSelector_2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector1..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \ValueSelector2..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~3204 debug messages>

5.33.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \Arbiter.
  Optimizing cells in module \B4Processor.
  Optimizing cells in module \BranchOutputCollector.
  Optimizing cells in module \CheckBranch.
  Optimizing cells in module \DataMemoryBuffer.
  Optimizing cells in module \Decoder.
  Optimizing cells in module \Decoder_1.
  Optimizing cells in module \Decoder_2.
  Optimizing cells in module \Decoder_3.
  Optimizing cells in module \Executor.
  Optimizing cells in module \ExternalMemoryInterface.
  Optimizing cells in module \FIFO.
  Optimizing cells in module \FIFO_1.
  Optimizing cells in module \FIFO_3.
  Optimizing cells in module \FIFO_4.
  Optimizing cells in module \FIFO_5.
  Optimizing cells in module \FIFO_6.
  Optimizing cells in module \Fetch.
  Optimizing cells in module \FetchBuffer.
  Optimizing cells in module \Fetch_1.
  Optimizing cells in module \InstructionChecker.
  Optimizing cells in module \InstructionMemoryCache.
  Optimizing cells in module \InstructionMemoryCache_1.
  Optimizing cells in module \LoadStoreQueue.
  Optimizing cells in module \OpcodeFormatChecker.
  Optimizing cells in module \OutputCollector.
  Optimizing cells in module \RRArbiter.
  Optimizing cells in module \RRArbiter_1.
  Optimizing cells in module \RRArbiter_2.
  Optimizing cells in module \RegisterFile.
  Optimizing cells in module \RegisterFile_1.
  Optimizing cells in module \ReorderBuffer.
  Optimizing cells in module \ReorderBuffer_1.
  Optimizing cells in module \ReservationStation.
  Optimizing cells in module \SourceTagSelector.
  Optimizing cells in module \SourceTagSelector_2.
  Optimizing cells in module \ValueSelector1.
  Optimizing cells in module \ValueSelector2.
Performed a total of 0 changes.

5.33.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
Finding identical cells in module `\DataMemoryBuffer'.
Finding identical cells in module `\Decoder'.
Finding identical cells in module `\Decoder_1'.
Finding identical cells in module `\Decoder_2'.
Finding identical cells in module `\Decoder_3'.
Finding identical cells in module `\Executor'.
Finding identical cells in module `\ExternalMemoryInterface'.
Finding identical cells in module `\FIFO'.
Finding identical cells in module `\FIFO_1'.
Finding identical cells in module `\FIFO_3'.
Finding identical cells in module `\FIFO_4'.
Finding identical cells in module `\FIFO_5'.
Finding identical cells in module `\FIFO_6'.
Finding identical cells in module `\Fetch'.
Finding identical cells in module `\FetchBuffer'.
Finding identical cells in module `\Fetch_1'.
Finding identical cells in module `\InstructionChecker'.
Finding identical cells in module `\InstructionMemoryCache'.
Finding identical cells in module `\InstructionMemoryCache_1'.
Finding identical cells in module `\LoadStoreQueue'.
Finding identical cells in module `\OpcodeFormatChecker'.
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
Finding identical cells in module `\RegisterFile_1'.
Finding identical cells in module `\ReorderBuffer'.
Finding identical cells in module `\ReorderBuffer_1'.
Finding identical cells in module `\ReservationStation'.
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 0 cells.

5.33.30. Executing OPT_SHARE pass.

5.33.31. Executing OPT_DFF pass (perform DFF optimizations).

5.33.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..

5.33.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.33.34. Finished OPT passes. (There is nothing left to do.)

5.34. Executing XILINX_SRL pass (Xilinx shift register extraction).

5.35. Executing TECHMAP pass (map to technology primitives).

5.35.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.35.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/xilinx/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/xilinx/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_xilinx_lcu'.
Generating RTLIL representation for module `\_80_xilinx_alu'.
Successfully finished Verilog frontend.

5.35.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $mux.
Using template $paramod$db8e6ecc9d55e30ac39e4a71c23a85841d46f485\_80_xilinx_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $sdff.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$674141544fade965cf052b5e9d5b65813fc4e151\_80_xilinx_alu for cells of type $alu.
Using template $paramod$3fdddd4e05093070a7bb0927352a42d480ba78cb\_80_xilinx_alu for cells of type $alu.
Using template $paramod$c5889e3aade8c81d9e12b867f80c51c838383c94\_80_xilinx_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$91c850f208b09a82c432e5bc8cf4e2212817b89d\_80_xilinx_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod\_90_lcu\WIDTH=s32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod$175e67c02b86e96b1288b9dc100122520d7240d8\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$b7fc5209a80c138aa819cd3661ea829f06cf5d03\_80_xilinx_alu for cells of type $alu.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$23392241f615af238f9dcb67c24c2afebf5ed157\_80_xilinx_alu for cells of type $alu.
Using template $paramod$27b4775f8e65a0b4323ace0c75ca67bd970b4c7e\_80_xilinx_alu for cells of type $alu.
Using template $paramod$2e6fa573ec247c71d1c073ac74c0c20475cdfbce\_80_xilinx_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xnor.
Using template $paramod$constmap:1204d75111519242e575dcb30fa45503aa301e66$paramod$88eea8db8954ba064a2e8671fc71d372945341cd\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:1204d75111519242e575dcb30fa45503aa301e66$paramod$a38ca63589d5073c040497f4afd2c2746e4720be\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_80_xilinx_lcu\WIDTH=s32'00000000000000000000000000010110 for cells of type $lcu.
Using template $paramod$constmap:1204d75111519242e575dcb30fa45503aa301e66$paramod$da1b9d25017ab9fffdd54bedbb1540b15f92e8df\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$a47efae8722fdb6c140f49928f489f9be0e6a12d\_80_xilinx_alu for cells of type $alu.
Using template $paramod$9676fc8d2ea63352c2641c55491e510812198497\_80_xilinx_alu for cells of type $alu.
Using template $paramod$f9681284114edd7d883bdb2341192d6d5f2c77c5\_80_xilinx_alu for cells of type $alu.
Using template $paramod$19af850d45beb43a117905642cab1335e34b6002\_80_xilinx_alu for cells of type $alu.
Using template $paramod$0b5f4853845f8349301a0ae7f16ca2d2ca321d58\_80_xilinx_alu for cells of type $alu.
No more expansions possible.
<suppressed ~16903 debug messages>

5.36. Executing OPT pass (performing simple optimizations).

5.36.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
<suppressed ~107 debug messages>
Optimizing module DataMemoryBuffer.
<suppressed ~449 debug messages>
Optimizing module Decoder.
<suppressed ~303 debug messages>
Optimizing module Decoder_1.
<suppressed ~303 debug messages>
Optimizing module Decoder_2.
<suppressed ~304 debug messages>
Optimizing module Decoder_3.
<suppressed ~304 debug messages>
Optimizing module Executor.
<suppressed ~2075 debug messages>
Optimizing module ExternalMemoryInterface.
<suppressed ~380 debug messages>
Optimizing module FIFO.
<suppressed ~14 debug messages>
Optimizing module FIFO_1.
<suppressed ~24 debug messages>
Optimizing module FIFO_3.
<suppressed ~26 debug messages>
Optimizing module FIFO_4.
<suppressed ~14 debug messages>
Optimizing module FIFO_5.
<suppressed ~14 debug messages>
Optimizing module FIFO_6.
<suppressed ~14 debug messages>
Optimizing module Fetch.
<suppressed ~375 debug messages>
Optimizing module FetchBuffer.
<suppressed ~2988 debug messages>
Optimizing module Fetch_1.
<suppressed ~375 debug messages>
Optimizing module InstructionChecker.
<suppressed ~248 debug messages>
Optimizing module InstructionMemoryCache.
<suppressed ~2156 debug messages>
Optimizing module InstructionMemoryCache_1.
<suppressed ~2156 debug messages>
Optimizing module LoadStoreQueue.
<suppressed ~8933 debug messages>
Optimizing module OpcodeFormatChecker.
<suppressed ~125 debug messages>
Optimizing module OutputCollector.
Optimizing module RRArbiter.
<suppressed ~2 debug messages>
Optimizing module RRArbiter_1.
<suppressed ~2 debug messages>
Optimizing module RRArbiter_2.
<suppressed ~2 debug messages>
Optimizing module RegisterFile.
<suppressed ~9216 debug messages>
Optimizing module RegisterFile_1.
<suppressed ~9216 debug messages>
Optimizing module ReorderBuffer.
<suppressed ~19130 debug messages>
Optimizing module ReorderBuffer_1.
<suppressed ~19130 debug messages>
Optimizing module ReservationStation.
<suppressed ~10922 debug messages>
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.
<suppressed ~9 debug messages>

5.36.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\Arbiter'.
Finding identical cells in module `\B4Processor'.
Finding identical cells in module `\BranchOutputCollector'.
Finding identical cells in module `\CheckBranch'.
<suppressed ~69 debug messages>
Finding identical cells in module `\DataMemoryBuffer'.
<suppressed ~60 debug messages>
Finding identical cells in module `\Decoder'.
<suppressed ~126 debug messages>
Finding identical cells in module `\Decoder_1'.
<suppressed ~126 debug messages>
Finding identical cells in module `\Decoder_2'.
<suppressed ~126 debug messages>
Finding identical cells in module `\Decoder_3'.
<suppressed ~126 debug messages>
Finding identical cells in module `\Executor'.
<suppressed ~3069 debug messages>
Finding identical cells in module `\ExternalMemoryInterface'.
<suppressed ~240 debug messages>
Finding identical cells in module `\FIFO'.
<suppressed ~12 debug messages>
Finding identical cells in module `\FIFO_1'.
<suppressed ~12 debug messages>
Finding identical cells in module `\FIFO_3'.
<suppressed ~9 debug messages>
Finding identical cells in module `\FIFO_4'.
<suppressed ~12 debug messages>
Finding identical cells in module `\FIFO_5'.
<suppressed ~12 debug messages>
Finding identical cells in module `\FIFO_6'.
<suppressed ~6 debug messages>
Finding identical cells in module `\Fetch'.
<suppressed ~270 debug messages>
Finding identical cells in module `\FetchBuffer'.
<suppressed ~198 debug messages>
Finding identical cells in module `\Fetch_1'.
<suppressed ~270 debug messages>
Finding identical cells in module `\InstructionChecker'.
<suppressed ~420 debug messages>
Finding identical cells in module `\InstructionMemoryCache'.
<suppressed ~291 debug messages>
Finding identical cells in module `\InstructionMemoryCache_1'.
<suppressed ~291 debug messages>
Finding identical cells in module `\LoadStoreQueue'.
<suppressed ~279 debug messages>
Finding identical cells in module `\OpcodeFormatChecker'.
<suppressed ~282 debug messages>
Finding identical cells in module `\OutputCollector'.
Finding identical cells in module `\RRArbiter'.
Finding identical cells in module `\RRArbiter_1'.
Finding identical cells in module `\RRArbiter_2'.
Finding identical cells in module `\RegisterFile'.
<suppressed ~3360 debug messages>
Finding identical cells in module `\RegisterFile_1'.
<suppressed ~3360 debug messages>
Finding identical cells in module `\ReorderBuffer'.
<suppressed ~6216 debug messages>
Finding identical cells in module `\ReorderBuffer_1'.
<suppressed ~6216 debug messages>
Finding identical cells in module `\ReservationStation'.
<suppressed ~243 debug messages>
Finding identical cells in module `\SourceTagSelector'.
Finding identical cells in module `\SourceTagSelector_2'.
Finding identical cells in module `\ValueSelector1'.
Finding identical cells in module `\ValueSelector2'.
Removed a total of 8567 cells.

5.36.3. Executing OPT_DFF pass (perform DFF optimizations).

5.36.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \Arbiter..
Finding unused cells or wires in module \B4Processor..
Finding unused cells or wires in module \BranchOutputCollector..
Finding unused cells or wires in module \CheckBranch..
Finding unused cells or wires in module \DataMemoryBuffer..
Finding unused cells or wires in module \Decoder..
Finding unused cells or wires in module \Decoder_1..
Finding unused cells or wires in module \Decoder_2..
Finding unused cells or wires in module \Decoder_3..
Finding unused cells or wires in module \Executor..
Finding unused cells or wires in module \ExternalMemoryInterface..
Finding unused cells or wires in module \FIFO..
Finding unused cells or wires in module \FIFO_1..
Finding unused cells or wires in module \FIFO_3..
Finding unused cells or wires in module \FIFO_4..
Finding unused cells or wires in module \FIFO_5..
Finding unused cells or wires in module \FIFO_6..
Finding unused cells or wires in module \Fetch..
Finding unused cells or wires in module \FetchBuffer..
Finding unused cells or wires in module \Fetch_1..
Finding unused cells or wires in module \InstructionChecker..
Finding unused cells or wires in module \InstructionMemoryCache..
Finding unused cells or wires in module \InstructionMemoryCache_1..
Finding unused cells or wires in module \LoadStoreQueue..
Finding unused cells or wires in module \OpcodeFormatChecker..
Finding unused cells or wires in module \OutputCollector..
Finding unused cells or wires in module \RRArbiter..
Finding unused cells or wires in module \RRArbiter_1..
Finding unused cells or wires in module \RRArbiter_2..
Finding unused cells or wires in module \RegisterFile..
Finding unused cells or wires in module \RegisterFile_1..
Finding unused cells or wires in module \ReorderBuffer..
Finding unused cells or wires in module \ReorderBuffer_1..
Finding unused cells or wires in module \ReservationStation..
Finding unused cells or wires in module \SourceTagSelector..
Finding unused cells or wires in module \SourceTagSelector_2..
Finding unused cells or wires in module \ValueSelector1..
Finding unused cells or wires in module \ValueSelector2..
Removed 2106 unused cells and 12866 unused wires.
<suppressed ~2172 debug messages>

5.36.5. Finished fast OPT passes.

5.37. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port B4Processor.axi_readAddress_bits_ADDR using OBUF.
Mapping port B4Processor.axi_readAddress_bits_BURST using OBUF.
Mapping port B4Processor.axi_readAddress_bits_CACHE using OBUF.
Mapping port B4Processor.axi_readAddress_bits_LEN using OBUF.
Mapping port B4Processor.axi_readAddress_bits_LOCK using OBUF.
Mapping port B4Processor.axi_readAddress_bits_PROT using OBUF.
Mapping port B4Processor.axi_readAddress_bits_QOS using OBUF.
Mapping port B4Processor.axi_readAddress_bits_REGION using OBUF.
Mapping port B4Processor.axi_readAddress_bits_SIZE using OBUF.
Mapping port B4Processor.axi_readAddress_ready using IBUF.
Mapping port B4Processor.axi_readAddress_valid using OBUF.
Mapping port B4Processor.axi_read_bits_DATA using IBUF.
Mapping port B4Processor.axi_read_bits_LAST using IBUF.
Mapping port B4Processor.axi_read_bits_RESP using IBUF.
Mapping port B4Processor.axi_read_ready using OBUF.
Mapping port B4Processor.axi_read_valid using IBUF.
Mapping port B4Processor.axi_writeAddress_bits_ADDR using OBUF.
Mapping port B4Processor.axi_writeAddress_bits_BURST using OBUF.
Mapping port B4Processor.axi_writeAddress_bits_CACHE using OBUF.
Mapping port B4Processor.axi_writeAddress_bits_LEN using OBUF.
Mapping port B4Processor.axi_writeAddress_bits_LOCK using OBUF.
Mapping port B4Processor.axi_writeAddress_bits_PROT using OBUF.
Mapping port B4Processor.axi_writeAddress_bits_QOS using OBUF.
Mapping port B4Processor.axi_writeAddress_bits_REGION using OBUF.
Mapping port B4Processor.axi_writeAddress_bits_SIZE using OBUF.
Mapping port B4Processor.axi_writeAddress_ready using IBUF.
Mapping port B4Processor.axi_writeAddress_valid using OBUF.
Mapping port B4Processor.axi_writeResponse_bits_RESP using IBUF.
Mapping port B4Processor.axi_writeResponse_ready using OBUF.
Mapping port B4Processor.axi_writeResponse_valid using IBUF.
Mapping port B4Processor.axi_write_bits_DATA using OBUF.
Mapping port B4Processor.axi_write_bits_LAST using OBUF.
Mapping port B4Processor.axi_write_bits_STRB using OBUF.
Mapping port B4Processor.axi_write_ready using IBUF.
Mapping port B4Processor.axi_write_valid using OBUF.
Mapping port B4Processor.clock using IBUF.
Mapping port B4Processor.reset using IBUF.

5.38. Executing TECHMAP pass (map to technology primitives).

5.38.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

5.38.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/xilinx/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/xilinx/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$__SHREG_'.
Generating RTLIL representation for module `\$__XILINX_SHREG_'.
Generating RTLIL representation for module `\$__XILINX_MUXF78'.
Successfully finished Verilog frontend.

5.38.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~74 debug messages>
Removed 0 unused cells and 35 unused wires.

5.39. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

5.40. Executing OPT_EXPR pass (perform const folding).
Optimizing module Arbiter.
Optimizing module B4Processor.
Optimizing module BranchOutputCollector.
Optimizing module CheckBranch.
Optimizing module DataMemoryBuffer.
Optimizing module Decoder.
Optimizing module Decoder_1.
Optimizing module Decoder_2.
Optimizing module Decoder_3.
Optimizing module Executor.
Optimizing module ExternalMemoryInterface.
Optimizing module FIFO.
Optimizing module FIFO_1.
Optimizing module FIFO_3.
Optimizing module FIFO_4.
Optimizing module FIFO_5.
Optimizing module FIFO_6.
Optimizing module Fetch.
<suppressed ~4 debug messages>
Optimizing module FetchBuffer.
Optimizing module Fetch_1.
<suppressed ~4 debug messages>
Optimizing module InstructionChecker.
Optimizing module InstructionMemoryCache.
Optimizing module InstructionMemoryCache_1.
Optimizing module LoadStoreQueue.
Optimizing module OpcodeFormatChecker.
Optimizing module OutputCollector.
Optimizing module RRArbiter.
Optimizing module RRArbiter_1.
Optimizing module RRArbiter_2.
Optimizing module RegisterFile.
Optimizing module RegisterFile_1.
Optimizing module ReorderBuffer.
Optimizing module ReorderBuffer_1.
Optimizing module ReservationStation.
Optimizing module SourceTagSelector.
Optimizing module SourceTagSelector_2.
Optimizing module ValueSelector1.
Optimizing module ValueSelector2.

5.41. Executing ABC pass (technology mapping using ABC).

5.41.1. Extracting gate netlist of module `\Arbiter' to `<abc-temp-dir>/input.blif'..
Extracted 75 gates and 217 wires to a netlist network with 140 inputs and 74 outputs.

5.41.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       74
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:      140
ABC RESULTS:          output signals:       74
Removing temp directory.

5.41.2. Extracting gate netlist of module `\B4Processor' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

5.41.3. Extracting gate netlist of module `\BranchOutputCollector' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

5.41.4. Extracting gate netlist of module `\CheckBranch' to `<abc-temp-dir>/input.blif'..
Extracted 101 gates and 135 wires to a netlist network with 32 inputs and 23 outputs.

5.41.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.4.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       28
ABC RESULTS:        internal signals:       80
ABC RESULTS:           input signals:       32
ABC RESULTS:          output signals:       23
Removing temp directory.

5.41.5. Extracting gate netlist of module `\DataMemoryBuffer' to `<abc-temp-dir>/input.blif'..
Extracted 525 gates and 600 wires to a netlist network with 73 inputs and 75 outputs.

5.41.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.5.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      122
ABC RESULTS:        internal signals:      452
ABC RESULTS:           input signals:       73
ABC RESULTS:          output signals:       75
Removing temp directory.

5.41.6. Extracting gate netlist of module `\Decoder' to `<abc-temp-dir>/input.blif'..
Extracted 366 gates and 551 wires to a netlist network with 183 inputs and 227 outputs.

5.41.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.6.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      248
ABC RESULTS:        internal signals:      141
ABC RESULTS:           input signals:      183
ABC RESULTS:          output signals:      227
Removing temp directory.

5.41.7. Extracting gate netlist of module `\Decoder_1' to `<abc-temp-dir>/input.blif'..
Extracted 373 gates and 560 wires to a netlist network with 185 inputs and 219 outputs.

5.41.7.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.7.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      242
ABC RESULTS:        internal signals:      156
ABC RESULTS:           input signals:      185
ABC RESULTS:          output signals:      219
Removing temp directory.

5.41.8. Extracting gate netlist of module `\Decoder_2' to `<abc-temp-dir>/input.blif'..
Extracted 366 gates and 551 wires to a netlist network with 183 inputs and 227 outputs.

5.41.8.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.8.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      248
ABC RESULTS:        internal signals:      141
ABC RESULTS:           input signals:      183
ABC RESULTS:          output signals:      227
Removing temp directory.

5.41.9. Extracting gate netlist of module `\Decoder_3' to `<abc-temp-dir>/input.blif'..
Extracted 373 gates and 560 wires to a netlist network with 185 inputs and 219 outputs.

5.41.9.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.9.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      242
ABC RESULTS:        internal signals:      156
ABC RESULTS:           input signals:      185
ABC RESULTS:          output signals:      219
Removing temp directory.

5.41.10. Extracting gate netlist of module `\Executor' to `<abc-temp-dir>/input.blif'..
Extracted 4467 gates and 5139 wires to a netlist network with 671 inputs and 544 outputs.

5.41.10.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.10.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2447
ABC RESULTS:        internal signals:     3924
ABC RESULTS:           input signals:      671
ABC RESULTS:          output signals:      544
Removing temp directory.

5.41.11. Extracting gate netlist of module `\ExternalMemoryInterface' to `<abc-temp-dir>/input.blif'..
Extracted 1946 gates and 2266 wires to a netlist network with 319 inputs and 427 outputs.

5.41.11.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.11.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      513
ABC RESULTS:        internal signals:     1520
ABC RESULTS:           input signals:      319
ABC RESULTS:          output signals:      427
Removing temp directory.

5.41.12. Extracting gate netlist of module `\FIFO' to `<abc-temp-dir>/input.blif'..
Extracted 19 gates and 33 wires to a netlist network with 14 inputs and 11 outputs.

5.41.12.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.12.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       11
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       11
Removing temp directory.

5.41.13. Extracting gate netlist of module `\FIFO_1' to `<abc-temp-dir>/input.blif'..
Extracted 16 gates and 22 wires to a netlist network with 6 inputs and 12 outputs.

5.41.13.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.13.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       12
ABC RESULTS:        internal signals:        4
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:       12
Removing temp directory.

5.41.14. Extracting gate netlist of module `\FIFO_3' to `<abc-temp-dir>/input.blif'..
Extracted 15 gates and 20 wires to a netlist network with 5 inputs and 9 outputs.

5.41.14.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.14.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        9
ABC RESULTS:        internal signals:        6
ABC RESULTS:           input signals:        5
ABC RESULTS:          output signals:        9
Removing temp directory.

5.41.15. Extracting gate netlist of module `\FIFO_4' to `<abc-temp-dir>/input.blif'..
Extracted 19 gates and 33 wires to a netlist network with 14 inputs and 10 outputs.

5.41.15.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.15.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       10
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       10
Removing temp directory.

5.41.16. Extracting gate netlist of module `\FIFO_5' to `<abc-temp-dir>/input.blif'..
Extracted 19 gates and 33 wires to a netlist network with 14 inputs and 10 outputs.

5.41.16.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.16.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       10
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:       14
ABC RESULTS:          output signals:       10
Removing temp directory.

5.41.17. Extracting gate netlist of module `\FIFO_6' to `<abc-temp-dir>/input.blif'..
Extracted 16 gates and 27 wires to a netlist network with 11 inputs and 6 outputs.

5.41.17.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.17.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        6
ABC RESULTS:        internal signals:       10
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        6
Removing temp directory.

5.41.18. Extracting gate netlist of module `\Fetch' to `<abc-temp-dir>/input.blif'..
Extracted 690 gates and 1069 wires to a netlist network with 377 inputs and 243 outputs.

5.41.18.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.18.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      272
ABC RESULTS:        internal signals:      449
ABC RESULTS:           input signals:      377
ABC RESULTS:          output signals:      243
Removing temp directory.

5.41.19. Extracting gate netlist of module `\FetchBuffer' to `<abc-temp-dir>/input.blif'..
Extracted 4702 gates and 5685 wires to a netlist network with 982 inputs and 978 outputs.

5.41.19.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.19.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2348
ABC RESULTS:        internal signals:     3725
ABC RESULTS:           input signals:      982
ABC RESULTS:          output signals:      978
Removing temp directory.

5.41.20. Extracting gate netlist of module `\Fetch_1' to `<abc-temp-dir>/input.blif'..
Extracted 689 gates and 1068 wires to a netlist network with 377 inputs and 243 outputs.

5.41.20.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.20.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      272
ABC RESULTS:        internal signals:      448
ABC RESULTS:           input signals:      377
ABC RESULTS:          output signals:      243
Removing temp directory.

5.41.21. Extracting gate netlist of module `\InstructionChecker' to `<abc-temp-dir>/input.blif'..
Extracted 184 gates and 198 wires to a netlist network with 12 inputs and 14 outputs.

5.41.21.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.21.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       31
ABC RESULTS:        internal signals:      172
ABC RESULTS:           input signals:       12
ABC RESULTS:          output signals:       14
Removing temp directory.

5.41.22. Extracting gate netlist of module `\InstructionMemoryCache' to `<abc-temp-dir>/input.blif'..
Extracted 4519 gates and 5537 wires to a netlist network with 1017 inputs and 149 outputs.

5.41.22.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.22.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1955
ABC RESULTS:        internal signals:     4371
ABC RESULTS:           input signals:     1017
ABC RESULTS:          output signals:      149
Removing temp directory.

5.41.23. Extracting gate netlist of module `\InstructionMemoryCache_1' to `<abc-temp-dir>/input.blif'..
Extracted 4519 gates and 5537 wires to a netlist network with 1017 inputs and 149 outputs.

5.41.23.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.23.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2142
ABC RESULTS:        internal signals:     4371
ABC RESULTS:           input signals:     1017
ABC RESULTS:          output signals:      149
Removing temp directory.

5.41.24. Extracting gate netlist of module `\LoadStoreQueue' to `<abc-temp-dir>/input.blif'..
Extracted 26654 gates and 28227 wires to a netlist network with 1572 inputs and 1317 outputs.

5.41.24.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.24.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     5445
ABC RESULTS:        internal signals:    25338
ABC RESULTS:           input signals:     1572
ABC RESULTS:          output signals:     1317
Removing temp directory.

5.41.25. Extracting gate netlist of module `\OpcodeFormatChecker' to `<abc-temp-dir>/input.blif'..
Extracted 71 gates and 80 wires to a netlist network with 7 inputs and 3 outputs.

5.41.25.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.25.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        3
ABC RESULTS:        internal signals:       70
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:        3
Removing temp directory.

5.41.26. Extracting gate netlist of module `\OutputCollector' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

5.41.27. Extracting gate netlist of module `\RRArbiter' to `<abc-temp-dir>/input.blif'..
Extracted 149 gates and 427 wires to a netlist network with 278 inputs and 142 outputs.

5.41.27.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.27.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      142
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:      278
ABC RESULTS:          output signals:      142
Removing temp directory.

5.41.28. Extracting gate netlist of module `\RRArbiter_1' to `<abc-temp-dir>/input.blif'..
Extracted 79 gates and 222 wires to a netlist network with 143 inputs and 74 outputs.

5.41.28.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.28.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       74
ABC RESULTS:        internal signals:        5
ABC RESULTS:           input signals:      143
ABC RESULTS:          output signals:       74
Removing temp directory.

5.41.29. Extracting gate netlist of module `\RRArbiter_2' to `<abc-temp-dir>/input.blif'..
Extracted 76 gates and 208 wires to a netlist network with 132 inputs and 69 outputs.

5.41.29.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.29.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       69
ABC RESULTS:        internal signals:        7
ABC RESULTS:           input signals:      132
ABC RESULTS:          output signals:       69
Removing temp directory.

5.41.30. Extracting gate netlist of module `\RegisterFile' to `<abc-temp-dir>/input.blif'..
Extracted 14737 gates and 17042 wires to a netlist network with 2304 inputs and 2287 outputs.

5.41.30.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + write_blif <abc-temp-dir>/output.blif 

5.41.30.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     9465
ABC RESULTS:        internal signals:    12451
ABC RESULTS:           input signals:     2304
ABC RESULTS:          output signals:     2287
Removing temp directory.

5.41.31. Extracting gate netlist of module `\RegisterFile_1' to `<abc-temp-dir>/input.blif'..
Extracted 14737 gates and 17042 wires to a netlist network with 2304 inputs and 2287 outputs.

5.41.31.1. Executing ABC.
